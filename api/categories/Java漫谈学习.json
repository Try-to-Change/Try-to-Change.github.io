{"name":"Java漫谈学习","slug":"Java漫谈学习","count":6,"postlist":[{"title":"Java安全[RMI(3)]","uid":"424a81b28b15c5b3a4612243a8ecf368","slug":"Java安全[RMI(3)]","date":"2023-10-17T14:36:06.745Z","updated":"2023-10-19T14:53:11.752Z","comments":true,"path":"api/articles/Java安全[RMI(3)].json","keywords":null,"cover":"/img/60.jpg","text":"RMI2中成功实现了codebase进行加载恶意类，但是在实际环境确实难实现符合环境 ","permalink":"/post/Java安全[RMI(3)]","photos":[],"count_time":{"symbolsCount":44,"symbolsTime":"1 mins."},"categories":[{"name":"Java漫谈学习","slug":"Java漫谈学习","count":6,"path":"api/categories/Java漫谈学习.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Java安全[RMI(2)]","uid":"bf4e441f0b57ac113941eef982a20893","slug":"Java安全[RMI(2)]","date":"2023-09-17T03:11:46.797Z","updated":"2023-10-19T14:50:16.272Z","comments":true,"path":"api/articles/Java安全[RMI(2)].json","keywords":null,"cover":"/img/59.jpg","text":"从RMI第一篇描述了RMI的通信过程和组成成分，总结一下，一个RMI过程有以下三个参与者： RMI Registry RMI Server RMI Client...","permalink":"/post/Java安全[RMI(2)]","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"Java漫谈学习","slug":"Java漫谈学习","count":6,"path":"api/categories/Java漫谈学习.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Java安全[RMI(1)]","uid":"08342c15e5fd5518f82b3bdc69d78190","slug":"Java安全[RMI(1)]","date":"2023-09-10T14:13:37.943Z","updated":"2023-10-19T14:50:27.826Z","comments":true,"path":"api/articles/Java安全[RMI(1)].json","keywords":null,"cover":"/img/58.jpg","text":"熟悉的名字，在CVE学习中，其中Apache solr 的log4j漏洞和weblogic远程代码执行都提到了RMI，作用如名， RMI（remote meth...","permalink":"/post/Java安全[RMI(1)]","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"Java漫谈学习","slug":"Java漫谈学习","count":6,"path":"api/categories/Java漫谈学习.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Java安全[反射(3)]","uid":"8c22bcc128dc13c7c13ac9d40b733df9","slug":"Java安全[反射(3)]","date":"2023-09-09T04:23:45.002Z","updated":"2023-10-19T14:51:54.918Z","comments":true,"path":"api/articles/Java安全[反射(3)].json","keywords":null,"cover":"/img/57.jpg","text":" Java执行命令的方法ProcessBuilder 反射中使用getConstructor获取构造有参构造函数 可变长参数（varargs）在反射中的意义与使...","permalink":"/post/Java安全[反射(3)]","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"Java漫谈学习","slug":"Java漫谈学习","count":6,"path":"api/categories/Java漫谈学习.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Java安全[反射(2)]","uid":"d574ea4f3aa1b406fd1d29f7afa502ba","slug":"Java安全[反射(2)]","date":"2023-08-23T01:46:39.171Z","updated":"2023-10-19T14:51:52.289Z","comments":true,"path":"api/articles/Java安全[反射(2)].json","keywords":null,"cover":"/img/50.jpg","text":" 如何利用Runtime构造payload Java安全[反射(2)]第一篇讲到过，如果想要加载一个类，可以同forName进行加载，但是正常情况下我们一般用到...","permalink":"/post/Java安全[反射(2)]","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Java漫谈学习","slug":"Java漫谈学习","count":6,"path":"api/categories/Java漫谈学习.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Java安全[反射(1)]","uid":"596851cfa889be93058fd848fb13297d","slug":"Java安全[反射(1)]","date":"2023-05-02T15:44:02.117Z","updated":"2023-10-19T14:51:48.306Z","comments":true,"path":"api/articles/Java安全[反射(1)].json","keywords":null,"cover":"/img/15.jpg","text":" “类初始化”和“类实例化”严格区分 Java安全[反射(1)]反射的概念 反射是大多数语言不可少的一部分， 指在程序运行中，对于任何一个类，都可以通过反射拿到...","permalink":"/post/Java安全[反射(1)]","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"Java漫谈学习","slug":"Java漫谈学习","count":6,"path":"api/categories/Java漫谈学习.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}