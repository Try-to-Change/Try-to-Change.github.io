{"title":"Burpsuite密码爆破","uid":"463054968cf55cbdec365eb1472bde0e","slug":"tooluse(bp-bruce)","date":"2023-02-13T13:43:45.284Z","updated":"2023-08-06T08:00:41.147Z","comments":true,"path":"api/articles/tooluse(bp-bruce).json","keywords":null,"cover":"/img/26.jpg","content":"<p><code>顺便记一下，免得后面到处翻</code></p>\n<span id=\"more\"></span>\n\n<h1 id=\"Burpsuite密码爆破\"><a href=\"#Burpsuite密码爆破\" class=\"headerlink\" title=\"Burpsuite密码爆破\"></a>Burpsuite密码爆破</h1><p>虽然不知道这个网站是那位大佬总结建立的，但还是很感谢，节省很多时间，这个网站提供了很全面的密码表</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://www.somd5.com/download/dict/\">https://www.somd5.com/download/dict/</a></p></blockquote>\n<p>之前在学习burpsuite的时候，大部分时间在用proxy和request，一直想用intruder，在做功防世界weak_auth这道题时，需要用字典爆破</p>\n<p>于是我便了解了一下这个功能</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在intruder下，主要看payload</p>\n<p>payload Sets主要用Simple list和Brute forcer</p></blockquote>\n<h2 id=\"payload\"><a href=\"#payload\" class=\"headerlink\" title=\"payload\"></a>payload</h2><h3 id=\"1-Simple-list\"><a href=\"#1-Simple-list\" class=\"headerlink\" title=\"1.Simple list\"></a>1.Simple list</h3><p>主要就是讲写好的密码列表挨个进行测试，试出可以正确登录的密码</p>\n<p><img src=\"/post/tooluse(bp-bruce)/image-20220624165348786.png\" alt=\"image-20220624165348786\"></p>\n<h3 id=\"2-Brute-forcer\"><a href=\"#2-Brute-forcer\" class=\"headerlink\" title=\"2.Brute forcer\"></a>2.Brute forcer</h3><p>就比较暴力，可以从下图看到Requset count有8,398,080次，因为他是把下面Character set里的所以字符的排列组合都试了，简单粗暴，也非常耗时间</p>\n<p><img src=\"/post/tooluse(bp-bruce)/image-20220624165405777.png\" alt=\"image-20220624165405777\"></p>\n<p>这里以一次爆破为例，可以看到下方有两个<code>§ §</code>，这两处就是payload输入点，我们输入爆破数据就不断在这两处上传测试</p>\n<p><img src=\"/post/tooluse(bp-bruce)/image-20220624170325792.png\" alt=\"image-20220624170325792\"></p>\n<p>如果我们已经知道了一处的数据，比如下方的username为admin，就不用用测试数据爆破，只用在password处爆破</p>\n<p><img src=\"/post/tooluse(bp-bruce)/image-20220624170753675.png\" alt=\"image-20220624170753675\"></p>\n<p>那么爆破完后，如何分辨哪个才是正确密码呢</p>\n<p>主要分析length，如果出现与大部分length不同的密码，那么大概率就是正确密码，比如此处， 123456就是正确密码</p>\n<p><img src=\"/post/tooluse(bp-bruce)/image-20220624170455916.png\" alt=\"image-20220624170455916\"></p>\n<h3 id=\"3-Numbers\"><a href=\"#3-Numbers\" class=\"headerlink\" title=\"3.Numbers\"></a>3.Numbers</h3><p><img src=\"/post/tooluse(bp-bruce)/image-20220626083426611.png\" alt=\"image-20220626083426611\"></p>\n<p>纯数字型爆破，From是开始数字，To是结束数字，Step是间隔多少数字爆破一次</p>\n<h3 id=\"4-Runtime-file\"><a href=\"#4-Runtime-file\" class=\"headerlink\" title=\"4.Runtime file\"></a>4.Runtime file</h3><p>选择自己的字典文件</p>\n<h3 id=\"5-Custom-iterator\"><a href=\"#5-Custom-iterator\" class=\"headerlink\" title=\"5.Custom iterator\"></a>5.Custom iterator</h3><p>（可以自定义拼接字段，比如username:password，这样爆破的两列数据被:隔开进行爆破）</p>\n<p>自定义迭代器。这种负载类型，可以配置项目的多个列表，并使用生成的列表中项的所有排列有效载荷。它提供了一个强有力的方法根据给定的模板，以产生字符或其他项目的定制排列。</p>\n<h3 id=\"6-Character-substitution\"><a href=\"#6-Character-substitution\" class=\"headerlink\" title=\"6.Character substitution\"></a>6.Character substitution</h3><p>字符替换。此负载类型允许您配置一个字符串列表，并应用各种字符替换到每个项目。这可能是在密码猜测攻击非常有用，用来产生在字典中的单词常见的变化。</p>\n<h3 id=\"7-Case-modification\"><a href=\"#7-Case-modification\" class=\"headerlink\" title=\"7.Case modification\"></a>7.Case modification</h3><p>此负载类型允许配置一个字符串列表，并应用各种情况下修改每个项目。这可能对密码猜测攻击非常有用，用来产生在字典中的单词的情况下的变化。</p>\n<h3 id=\"8-Recursivegrep\"><a href=\"#8-Recursivegrep\" class=\"headerlink\" title=\"8.Recursivegrep\"></a>8.Recursivegrep</h3><p>递归grep，要用这个必须在Intruder&gt;options&gt;Grep-extract下添加一个响应匹配，比如说我一个请求页需要前一个响应页中的内容，这里就可以这样使用了。</p>\n<h3 id=\"9-Dates\"><a href=\"#9-Dates\" class=\"headerlink\" title=\"9.Dates\"></a>9.Dates</h3><p>时间、日期</p>\n<h3 id=\"10-Null-payloads\"><a href=\"#10-Null-payloads\" class=\"headerlink\" title=\"10.Null payloads\"></a>10.Null payloads</h3><p>这种攻击载荷产生有效载荷，其值是一个空字符串。当某种攻击请求需要反复发送同样的请求，但这种请求相对于基本请求是没有任何修改，这种攻击载荷产生有效载荷，这可用于各种攻击，例如采集 cookies来进行测序分析；应用层的拒绝服务攻击，这些请求被重复发送，导致服务器上产生高工作负荷的任务，或保活会话令牌，以便这些令牌在其它的间歇试验中使用。使用此载荷类型，它甚至没有必要在请求模板中标志有效载荷位置。您可以配置Burp产生一定特定数目的空有效载荷，或无限期地持续下去。当然我们也可以使用数字、日期等其他方式产生大量的连接，导致服务器的负载过高。</p>\n<h2 id=\"Attack-type（爆破方式）\"><a href=\"#Attack-type（爆破方式）\" class=\"headerlink\" title=\"Attack type（爆破方式）\"></a>Attack type（爆破方式）</h2><p><img src=\"/post/tooluse(bp-bruce)/image-20220710224734912.png\" alt=\"image-20220710224734912\"></p>\n<h3 id=\"1-Sniper\"><a href=\"#1-Sniper\" class=\"headerlink\" title=\"1.Sniper\"></a>1.Sniper</h3><p> 这个是我们最常用的，Sniper是狙击手的意思。这个模式会使用单一的payload【就是导入字典的payload】组。它会针对每个position中$$位置设置payload。这种攻击类型适合对常见漏洞中的请求参数单独地进行测试。攻击中的请求总数应该是position数量和payload数量的乘积。</p>\n<h3 id=\"2-Battering-ram\"><a href=\"#2-Battering-ram\" class=\"headerlink\" title=\"2.Battering ram\"></a>2.Battering ram</h3><p> 这一模式是使用单一的payload组。它会重复payload并且一次把所有相同的payload放入指定的位置中。这种攻击适合那种需要在请求中把相同的输入放到多个位置的情况。请求的总数是payload组中payload的总数。简单说就是一个playload字典同时应用到多个position中。</p>\n<h3 id=\"3-Pitchfork\"><a href=\"#3-Pitchfork\" class=\"headerlink\" title=\"3.Pitchfork\"></a>3.Pitchfork</h3><p>这一模式是使用多个payload组。对于定义的位置可以使用不同的payload组。攻击会同步迭代所有的payload组，把payload放入每个定义的位置中。比如：position中A处有a字典，B处有b字典，则a【1】将会对应b【1】进行attack处理，这种攻击类型非常适合那种不同位置中需要插入不同但相关的输入的情况。请求的数量应该是最小的payload组中的payload数量。</p>\n<h3 id=\"4-Cluster-bomb\"><a href=\"#4-Cluster-bomb\" class=\"headerlink\" title=\"4.Cluster bomb\"></a>4.Cluster bomb</h3><p>这种模式会使用多个payload组。每个定义的位置中有不同的payload组。攻击会迭代每个payload组，每种payload组合都会被测试一遍。比如：position中A处有a字典，B处有b字典，则两个字典将会循环搭配组合进行attack处理这种攻击适用于那种位置中需要不同且不相关或者未知的输入的攻击。攻击请求的总数是各payload组中payload数量的乘积。（即可以在用户名和密码两处用两个字典爆破）</p>\n","text":"顺便记一下，免得后面到处翻 Burpsuite密码爆破虽然不知道这个网站是那位大佬总结建立的，但还是很感谢，节省很多时间，这个网站提供了很全面的密码表 http...","permalink":"/post/tooluse(bp-bruce)","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"daily","slug":"daily","count":7,"path":"api/categories/daily.json"}],"tags":[{"name":"tools","slug":"tools","count":3,"path":"api/tags/tools.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Burpsuite%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4\"><span class=\"toc-text\">Burpsuite密码爆破</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#payload\"><span class=\"toc-text\">payload</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Simple-list\"><span class=\"toc-text\">1.Simple list</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Brute-forcer\"><span class=\"toc-text\">2.Brute forcer</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Numbers\"><span class=\"toc-text\">3.Numbers</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-Runtime-file\"><span class=\"toc-text\">4.Runtime file</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-Custom-iterator\"><span class=\"toc-text\">5.Custom iterator</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-Character-substitution\"><span class=\"toc-text\">6.Character substitution</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-Case-modification\"><span class=\"toc-text\">7.Case modification</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-Recursivegrep\"><span class=\"toc-text\">8.Recursivegrep</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-Dates\"><span class=\"toc-text\">9.Dates</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-Null-payloads\"><span class=\"toc-text\">10.Null payloads</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-type%EF%BC%88%E7%88%86%E7%A0%B4%E6%96%B9%E5%BC%8F%EF%BC%89\"><span class=\"toc-text\">Attack type（爆破方式）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Sniper\"><span class=\"toc-text\">1.Sniper</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Battering-ram\"><span class=\"toc-text\">2.Battering ram</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Pitchfork\"><span class=\"toc-text\">3.Pitchfork</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-Cluster-bomb\"><span class=\"toc-text\">4.Cluster bomb</span></a></li></ol></li></ol></li></ol>","author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Linux特殊权限位","uid":"d53bf67246a8c4a76e68bac4081733fd","slug":"Linux-PowerUp","date":"2023-02-13T13:47:50.911Z","updated":"2023-08-13T02:38:53.439Z","comments":true,"path":"api/articles/Linux-PowerUp.json","keywords":null,"cover":"/img/17.jpg","text":"linux提权学习 Linux提权参考文章 1）利用SUID提权什么是suid？ Set User ID的一种权限类型，允许用户使用指定的用户权限执行文件。那些...","permalink":"/post/Linux-PowerUp","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"daily","slug":"daily","count":7,"path":"api/categories/daily.json"}],"tags":[{"name":"提权","slug":"提权","count":2,"path":"api/tags/提权.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"常用工具的使用","uid":"e73809883b6a370bf3f1acefc7116657","slug":"tooluse(Commontools)","date":"2023-02-13T13:31:12.814Z","updated":"2023-08-06T08:00:47.219Z","comments":true,"path":"api/articles/tooluse(Commontools).json","keywords":null,"cover":"/img/27.jpg","text":"记性不好记录一下 常用工具的使用1）msf（1）msf基本使用一个漏洞利用框架,对计算机软件漏洞进行攻击 这里以vulnhub dc1为例 终端输入msfcon...","permalink":"/post/tooluse(Commontools)","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"daily","slug":"daily","count":7,"path":"api/categories/daily.json"}],"tags":[{"name":"tools","slug":"tools","count":3,"path":"api/tags/tools.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}