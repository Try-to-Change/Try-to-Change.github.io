{"title":"代码审计知识点记录","uid":"0fbb4ce471f03133d4bc00eb32aefb3b","slug":"Code-audit","date":"2022-06-26T14:34:42.604Z","updated":"2023-08-06T07:35:05.550Z","comments":true,"path":"api/articles/Code-audit.json","keywords":null,"cover":"/img/3.jpg","content":"<p><code>代码审计学习的一些笔记</code></p>\n<span id=\"more\"></span>\n\n<h1 id=\"代码审计-常见php威胁函数（上）\"><a href=\"#代码审计-常见php威胁函数（上）\" class=\"headerlink\" title=\"代码审计-常见php威胁函数（上）\"></a>代码审计-常见php威胁函数（上）</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>文章来自<a href=\"https://baijiahao.baidu.com/s?id=1715285716686081123&wfr=spider&for=pc\">成都知道创宇</a></p></blockquote>\n<h2 id=\"1-常见php回调函数，可调用其他命令-代码执行函数\"><a href=\"#1-常见php回调函数，可调用其他命令-代码执行函数\" class=\"headerlink\" title=\"1.常见php回调函数，可调用其他命令&#x2F;代码执行函数\"></a>1.常见php回调函数，可调用其他命令&#x2F;代码执行函数</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">call_user_func</span><span class=\"params\">()</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">call_user_func_array</span><span class=\"params\">()</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">create_function</span><span class=\"params\">()</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">array_walk</span><span class=\"params\">()</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">array_map</span><span class=\"params\">()</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">array_filter</span><span class=\"params\">()</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">usort</span><span class=\"params\">()</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ob_start</span><span class=\"params\">()</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">可变函数$_GET<span class=\"selector-attr\">[<span class=\"string\">&#x27;a&#x27;</span>]</span>($_GET<span class=\"selector-attr\">[<span class=\"string\">&#x27;b&#x27;</span>]</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-常见php可执行系统命令的函数：\"><a href=\"#2-常见php可执行系统命令的函数：\" class=\"headerlink\" title=\"2.常见php可执行系统命令的函数：\"></a>2.常见php可执行系统命令的函数：</h2><p>system()、passthru()、exec()、shell_exec()、 pcntl_exec()、popen()、proc_open()</p>\n<h2 id=\"3-常见php可代码执行的函数：\"><a href=\"#3-常见php可代码执行的函数：\" class=\"headerlink\" title=\"3.常见php可代码执行的函数：\"></a>3.常见php可代码执行的函数：</h2><p>eval()、assert()、preg_replace()、$</p>\n<h2 id=\"4-禁用危险函数：\"><a href=\"#4-禁用危险函数：\" class=\"headerlink\" title=\"4.禁用危险函数：\"></a>4.禁用危险函数：</h2><p>php配置文件php.ini里有个disable_functions &#x3D; 配置选项，可自定义禁用某些php危险函数.如:disable_functions &#x3D;system,passthru,shell_exec,exec,popen</p>\n<h2 id=\"一、可执行php代码的函数\"><a href=\"#一、可执行php代码的函数\" class=\"headerlink\" title=\"一、可执行php代码的函数\"></a>一、可执行php代码的函数</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"keyword\">eval</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]); <span class=\"title function_ invoke__\">assert</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]); <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>php 7.1.7 ，已经无法用call_user_func回调调用 test.php?cmd&#x3D;phpinfo(); preg_replace()  5.6以下可以执行 5.6以上仍然可以执行，但是会有警告 PHP7后已经不支持&#x2F;e修饰符  preg_replace(“&#x2F;test&#x2F;e”,$_GET[“h”],”jutst test”); &#x2F;&#x2F;将jutst  test以&#x2F;test正则匹配以h来替换 &#x2F;e 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码  ?h&#x3D;phpinfo() ${phpinfo()}</p>\n<h2 id=\"二、常见php回调函数，可调用其他命令-代码执行函数：\"><a href=\"#二、常见php回调函数，可调用其他命令-代码执行函数：\" class=\"headerlink\" title=\"二、常见php回调函数，可调用其他命令&#x2F;代码执行函数：\"></a>二、常见php回调函数，可调用其他命令&#x2F;代码执行函数：</h2><h3 id=\"1-call-user-func\"><a href=\"#1-call-user-func\" class=\"headerlink\" title=\"1) call_user_func()\"></a>1) call_user_func()</h3><p><code>call_user_func</code> — 把第一个参数作为回调函数调用, 其余参数是回调函数的参数</p>\n<h4 id=\"回调函数\"><a href=\"#回调函数\" class=\"headerlink\" title=\"回调函数\"></a>回调函数</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a1&#x27;</span>],<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a2&#x27;</span>]);</span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a1=system&amp;a2=whoami  //命令执行</span></span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a1=assert&amp;a2=phpinfo()   //代码执行 </span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"调用类中的函数\"><a href=\"#调用类中的函数\" class=\"headerlink\" title=\"调用类中的函数\"></a>调用类中的函数</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfshow</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;private class&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFlag</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&quot;flag.php&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;ctfshow&#x27;</span>]);</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">php中 -&gt;与::</span> 调用类中的成员的区别</span><br><span class=\"line\"></span><br><span class=\"line\"> -&gt;用于动态语境处理某个类的某个实例</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"title\"> ::</span>可以调用一个静态的、不依赖于其他初始化的类方法.</span><br></pre></td></tr></table></figure>\n\n<p>所以这里<code>payload</code>为</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">ctfshow</span>=ctfshow::getFlag</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"调用类中的函数【数组】\"><a href=\"#调用类中的函数【数组】\" class=\"headerlink\" title=\"调用类中的函数【数组】\"></a>调用类中的函数【数组】</h4><figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">call_user_func()参数不仅可以是字符串，还有 数组形式！</span><br><span class=\"line\"></span><br><span class=\"line\">call_user_func(<span class=\"built_in\">array</span>(<span class=\"symbol\">$class</span>name, <span class=\"string\">&#x27;say_hello&#x27;</span>));</span><br><span class=\"line\">调用classname这个类里的sya_hello方法</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">array</span>[<span class=\"number\">0</span>]=<span class=\"symbol\">$class</span>name  类名</span><br><span class=\"line\"><span class=\"built_in\">array</span>[<span class=\"number\">1</span>]=say_hello   say_hello()方法</span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">按照上述格式得到payload：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">ctfshow[]=ctfshow&amp;ctfshow[]=getFlag   #POST</span></span></code></pre></div><h3 id=\"2-call-user-func-array\"><a href=\"#2-call-user-func-array\" class=\"headerlink\" title=\"2)call_user_func_array()\"></a>2)call_user_func_array()</h3><p>call_user_func_array()把第一个参数作为回调函数（callback）调用，把参数数组作（param_arr）为回调函数的的参数传入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">call_user_func_array</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a1&#x27;</span>],<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a2&#x27;</span>]);</span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a1=system&amp;a2[]=whoami</span></span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a1=assert&amp;a2[]=phpinfo()</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-create-function\"><a href=\"#3-create-function\" class=\"headerlink\" title=\"3)create_function()\"></a>3)create_function()</h3><p>创建匿名函数（Anonymous functions），允许 临时创建一个没有指定名称的函数。最经常用作回调函数（callback）参数的值</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"title function_ invoke__\">create_function</span>(<span class=\"string\">&#x27;&#x27;</span>, @<span class=\"variable\">$_REQUEST</span>[<span class=\"string\">&#x27;a&#x27;</span>]);<span class=\"variable\">$b</span>();</span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a=phpinfo();</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-array-walk\"><a href=\"#4-array-walk\" class=\"headerlink\" title=\"4) array_walk()\"></a>4) array_walk()</h3><p>array_walk — 使用用户自定义函数对数组中的每个元素做回调处理</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_walk</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>],<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>]);</span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a[]=phpinfo()&amp;b=assert</span></span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a[]=whoami&amp;b=system</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-array-map\"><a href=\"#5-array-map\" class=\"headerlink\" title=\"5)array_map()\"></a>5)array_map()</h3><p>array_map()为数组的每个元素应用回调函数。返回数组，是为 array1 每个元素应用 callback函数之后的数组。callback 函数形参的数量和传给 array_map() 数组数量，两者必须一样。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_map</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>],<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>]);</span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a=system&amp;b[]=whoami</span></span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a=assert&amp;b[]=phpinfo()</span></span><br><span class=\"line\"><span class=\"comment\">//$array = array(0,1,2,3,4,5);</span></span><br><span class=\"line\"><span class=\"comment\">//array_map($_GET[&#x27;a&#x27;],$array);</span></span><br><span class=\"line\"><span class=\"comment\">//.php?a=phpinfo </span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-array-filter\"><a href=\"#6-array-filter\" class=\"headerlink\" title=\"6) array_filter()\"></a>6) array_filter()</h3><p>array_filter()用回调函数过滤数组中的单元。依次将 array 数组中的每个值传递到 callback 函数。如果 callback 函数返回 true， 则 array 数组的当前值会被包含在返回的结果数组中。数组的键名保留不变。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_filter</span>(<span class=\"keyword\">array</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]),<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;func&#x27;</span>]);</span><br><span class=\"line\"><span class=\"comment\">//?func=system&amp;cmd=whoami</span></span><br><span class=\"line\"><span class=\"comment\">//?func=assert&amp;cmd=phpinfo() </span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-可变函数-var-args\"><a href=\"#7-可变函数-var-args\" class=\"headerlink\" title=\"7) 可变函数$var(args)\"></a>7) 可变函数$var(args)</h3><p>PHP 支持可变函数的概念。如果一个变量名后有圆括号，PHP 将寻找与变量的值同名的函数， 并且尝试执行它。可变函数可以用来实现包括回调函数，函数表在内的一些用途。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>](<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>]);</span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a=system&amp;b=whoami</span></span><br><span class=\"line\"><span class=\"comment\">//xxx?a=assert&amp;b=phpinfo()</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-usort\"><a href=\"#8-usort\" class=\"headerlink\" title=\"8) usort()\"></a>8) usort()</h3><p>本函数将用用户自定义的比较函数对一个数组中的值进行排序 php5.6之前可以</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">usort</span>(...<span class=\"variable\">$_GET</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload: <span class=\"number\">1</span>.php?<span class=\"number\">1</span>[<span class=\"number\">0</span>]=<span class=\"number\">0</span>&amp;<span class=\"number\">1</span>[<span class=\"number\">1</span>]=<span class=\"keyword\">eval</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;x&#x27;</span>])&amp;<span class=\"number\">2</span>=assert POST传参: x=<span class=\"title function_ invoke__\">phpinfo</span>();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9）uasort\"><a href=\"#9）uasort\" class=\"headerlink\" title=\"9）uasort\"></a>9）uasort</h3><p>php5.6 php7不可以</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$onearray</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;Ameng&#x27;</span>, <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;x&#x27;</span>]);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">uasort</span>(<span class=\"variable\">$onearray</span>, <span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">payload: <span class=\"number\">1</span>.php?a=assert POST传参: x=<span class=\"title function_ invoke__\">phpinfo</span>();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10）ob-start\"><a href=\"#10）ob-start\" class=\"headerlink\" title=\"10）ob_start\"></a>10）ob_start</h3><p>ob_start — 打开输出控制缓冲</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"variable\">$foobar</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>];</span><br><span class=\"line\"><span class=\"title function_ invoke__\">ob_start</span>(<span class=\"variable\">$foobar</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;h&#x27;</span>];</span><br><span class=\"line\"><span class=\"title function_ invoke__\">ob_end_flush</span>(); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">/test.php?h=whoami&amp;b=system</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、常见php可执行系统命令的函数：\"><a href=\"#三、常见php可执行系统命令的函数：\" class=\"headerlink\" title=\"三、常见php可执行系统命令的函数：\"></a>三、常见php可执行系统命令的函数：</h2><h3 id=\"1-system\"><a href=\"#1-system\" class=\"headerlink\" title=\"1) system()\"></a>1) system()</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>]); <span class=\"comment\">//xxx.php?a=whoami ?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-passthru\"><a href=\"#2-passthru\" class=\"headerlink\" title=\"2) passthru()\"></a>2) passthru()</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"title function_ invoke__\">passthru</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>]); <span class=\"comment\">//xxx.php?a=whoami ?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-exec\"><a href=\"#3-exec\" class=\"headerlink\" title=\"3) exec()\"></a>3) exec()</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"variable\">$output</span> = <span class=\"title function_ invoke__\">exec</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>]);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;pre&gt;<span class=\"subst\">$output</span>&lt;/pre&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a=whoami </span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-shell-exec\"><a href=\"#4-shell-exec\" class=\"headerlink\" title=\"4) shell_exec()\"></a>4) shell_exec()</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$output</span> = <span class=\"title function_ invoke__\">shell_exec</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>]);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;pre&gt;<span class=\"subst\">$output</span>&lt;/pre&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//xxx.php?a=whoami </span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-pcntl-exec\"><a href=\"#5-pcntl-exec\" class=\"headerlink\" title=\"5) pcntl_exec()\"></a>5) pcntl_exec()</h3><p>要求：linux系统特有模块，需编译选项中存在—enable-pcntl</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"title function_ invoke__\">pcntl_exec</span>( <span class=\"string\">&quot;/bin/bash&quot;</span> , <span class=\"keyword\">array</span>(<span class=\"string\">&quot;whoami&quot;</span>)); <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-popen\"><a href=\"#6-popen\" class=\"headerlink\" title=\"6) popen()\"></a>6) popen()</h3><p>popen — 打开进程文件指针。打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">popen — 打开进程文件指针。打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$test</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;h&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$fp</span> = <span class=\"title function_ invoke__\">popen</span>(<span class=\"variable\">$test</span>,<span class=\"string\">&quot;r&quot;</span>);  <span class=\"comment\">//popen打一个进程通道</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (!<span class=\"title function_ invoke__\">feof</span>(<span class=\"variable\">$fp</span>)) &#123;      <span class=\"comment\">//从通道取出内容</span></span><br><span class=\"line\"><span class=\"variable\">$out</span> = <span class=\"title function_ invoke__\">fgets</span>(<span class=\"variable\">$fp</span>, <span class=\"number\">4096</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span>  <span class=\"variable\">$out</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">pclose</span>(<span class=\"variable\">$fp</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-proc-open\"><a href=\"#7-proc-open\" class=\"headerlink\" title=\"7) proc_open()\"></a>7) proc_open()</h3><p>类似 popen() 函数， 但是 proc_open() 提供了更加强大的控制程序执行的能力</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类似 <span class=\"title function_ invoke__\">popen</span>() 函数， 但是 <span class=\"title function_ invoke__\">proc_open</span>() 提供了更加强大的控制程序执行的能力</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$test</span> = <span class=\"string\">&quot;whoami&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$array</span> =   <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"keyword\">array</span>(<span class=\"string\">&quot;pipe&quot;</span>,<span class=\"string\">&quot;r&quot;</span>),   <span class=\"comment\">//标准输入</span></span><br><span class=\"line\"><span class=\"keyword\">array</span>(<span class=\"string\">&quot;pipe&quot;</span>,<span class=\"string\">&quot;w&quot;</span>),   <span class=\"comment\">//标准输出内容</span></span><br><span class=\"line\"><span class=\"keyword\">array</span>(<span class=\"string\">&quot;pipe&quot;</span>,<span class=\"string\">&quot;w&quot;</span>)    <span class=\"comment\">//标准输出错误</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"variable\">$fp</span> = <span class=\"title function_ invoke__\">proc_open</span>(<span class=\"variable\">$test</span>,<span class=\"variable\">$array</span>,<span class=\"variable\">$pipes</span>);   <span class=\"comment\">//打开一个进程通道</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">stream_get_contents</span>(<span class=\"variable\">$pipes</span>[<span class=\"number\">1</span>]);    <span class=\"comment\">//为什么是$pipes[1]，因为1是输出内容</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">proc_close</span>(<span class=\"variable\">$fp</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-反单引号\"><a href=\"#8-反单引号\" class=\"headerlink\" title=\"8) 反单引号\"></a>8) 反单引号</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> `whoami`; <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、文件包含\"><a href=\"#四、文件包含\" class=\"headerlink\" title=\"四、文件包含\"></a>四、文件包含</h2><p>include将会包含语句并执行指定文件 PHP的配置文件allowurlfopen和allow_url_include设置为ON  include&#x2F;require等包含函数可以加载远程文件 include include_once requeire require_once  </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(__FILE);</span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$file</span>; </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、php伪协议【web-study已记】\"><a href=\"#五、php伪协议【web-study已记】\" class=\"headerlink\" title=\"五、php伪协议【web-study已记】\"></a>五、<a href=\"../../../../Web-study\">php伪协议【web-study已记】</a></h2><h2 id=\"六、文件操作类威胁函数\"><a href=\"#六、文件操作类威胁函数\" class=\"headerlink\" title=\"六、文件操作类威胁函数\"></a>六、文件操作类威胁函数</h2><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"selector-class\">.file_put_contents</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span><span class=\"selector-class\">.file_put_contents</span>($file, $string);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span><span class=\"selector-class\">.copy</span> <span class=\"built_in\">highlight_file</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4</span><span class=\"selector-class\">.fopen</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5</span><span class=\"selector-class\">.read</span> <span class=\"built_in\">file</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">6</span><span class=\"selector-class\">.fread</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">7</span><span class=\"selector-class\">.fgetss</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">8</span><span class=\"selector-class\">.fgets</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">9</span><span class=\"selector-class\">.parse_ini_file</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">10</span><span class=\"selector-class\">.show_source</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">11</span><span class=\"selector-class\">.file</span>()</span><br></pre></td></tr></table></figure>\n\n","text":"代码审计学习的一些笔记 代码审计-常见php威胁函数（上） 文章来自成都知道创宇 1.常见php回调函数，可调用其他命令&#x2F;代码执行函数12345678...","permalink":"/post/Code-audit","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":1,"path":"api/tags/代码审计.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-%E5%B8%B8%E8%A7%81php%E5%A8%81%E8%83%81%E5%87%BD%E6%95%B0%EF%BC%88%E4%B8%8A%EF%BC%89\"><span class=\"toc-text\">代码审计-常见php威胁函数（上）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%B8%B8%E8%A7%81php%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%EF%BC%8C%E5%8F%AF%E8%B0%83%E7%94%A8%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">1.常见php回调函数，可调用其他命令&#x2F;代码执行函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%B8%B8%E8%A7%81php%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%9A\"><span class=\"toc-text\">2.常见php可执行系统命令的函数：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%B8%B8%E8%A7%81php%E5%8F%AF%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%9A\"><span class=\"toc-text\">3.常见php可代码执行的函数：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E7%A6%81%E7%94%A8%E5%8D%B1%E9%99%A9%E5%87%BD%E6%95%B0%EF%BC%9A\"><span class=\"toc-text\">4.禁用危险函数：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%8F%AF%E6%89%A7%E8%A1%8Cphp%E4%BB%A3%E7%A0%81%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">一、可执行php代码的函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%B8%B8%E8%A7%81php%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%EF%BC%8C%E5%8F%AF%E8%B0%83%E7%94%A8%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%EF%BC%9A\"><span class=\"toc-text\">二、常见php回调函数，可调用其他命令&#x2F;代码执行函数：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-call-user-func\"><span class=\"toc-text\">1) call_user_func()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">回调函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8%E7%B1%BB%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">调用类中的函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8%E7%B1%BB%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0%E3%80%90%E6%95%B0%E7%BB%84%E3%80%91\"><span class=\"toc-text\">调用类中的函数【数组】</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-call-user-func-array\"><span class=\"toc-text\">2)call_user_func_array()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-create-function\"><span class=\"toc-text\">3)create_function()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-array-walk\"><span class=\"toc-text\">4) array_walk()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-array-map\"><span class=\"toc-text\">5)array_map()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-array-filter\"><span class=\"toc-text\">6) array_filter()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E5%8F%AF%E5%8F%98%E5%87%BD%E6%95%B0-var-args\"><span class=\"toc-text\">7) 可变函数$var(args)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-usort\"><span class=\"toc-text\">8) usort()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9%EF%BC%89uasort\"><span class=\"toc-text\">9）uasort</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10%EF%BC%89ob-start\"><span class=\"toc-text\">10）ob_start</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%B8%B8%E8%A7%81php%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%9A\"><span class=\"toc-text\">三、常见php可执行系统命令的函数：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-system\"><span class=\"toc-text\">1) system()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-passthru\"><span class=\"toc-text\">2) passthru()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-exec\"><span class=\"toc-text\">3) exec()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-shell-exec\"><span class=\"toc-text\">4) shell_exec()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-pcntl-exec\"><span class=\"toc-text\">5) pcntl_exec()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-popen\"><span class=\"toc-text\">6) popen()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-proc-open\"><span class=\"toc-text\">7) proc_open()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E5%8F%8D%E5%8D%95%E5%BC%95%E5%8F%B7\"><span class=\"toc-text\">8) 反单引号</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB\"><span class=\"toc-text\">四、文件包含</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81php%E4%BC%AA%E5%8D%8F%E8%AE%AE%E3%80%90web-study%E5%B7%B2%E8%AE%B0%E3%80%91\"><span class=\"toc-text\">五、php伪协议【web-study已记】</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%B1%BB%E5%A8%81%E8%83%81%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">六、文件操作类威胁函数</span></a></li></ol></li></ol>","author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"加密密文特征","uid":"925fed3a18c07a3de0254ce9178a9827","slug":"Encrypted-ciphertext-features","date":"2022-07-21T09:45:54.374Z","updated":"2023-08-06T07:35:24.468Z","comments":true,"path":"api/articles/Encrypted-ciphertext-features.json","keywords":null,"cover":"/img/6.jpg","text":"原文链接 1、MD5——示例21232F297A57A5A743894A0E4A801FC3 一般MD5值是32位由数字0-9和字母a-f所组成的字符串，如图。...","permalink":"/post/Encrypted-ciphertext-features","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"crypto&misc","slug":"crypto-misc","count":2,"path":"api/tags/crypto-misc.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"线下靶场学习","uid":"03851902a32973532ebe881c76b9c075","slug":"underline-learning","date":"2022-06-21T14:06:24.391Z","updated":"2023-08-06T08:00:55.587Z","comments":true,"path":"api/articles/underline-learning.json","keywords":null,"cover":"/img/29.jpg","text":"为什么学习线下靶场，因为线下靶场相比更加容易理解漏洞入门， 而且可以看到网站的源码，从而可以锻炼代码审计能力，找出漏洞的成因， 尝试自己提出绕过或者防御的措施，...","permalink":"/post/underline-learning","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"靶场","slug":"靶场","count":5,"path":"api/tags/靶场.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}