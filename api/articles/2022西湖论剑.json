{"title":"西湖论剑2022-wp","uid":"3e22a855be290895a6fbe5843d97f92e","slug":"2022西湖论剑","date":"2023-02-14T05:04:26.911Z","updated":"2023-08-25T02:09:35.567Z","comments":true,"path":"api/articles/2022西湖论剑.json","keywords":null,"cover":"/img/36.jpg","content":"<p><code>麻了，我也想在比赛时输出，而不是比赛后</code></p>\n<span id=\"more\"></span>\n\n<h1 id=\"西湖论剑2022\"><a href=\"#西湖论剑2022\" class=\"headerlink\" title=\"西湖论剑2022\"></a>西湖论剑2022</h1><h2 id=\"real-ez-node\"><a href=\"#real-ez-node\" class=\"headerlink\" title=\"real_ez_node\"></a>real_ez_node</h2><p>启动环境后页面</p>\n<p><img src=\"/post/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%9/image-20230412201904728.png\" alt=\"image-20230412201904728\"></p>\n<p>ejs猜测是原型链污染</p>\n<p>分析一下代码</p>\n<p><code>app.js</code></p>\n<pre class=\" language-highlight js\"><span class=\"keyword\">var</span> createError = <span class=\"built_in\">require</span>(<span class=\"string\"><code class=\"language-highlight js\"><span class=\"keyword\">var</span> createError = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http-errors&#x27;</span>);\n<span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);\n<span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);\n<span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);\n<span class=\"keyword\">const</span> lodash = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;lodash&#x27;</span>)\n<span class=\"keyword\">var</span> cookieParser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;cookie-parser&#x27;</span>);\n<span class=\"keyword\">var</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;morgan&#x27;</span>);\n<span class=\"keyword\">var</span> session = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express-session&#x27;</span>);\n<span class=\"keyword\">var</span> index = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes/index&#x27;</span>);\n<span class=\"keyword\">var</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;body-parser&#x27;</span>);<span class=\"comment\">//解析,用req.body获取post参数</span>\n<span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>();\napp.<span class=\"title function_\">use</span>(bodyParser.<span class=\"title function_\">json</span>());\napp.<span class=\"title function_\">use</span>(bodyParser.<span class=\"title function_\">urlencoded</span>(&#123;<span class=\"attr\">extended</span>: <span class=\"literal\">false</span>&#125;));\napp.<span class=\"title function_\">use</span>(<span class=\"title function_\">cookieParser</span>());\napp.<span class=\"title function_\">use</span>(<span class=\"title function_\">session</span>(&#123;\n  secret : <span class=\"string\">&#x27;secret&#x27;</span>, <span class=\"comment\">// 对session id 相关的cookie 进行签名</span>\n  resave : <span class=\"literal\">true</span>,\n  <span class=\"attr\">saveUninitialized</span>: <span class=\"literal\">false</span>, <span class=\"comment\">// 是否保存未初始化的会话</span>\n  cookie : &#123;\n    maxAge : <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">3</span>, <span class=\"comment\">// 设置 session 的有效时间，单位毫秒</span>\n  &#125;,\n&#125;));\n<span class=\"comment\">// view engine setup</span>\napp.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;views&#x27;</span>, path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;views&#x27;</span>));\napp.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;view engine&#x27;</span>, <span class=\"string\">&#x27;ejs&#x27;</span>);\n<span class=\"comment\">// app.engine(&#x27;ejs&#x27;, function (filePath, options, callback) &#123;    // 设置使用 ejs 模板引擎 </span>\n<span class=\"comment\">//   fs.readFile(filePath, (err, content) => &#123;</span>\n<span class=\"comment\">//       if (err) return callback(new Error(err))</span>\n<span class=\"comment\">//       let compiled = lodash.template(content)    // 使用 lodash.template 创建一个预编译模板方法供后面使用</span>\n<span class=\"comment\">//       let rendered = compiled()</span>\n\n<span class=\"comment\">//       return callback(null, rendered)</span>\n<span class=\"comment\">//   &#125;)</span>\n<span class=\"comment\">// &#125;);</span>\napp.<span class=\"title function_\">use</span>(<span class=\"title function_\">logger</span>(<span class=\"string\">&#x27;dev&#x27;</span>));\napp.<span class=\"title function_\">use</span>(express.<span class=\"title function_\">static</span>(path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;public&#x27;</span>)));\napp.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/&#x27;</span>, index);\n<span class=\"comment\">// app.use(&#x27;/challenge7&#x27;, challenge7);</span>\n<span class=\"comment\">// catch 404 and forward to error handler</span>\napp.<span class=\"title function_\">use</span>(<span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) &#123;\n  <span class=\"title function_\">next</span>(<span class=\"title function_\">createError</span>(<span class=\"number\">404</span>));\n&#125;);\n\n<span class=\"comment\">// error handler</span>\napp.<span class=\"title function_\">use</span>(<span class=\"keyword\">function</span>(<span class=\"params\">err, req, res, next</span>) &#123;\n  <span class=\"comment\">// set locals, only providing error in development</span>\n  res.<span class=\"property\">locals</span>.<span class=\"property\">message</span> = err.<span class=\"property\">message</span>;\n  res.<span class=\"property\">locals</span>.<span class=\"property\">error</span> = req.<span class=\"property\">app</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;env&#x27;</span>) === <span class=\"string\">&#x27;development&#x27;</span> ? err : &#123;&#125;;\n\n  <span class=\"comment\">// render the error page</span>\n  res.<span class=\"title function_\">status</span>(err.<span class=\"property\">status</span> || <span class=\"number\">500</span>);\n  res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;error&#x27;</span>);\n&#125;);\n\n<span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = app;\n</code></pre>\n\n<p><code>route/index.js</code></p>\n<pre class=\" language-highlight js\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\"><code class=\"language-highlight js\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);\n<span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>);\n<span class=\"keyword\">var</span> router = express.<span class=\"title class_\">Router</span>();\n<span class=\"keyword\">const</span> safeobj = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;safe-obj&#x27;</span>);\nrouter.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=></span>&#123;\n  <span class=\"keyword\">if</span> (req.<span class=\"property\">query</span>.<span class=\"property\">q</span>) &#123;\n    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;get q&#x27;</span>);\n  &#125;\n  res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;index&#x27;</span>);\n&#125;)\nrouter.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/copy&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,res</span>)=></span>&#123;\n  res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&#x27;Content-type&#x27;</span>,<span class=\"string\">&#x27;text/html;charset=utf-8&#x27;</span>)\n  <span class=\"keyword\">var</span> ip = req.<span class=\"property\">connection</span>.<span class=\"property\">remoteAddress</span>;\n  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(ip);\n  <span class=\"keyword\">var</span> obj = &#123;\n      <span class=\"attr\">msg</span>: <span class=\"string\">&#x27;&#x27;</span>,\n  &#125;\n  <span class=\"keyword\">if</span> (!ip.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;127.0.0.1&#x27;</span>)) &#123;\n      obj.<span class=\"property\">msg</span>=<span class=\"string\">\"only for admin\"</span>\n      res.<span class=\"title function_\">send</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj));\n      <span class=\"keyword\">return</span> \n  &#125;\n  <span class=\"keyword\">let</span> user = &#123;&#125;;\n  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index <span class=\"keyword\">in</span> req.<span class=\"property\">body</span>) &#123;\n      <span class=\"keyword\">if</span>(!index.<span class=\"title function_\">includes</span>(<span class=\"string\">\"__proto__\"</span>))&#123;\n          safeobj.<span class=\"title function_\">expand</span>(user, index, req.<span class=\"property\">body</span>[index])\n      &#125;\n    &#125;\n  res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;index&#x27;</span>);\n&#125;)\n\nrouter.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/curl&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) &#123;\n    <span class=\"keyword\">var</span> q = req.<span class=\"property\">query</span>.<span class=\"property\">q</span>;\n    <span class=\"keyword\">var</span> resp = <span class=\"string\">\"\"</span>;\n    <span class=\"keyword\">if</span> (q) &#123;\n        <span class=\"keyword\">var</span> url = <span class=\"string\">&#x27;http://localhost:3000/?q=&#x27;</span> + q\n            <span class=\"keyword\">try</span> &#123;\n                http.<span class=\"title function_\">get</span>(url,<span class=\"function\">(<span class=\"params\">res1</span>)=></span>&#123;\n                    <span class=\"keyword\">const</span> &#123; statusCode &#125; = res1;\n                    <span class=\"keyword\">const</span> contentType = res1.<span class=\"property\">headers</span>[<span class=\"string\">&#x27;content-type&#x27;</span>];\n                  \n                    <span class=\"keyword\">let</span> error;\n                    <span class=\"comment\">// 任何 2xx 状态码都表示成功响应，但这里只检查 200。</span>\n                    <span class=\"keyword\">if</span> (statusCode !== <span class=\"number\">200</span>) &#123;\n                      error = <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;Request Failed.\\n&#x27;</span> +\n                                        <span class=\"string\">`Status Code: <span class=\"subst\">$&#123;statusCode&#125;</span>`</span>);\n                    &#125;\n                    <span class=\"keyword\">if</span> (error) &#123;\n                      <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(error.<span class=\"property\">message</span>);\n                      <span class=\"comment\">// 消费响应数据以释放内存</span>\n                      res1.<span class=\"title function_\">resume</span>();\n                      <span class=\"keyword\">return</span>;\n                    &#125;\n                  \n                    res1.<span class=\"title function_\">setEncoding</span>(<span class=\"string\">&#x27;utf8&#x27;</span>);\n                    <span class=\"keyword\">let</span> rawData = <span class=\"string\">&#x27;&#x27;</span>;\n                    res1.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;data&#x27;</span>, <span class=\"function\">(<span class=\"params\">chunk</span>) =></span> &#123; rawData += chunk;\n                    res.<span class=\"title function_\">end</span>(<span class=\"string\">&#x27;request success&#x27;</span>) &#125;);\n                    res1.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;end&#x27;</span>, <span class=\"function\">() =></span> &#123;\n                      <span class=\"keyword\">try</span> &#123;\n                        <span class=\"keyword\">const</span> parsedData = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(rawData);\n                        res.<span class=\"title function_\">end</span>(parsedData+<span class=\"string\">&#x27;&#x27;</span>);\n                      &#125; <span class=\"keyword\">catch</span> (e) &#123;\n                        res.<span class=\"title function_\">end</span>(e.<span class=\"property\">message</span>+<span class=\"string\">&#x27;&#x27;</span>);\n                      &#125;\n                    &#125;);\n                  &#125;).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =></span> &#123;\n                    res.<span class=\"title function_\">end</span>(<span class=\"string\">`Got error: <span class=\"subst\">$&#123;e.message&#125;</span>`</span>);\n                  &#125;)\n                res.<span class=\"title function_\">end</span>(<span class=\"string\">&#x27;ok&#x27;</span>);\n            &#125; <span class=\"keyword\">catch</span> (error) &#123;\n                res.<span class=\"title function_\">end</span>(error+<span class=\"string\">&#x27;&#x27;</span>);\n            &#125;\n    &#125; <span class=\"keyword\">else</span> &#123;\n        res.<span class=\"title function_\">send</span>(<span class=\"string\">\"search param &#x27;q&#x27; missing!\"</span>);\n    &#125;\n&#125;)\n<span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>从<code>app.js</code>中看出是利用</p></blockquote>\n","text":"麻了，我也想在比赛时输出，而不是比赛后 西湖论剑2022real_ez_node启动环境后页面 ejs猜测是原型链污染 分析一下代码 app.js var cr...","permalink":"/post/2022西湖论剑","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"Game","slug":"Game","count":12,"path":"api/tags/Game.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%912022\"><span class=\"toc-text\">西湖论剑2022</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#real-ez-node\"><span class=\"toc-text\">real_ez_node</span></a></li></ol></li></ol>","author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"工具项目编写","uid":"a008a70087e40ad6885d0ce08a94aee5","slug":"tools-making","date":"2023-02-15T04:11:15.439Z","updated":"2023-09-06T12:30:14.700Z","comments":true,"path":"api/articles/tools-making.json","keywords":null,"cover":"/img/25.jpg","text":"主要通过写项目练习一下自己的go语言水平 wfuzzhttps://github.com/try-to-change/wfuzz-ttoc 定义命令行参数，使用...","permalink":"/post/tools-making","photos":[],"count_time":{"symbolsCount":744,"symbolsTime":"1 mins."},"categories":[{"name":"daily","slug":"daily","count":7,"path":"api/categories/daily.json"}],"tags":[{"name":"go语言","slug":"go语言","count":2,"path":"api/tags/go语言.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"强网拟态2022-wp","uid":"e5e8f1b2dedddaa2854454c5662c45e6","slug":"2022强网拟态","date":"2023-02-13T15:23:35.802Z","updated":"2023-09-19T07:59:56.618Z","comments":true,"path":"api/articles/2022强网拟态.json","keywords":null,"cover":"/img/35.jpg","text":"学习学习 强网拟态2022WHOYOUARE这道题目的环境是nodejs，猜考点是原型链污染，其框架根据附件名称可知为fastify 看题目名字和刚打开题目的提...","permalink":"/post/2022强网拟态","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"网络安全学习","slug":"网络安全学习","count":26,"path":"api/categories/网络安全学习.json"}],"tags":[{"name":"Game","slug":"Game","count":12,"path":"api/tags/Game.json"}],"author":{"name":"Ttoc","slug":"blog-author","avatar":"/static/img/logo.png","link":"/","description":"必须从过去的错误学习教训，而非依赖过去的成功","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}